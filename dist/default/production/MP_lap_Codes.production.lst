

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Aug 30 22:08:33 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.40
    75                           ; Generated 17/11/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4620 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  004030                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _sup_pos
   115  004030  01                 	db	1
   116                           
   117                           ;initializer for _pos
   118  004031  01                 	db	1
   119                           
   120                           ;initializer for _RB7_Flag
   121  004032  01                 	db	1
   122                           
   123                           ;initializer for _RB6_Flag
   124  004033  01                 	db	1
   125                           
   126                           ;initializer for _RB5_Flag
   127  004034  01                 	db	1
   128                           
   129                           ;initializer for _RB4_Flag
   130  004035  01                 	db	1
   131                           
   132                           	psect	idataBANK1
   133  003F88                     __pidataBANK1:
   134                           	callstack 0
   135                           
   136                           ;initializer for _port_registers
   137  003F88  80                 	db	128
   138  003F89  0F                 	db	15
   139  003F8A  81                 	db	129
   140  003F8B  0F                 	db	15
   141  003F8C  82                 	db	130
   142  003F8D  0F                 	db	15
   143  003F8E  83                 	db	131
   144  003F8F  0F                 	db	15
   145  003F90  84                 	db	132
   146  003F91  0F                 	db	15
   147                           
   148                           ;initializer for _lat_registers
   149  003F92  89                 	db	137
   150  003F93  0F                 	db	15
   151  003F94  8A                 	db	138
   152  003F95  0F                 	db	15
   153  003F96  8B                 	db	139
   154  003F97  0F                 	db	15
   155  003F98  8C                 	db	140
   156  003F99  0F                 	db	15
   157  003F9A  8D                 	db	141
   158  003F9B  0F                 	db	15
   159                           
   160                           ;initializer for _tris_registers
   161  003F9C  92                 	db	146
   162  003F9D  0F                 	db	15
   163  003F9E  93                 	db	147
   164  003F9F  0F                 	db	15
   165  003FA0  94                 	db	148
   166  003FA1  0F                 	db	15
   167  003FA2  95                 	db	149
   168  003FA3  0F                 	db	15
   169  003FA4  96                 	db	150
   170  003FA5  0F                 	db	15
   171                           
   172                           ;initializer for _operators
   173  003FA6  2F                 	db	47
   174  003FA7  45                 	db	69
   175  003FA8  2A                 	db	42
   176  003FA9  2D                 	db	45
   177  003FAA  2B                 	db	43
   178  003FAB  3D                 	db	61
   179  003FAC  44                 	db	68
   180  003FAD  43                 	db	67
   181                           
   182                           ;initializer for _keypad_1
   183  003FAE  02                 	db	2
   184  003FAF  0A                 	db	10
   185  003FB0  12                 	db	18
   186  003FB1  1A                 	db	26
   187  003FB2  62                 	db	98
   188  003FB3  6A                 	db	106
   189  003FB4  72                 	db	114
   190  003FB5  7A                 	db	122
   191  003FB6  43                 	db	67
   192  003FB7  4B                 	db	75
   193                           
   194                           ;initializer for _lcd_1
   195  003FB8  13                 	db	19
   196  003FB9  1B                 	db	27
   197  003FBA  23                 	db	35
   198  003FBB  2B                 	db	43
   199  003FBC  33                 	db	51
   200  003FBD  3B                 	db	59
   201                           
   202                           	psect	smallconst
   203  001000                     __psmallconst:
   204                           	callstack 0
   205  001000  00                 	db	0
   206  001001                     _btn_values:
   207                           	callstack 0
   208  001001  41                 	db	65
   209  001002  37                 	db	55
   210  001003  38                 	db	56
   211  001004  39                 	db	57
   212  001005  2F                 	db	47
   213  001006  45                 	db	69
   214  001007  42                 	db	66
   215  001008  34                 	db	52
   216  001009  35                 	db	53
   217  00100A  36                 	db	54
   218  00100B  2A                 	db	42
   219  00100C  46                 	db	70
   220  00100D  43                 	db	67
   221  00100E  31                 	db	49
   222  00100F  32                 	db	50
   223  001010  33                 	db	51
   224  001011  2D                 	db	45
   225  001012  46                 	db	70
   226  001013  44                 	db	68
   227  001014  30                 	db	48
   228  001015  2E                 	db	46
   229  001016  3D                 	db	61
   230  001017  2B                 	db	43
   231  001018  47                 	db	71
   232  001019                     __end_of_btn_values:
   233                           	callstack 0
   234  001019  0000               	dw	0
   235  00101B  0000               	dw	0
   236  00101D  CFDC               	dw	53212
   237  00101F  35D1               	dw	13777
   238  001021                     __end_of_dp_l:
   239                           	callstack 0
   240  001021  0000               	dw	0
   241  001023  0000               	dw	0
   242  001025  C000               	dw	49152
   243  001027  3F15               	dw	16149
   244  001029                     __end_of_dp_h:
   245                           	callstack 0
   246  001029  4260               	dw	16992
   247  00102B  0DA2               	dw	3490
   248  00102D                     __end_of_tiny@sqrtf$F2689:
   249                           	callstack 0
   250  00102D  A570               	dw	42352
   251  00102F  36EC               	dw	14060
   252  001031                     __end_of_ivln2_l:
   253                           	callstack 0
   254  001031  AA3B               	dw	43579
   255  001033  3FB8               	dw	16312
   256  001035                     __end_of_ivln2:
   257                           	callstack 0
   258  001035  384F               	dw	14415
   259  001037  3F76               	dw	16246
   260  001039                     __end_of_cp:
   261                           	callstack 0
   262  001039  AA3C               	dw	43580
   263  00103B  3338               	dw	13112
   264  00103D                     __end_of_ovt:
   265                           	callstack 0
   266  00103D  BE8C               	dw	48780
   267  00103F  35BF               	dw	13759
   268  001041                     __end_of_lg2_l:
   269                           	callstack 0
   270  001041  7200               	dw	29184
   271  001043  3F31               	dw	16177
   272  001045                     __end_of_lg2_h:
   273                           	callstack 0
   274  001045  7218               	dw	29208
   275  001047  3F31               	dw	16177
   276  001049                     __end_of_lg2:
   277                           	callstack 0
   278  001049  BB4C               	dw	47948
   279  00104B  3331               	dw	13105
   280  00104D                     __end_of_P5:
   281                           	callstack 0
   282  00104D  EA0E               	dw	59918
   283  00104F  B5DD               	dw	46557
   284  001051                     __end_of_P4:
   285                           	callstack 0
   286  001051  B355               	dw	45909
   287  001053  388A               	dw	14474
   288  001055                     __end_of_P3:
   289                           	callstack 0
   290  001055  0B61               	dw	2913
   291  001057  BB36               	dw	47926
   292  001059                     __end_of_P2:
   293                           	callstack 0
   294  001059  AAAB               	dw	43691
   295  00105B  3E2A               	dw	15914
   296  00105D                     __end_of_P1:
   297                           	callstack 0
   298  00105D  F142               	dw	61762
   299  00105F  3E53               	dw	15955
   300  001061                     __end_of_L6:
   301                           	callstack 0
   302  001061  3255               	dw	12885
   303  001063  3E6C               	dw	15980
   304  001065                     __end_of_L5:
   305                           	callstack 0
   306  001065  A305               	dw	41733
   307  001067  3E8B               	dw	16011
   308  001069                     __end_of_L4:
   309                           	callstack 0
   310  001069  AAAB               	dw	43691
   311  00106B  3EAA               	dw	16042
   312  00106D                     __end_of_L3:
   313                           	callstack 0
   314  00106D  6DB7               	dw	28087
   315  00106F  3EDB               	dw	16091
   316  001071                     __end_of_L2:
   317                           	callstack 0
   318  001071  999A               	dw	39322
   319  001073  3F19               	dw	16153
   320  001075                     __end_of_L1:
   321                           	callstack 0
   322  001075  4260               	dw	16992
   323  001077  0DA2               	dw	3490
   324  001079                     __end_of_tiny:
   325                           	callstack 0
   326  001079  F2CA               	dw	62154
   327  00107B  7149               	dw	29001
   328  00107D                     __end_of_huge:
   329                           	callstack 0
   330  00107D  0000               	dw	0
   331  00107F  4B80               	dw	19328
   332  001081                     __end_of_two24:
   333                           	callstack 0
   334  001081  0000               	dw	0
   335  001083  3F80               	dw	16256
   336  001085  0000               	dw	0
   337  001087  3FC0               	dw	16320
   338  001089                     __end_of_bp:
   339                           	callstack 0
   340  001089  AA00               	dw	43520
   341  00108B  3FB8               	dw	16312
   342  00108D                     __end_of_ivln2_h:
   343                           	callstack 0
   344  00108D  23C6               	dw	9158
   345  00108F  B8F6               	dw	47350
   346  001091                     __end_of_cp_l:
   347                           	callstack 0
   348  001091  4000               	dw	16384
   349  001093  3F76               	dw	16246
   350  001095                     __end_of_cp_h:
   351                           	callstack 0
   352  0000                     _TXREG	set	4013
   353  0000                     _TXSTAbits	set	4012
   354  0000                     _RCREG	set	4014
   355  0000                     _SSPSTATbits	set	4039
   356  0000                     _SSPADD	set	4040
   357  0000                     _TRISCbits	set	3988
   358  0000                     _PORTE	set	3972
   359  0000                     _PORTD	set	3971
   360  0000                     _PORTC	set	3970
   361  0000                     _PORTB	set	3969
   362  0000                     _PORTA	set	3968
   363  0000                     _LATA	set	3977
   364  0000                     _TRISA	set	3986
   365  0000                     _PIE1bits	set	3997
   366  0000                     _PIR1bits	set	3998
   367  0000                     _SSPCON2bits	set	4037
   368  0000                     _SSPCON1bits	set	4038
   369  0000                     _TRISE	set	3990
   370  0000                     _TRISD	set	3989
   371  0000                     _TRISC	set	3988
   372  0000                     _TRISB	set	3987
   373  0000                     _LATE	set	3981
   374  0000                     _LATD	set	3980
   375  0000                     _LATC	set	3979
   376  0000                     _LATB	set	3978
   377  0000                     _T0CONbits	set	4053
   378  0000                     _SSPBUF	set	4041
   379  0000                     _RCSTAbits	set	4011
   380  0000                     _SPBRGH	set	4016
   381  0000                     _SPBRG	set	4015
   382  0000                     _BAUDCONbits	set	4024
   383  001095                     STR_4:
   384  001095  43                 	db	67	;'C'
   385  001096  41                 	db	65	;'A'
   386  001097  53                 	db	83	;'S'
   387  001098  49                 	db	73	;'I'
   388  001099  4F                 	db	79	;'O'
   389  00109A  00                 	db	0
   390  00109B                     STR_1:
   391  00109B  25                 	db	37
   392  00109C  6C                 	db	108	;'l'
   393  00109D  75                 	db	117	;'u'
   394  00109E  00                 	db	0
   395  00109F                     STR_5:
   396  00109F  6C                 	db	108	;'l'
   397  0010A0  64                 	db	100	;'d'
   398  0010A1  00                 	db	0
   399  0010A2                     STR_9:
   400  0010A2  6C                 	db	108	;'l'
   401  0010A3  69                 	db	105	;'i'
   402  0010A4  00                 	db	0
   403  0010A5                     STR_2:
   404  0010A5  25                 	db	37
   405  0010A6  69                 	db	105	;'i'
   406  0010A7  00                 	db	0
   407  0010A8  00                 	db	0	; dummy byte at the end
   408  0000                     
   409                           ; #config settings
   410                           
   411                           	psect	cinit
   412  003AFE                     __pcinit:
   413                           	callstack 0
   414  003AFE                     start_initialization:
   415                           	callstack 0
   416  003AFE                     __initialization:
   417                           	callstack 0
   418                           
   419                           ; Initialize objects allocated to BANK1 (54 bytes)
   420                           ; load TBLPTR registers with __pidataBANK1
   421  003AFE  0E88               	movlw	low __pidataBANK1
   422  003B00  6EF6               	movwf	tblptrl,c
   423  003B02  0E3F               	movlw	high __pidataBANK1
   424  003B04  6EF7               	movwf	tblptrh,c
   425  003B06  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   426  003B08  6EF8               	movwf	tblptru,c
   427  003B0A  EE01  F0A1         	lfsr	0,__pdataBANK1
   428  003B0E  EE10 F036          	lfsr	1,54
   429  003B12                     copy_data0:
   430  003B12  0009               	tblrd		*+
   431  003B14  CFF5 FFEE          	movff	tablat,postinc0
   432  003B18  50E5               	movf	postdec1,w,c
   433  003B1A  50E1               	movf	fsr1l,w,c
   434  003B1C  E1FA               	bnz	copy_data0
   435                           
   436                           ; Initialize objects allocated to BANK0 (6 bytes)
   437                           ; load TBLPTR registers with __pidataBANK0
   438  003B1E  0E30               	movlw	low __pidataBANK0
   439  003B20  6EF6               	movwf	tblptrl,c
   440  003B22  0E40               	movlw	high __pidataBANK0
   441  003B24  6EF7               	movwf	tblptrh,c
   442  003B26  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   443  003B28  6EF8               	movwf	tblptru,c
   444  003B2A  EE00  F0FA         	lfsr	0,__pdataBANK0
   445  003B2E  EE10 F006          	lfsr	1,6
   446  003B32                     copy_data1:
   447  003B32  0009               	tblrd		*+
   448  003B34  CFF5 FFEE          	movff	tablat,postinc0
   449  003B38  50E5               	movf	postdec1,w,c
   450  003B3A  50E1               	movf	fsr1l,w,c
   451  003B3C  E1FA               	bnz	copy_data1
   452                           
   453                           ; Clear objects allocated to BANK2 (100 bytes)
   454  003B3E  EE02  F000         	lfsr	0,__pbssBANK2
   455  003B42  0E64               	movlw	100
   456  003B44                     clear_0:
   457  003B44  6AEE               	clrf	postinc0,c
   458  003B46  06E8               	decf	wreg,f,c
   459  003B48  E1FD               	bnz	clear_0
   460                           
   461                           ; Clear objects allocated to BANK1 (161 bytes)
   462  003B4A  EE01  F000         	lfsr	0,__pbssBANK1
   463  003B4E  0EA1               	movlw	161
   464  003B50                     clear_1:
   465  003B50  6AEE               	clrf	postinc0,c
   466  003B52  06E8               	decf	wreg,f,c
   467  003B54  E1FD               	bnz	clear_1
   468                           
   469                           ; Clear objects allocated to BANK0 (22 bytes)
   470  003B56  EE00  F0E4         	lfsr	0,__pbssBANK0
   471  003B5A  0E16               	movlw	22
   472  003B5C                     clear_2:
   473  003B5C  6AEE               	clrf	postinc0,c
   474  003B5E  06E8               	decf	wreg,f,c
   475  003B60  E1FD               	bnz	clear_2
   476                           
   477                           ; Clear objects allocated to COMRAM (1 bytes)
   478  003B62  6A7F               	clrf	__pbssCOMRAM& (0+255),c
   479  003B64                     end_of_initialization:
   480                           	callstack 0
   481  003B64                     __end_of__initialization:
   482                           	callstack 0
   483  003B64  0100               	movlb	0
   484  003B66  EF55  F008         	goto	_main	;jump to C main() function
   485                           
   486                           	psect	bssCOMRAM
   487  00007F                     __pbssCOMRAM:
   488                           	callstack 0
   489  00007F                     _val:
   490                           	callstack 0
   491  00007F                     	ds	1
   492                           
   493                           	psect	bssBANK0
   494  0000E4                     __pbssBANK0:
   495                           	callstack 0
   496  0000E4                     _width:
   497                           	callstack 0
   498  0000E4                     	ds	2
   499  0000E6                     _prec:
   500                           	callstack 0
   501  0000E6                     	ds	2
   502  0000E8                     _flags:
   503                           	callstack 0
   504  0000E8                     	ds	2
   505  0000EA                     _op:
   506                           	callstack 0
   507  0000EA                     	ds	2
   508  0000EC                     _equal_flag:
   509                           	callstack 0
   510  0000EC                     	ds	1
   511  0000ED                     _res_counter:
   512                           	callstack 0
   513  0000ED                     	ds	1
   514  0000EE                     _flag:
   515                           	callstack 0
   516  0000EE                     	ds	1
   517  0000EF                     _counter:
   518                           	callstack 0
   519  0000EF                     	ds	1
   520  0000F0                     relay_turn_off@F3049:
   521                           	callstack 0
   522  0000F0                     	ds	1
   523  0000F1                     relay_turn_on@F3044:
   524                           	callstack 0
   525  0000F1                     	ds	1
   526  0000F2                     relay_initialize@F3039:
   527                           	callstack 0
   528  0000F2                     	ds	1
   529  0000F3                     led_turn_toggle@F3060:
   530                           	callstack 0
   531  0000F3                     	ds	1
   532  0000F4                     led_turn_off@F3055:
   533                           	callstack 0
   534  0000F4                     	ds	1
   535  0000F5                     led_turn_on@F3050:
   536                           	callstack 0
   537  0000F5                     	ds	1
   538  0000F6                     led_initialize@F3045:
   539                           	callstack 0
   540  0000F6                     	ds	1
   541  0000F7                     	ds	1
   542  0000F8                     	ds	1
   543  0000F9                     _led_1:
   544                           	callstack 0
   545  0000F9                     	ds	1
   546                           
   547                           	psect	dataBANK0
   548  0000FA                     __pdataBANK0:
   549                           	callstack 0
   550  0000FA                     _sup_pos:
   551                           	callstack 0
   552  0000FA                     	ds	1
   553  0000FB                     _pos:
   554                           	callstack 0
   555  0000FB                     	ds	1
   556  0000FC                     _RB7_Flag:
   557                           	callstack 0
   558  0000FC                     	ds	1
   559  0000FD                     _RB6_Flag:
   560                           	callstack 0
   561  0000FD                     	ds	1
   562  0000FE                     _RB5_Flag:
   563                           	callstack 0
   564  0000FE                     	ds	1
   565  0000FF                     _RB4_Flag:
   566                           	callstack 0
   567  0000FF                     	ds	1
   568                           
   569                           	psect	bssBANK1
   570  000100                     __pbssBANK1:
   571                           	callstack 0
   572  000100                     fabsf@F465:
   573                           	callstack 0
   574  000100                     	ds	4
   575  000104                     _num_1:
   576                           	callstack 0
   577  000104                     	ds	4
   578  000108                     _result:
   579                           	callstack 0
   580  000108                     	ds	4
   581  00010C                     _errno:
   582                           	callstack 0
   583  00010C                     	ds	2
   584  00010E                     _nout:
   585                           	callstack 0
   586  00010E                     	ds	2
   587  000110                     	ds	2
   588  000112                     	ds	2
   589  000114                     	ds	2
   590  000116                     	ds	2
   591  000118                     	ds	2
   592  00011A                     	ds	2
   593  00011C                     	ds	2
   594  00011E                     	ds	2
   595  000120                     _INT2_InterruptHandler:
   596                           	callstack 0
   597  000120                     	ds	2
   598  000122                     _INT1_InterruptHandler:
   599                           	callstack 0
   600  000122                     	ds	2
   601  000124                     _INT0_InterruptHandler:
   602                           	callstack 0
   603  000124                     	ds	2
   604  000126                     _postfix:
   605                           	callstack 0
   606  000126                     	ds	80
   607  000176                     _dbuf:
   608                           	callstack 0
   609  000176                     	ds	32
   610  000196                     _arr:
   611                           	callstack 0
   612  000196                     	ds	11
   613                           
   614                           	psect	dataBANK1
   615  0001A1                     __pdataBANK1:
   616                           	callstack 0
   617  0001A1                     _port_registers:
   618                           	callstack 0
   619  0001A1                     	ds	10
   620  0001AB                     _lat_registers:
   621                           	callstack 0
   622  0001AB                     	ds	10
   623  0001B5                     _tris_registers:
   624                           	callstack 0
   625  0001B5                     	ds	10
   626  0001BF                     _operators:
   627                           	callstack 0
   628  0001BF                     	ds	8
   629  0001C7                     _keypad_1:
   630                           	callstack 0
   631  0001C7                     	ds	10
   632  0001D1                     _lcd_1:
   633                           	callstack 0
   634  0001D1                     	ds	6
   635                           
   636                           	psect	bssBANK2
   637  000200                     __pbssBANK2:
   638                           	callstack 0
   639  000200                     _infix:
   640                           	callstack 0
   641  000200                     	ds	100
   642                           
   643                           	psect	cstackBANK0
   644  000080                     __pcstackBANK0:
   645                           	callstack 0
   646  000080                     sprintf@ap:
   647                           	callstack 0
   648  000080                     evaluate_Postfix@operand1:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x0
   652  000080                     	ds	2
   653  000082                     sprintf@f:
   654                           	callstack 0
   655                           
   656                           ; 11 bytes @ 0x2
   657  000082                     	ds	2
   658  000084                     evaluate_Postfix@operand2:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x4
   662  000084                     	ds	4
   663  000088                     evaluate_Postfix@result:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x8
   667  000088                     	ds	4
   668  00008C                     evaluate_Postfix@current:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0xC
   672  00008C                     	ds	4
   673  000090                     evaluate_Postfix@i:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x10
   677  000090                     	ds	2
   678  000092                     evaluate_Postfix@operandStack:
   679                           	callstack 0
   680                           
   681                           ; 82 bytes @ 0x12
   682  000092                     	ds	82
   683                           
   684                           	psect	cstackCOMRAM
   685  000001                     __pcstackCOMRAM:
   686                           	callstack 0
   687  000001                     ?_strlen:
   688                           	callstack 0
   689  000001                     ?_strncmp:
   690                           	callstack 0
   691  000001                     ?_check_digit:
   692                           	callstack 0
   693  000001                     ?_precedence:
   694                           	callstack 0
   695  000001                     ?_operator_type:
   696                           	callstack 0
   697  000001                     ?_pop_t:
   698                           	callstack 0
   699  000001                     ?___lmul:
   700                           	callstack 0
   701  000001                     ?___lldiv:
   702                           	callstack 0
   703  000001                     ?___xxtofl:
   704                           	callstack 0
   705  000001                     ?___aodiv:
   706                           	callstack 0
   707  000001                     ?___aomod:
   708                           	callstack 0
   709  000001                     ?___lodiv:
   710                           	callstack 0
   711  000001                     ?___lomod:
   712                           	callstack 0
   713  000001                     gpio_pin_direction_intialize@_pin_config:
   714                           	callstack 0
   715  000001                     gpio_pin_write_logic@_pin_config:
   716                           	callstack 0
   717  000001                     gpio_pin_read_logic@_pin_config:
   718                           	callstack 0
   719  000001                     initialize_t@stack:
   720                           	callstack 0
   721  000001                     pop_t@stack:
   722                           	callstack 0
   723  000001                     memset@dest:
   724                           	callstack 0
   725  000001                     fputc@c:
   726                           	callstack 0
   727  000001                     strlen@s:
   728                           	callstack 0
   729  000001                     strncmp@_l:
   730                           	callstack 0
   731  000001                     ___lmul@multiplier:
   732                           	callstack 0
   733  000001                     ___lldiv@dividend:
   734                           	callstack 0
   735  000001                     ___fleq@ff1:
   736                           	callstack 0
   737  000001                     ___xxtofl@val:
   738                           	callstack 0
   739  000001                     ___aodiv@dividend:
   740                           	callstack 0
   741  000001                     ___aomod@dividend:
   742                           	callstack 0
   743  000001                     ___lodiv@dividend:
   744                           	callstack 0
   745  000001                     ___lomod@dividend:
   746                           	callstack 0
   747                           
   748                           ; 8 bytes @ 0x0
   749  000001                     	ds	2
   750  000003                     ??_gpio_pin_direction_intialize:
   751  000003                     gpio_pin_write_logic@logic:
   752                           	callstack 0
   753  000003                     check_digit@c:
   754                           	callstack 0
   755  000003                     precedence@op:
   756                           	callstack 0
   757  000003                     gpio_pin_read_logic@logic:
   758                           	callstack 0
   759  000003                     memset@c:
   760                           	callstack 0
   761  000003                     fputc@fp:
   762                           	callstack 0
   763  000003                     strlen@a:
   764                           	callstack 0
   765  000003                     strncmp@_r:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2
   769  000003                     	ds	1
   770  000004                     ??_gpio_pin_write_logic:
   771                           
   772                           ; 1 bytes @ 0x3
   773  000004                     	ds	1
   774  000005                     ??_gpio_pin_read_logic:
   775  000005                     ??_fputc:
   776  000005                     ??_pop_t:
   777  000005                     ??___xxtofl:
   778  000005                     operator_type@input:
   779                           	callstack 0
   780  000005                     memset@n:
   781                           	callstack 0
   782  000005                     strncmp@n:
   783                           	callstack 0
   784  000005                     ___lmul@multiplicand:
   785                           	callstack 0
   786  000005                     ___lldiv@divisor:
   787                           	callstack 0
   788  000005                     ___fleq@ff2:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000005                     	ds	1
   793  000006                     push_t@stack:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x5
   797  000006                     	ds	1
   798  000007                     ??_memset:
   799  000007                     ??_strncmp:
   800                           
   801                           ; 1 bytes @ 0x6
   802  000007                     	ds	1
   803  000008                     strncmp@l:
   804                           	callstack 0
   805  000008                     push_t@c:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x7
   809  000008                     	ds	1
   810  000009                     ??___fleq:
   811  000009                     gpio_pin_direction_intialize@ret:
   812                           	callstack 0
   813  000009                     ___xxtofl@sign:
   814                           	callstack 0
   815  000009                     memset@k:
   816                           	callstack 0
   817  000009                     ___lmul@product:
   818                           	callstack 0
   819  000009                     ___lldiv@quotient:
   820                           	callstack 0
   821  000009                     ___aodiv@divisor:
   822                           	callstack 0
   823  000009                     ___aomod@divisor:
   824                           	callstack 0
   825  000009                     ___lodiv@divisor:
   826                           	callstack 0
   827  000009                     ___lomod@divisor:
   828                           	callstack 0
   829                           
   830                           ; 8 bytes @ 0x8
   831  000009                     	ds	1
   832  00000A                     gpio_pin_write_logic@ret:
   833                           	callstack 0
   834  00000A                     gpio_pin_read_logic@ret:
   835                           	callstack 0
   836  00000A                     ___xxtofl@exp:
   837                           	callstack 0
   838  00000A                     fputs@s:
   839                           	callstack 0
   840  00000A                     strncmp@r:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x9
   844  00000A                     	ds	1
   845  00000B                     lcd_send_4bits@lcd:
   846                           	callstack 0
   847  00000B                     lcd_4bits_send_enable_signal@lcd:
   848                           	callstack 0
   849  00000B                     keypad_get_value@_keypad_obj:
   850                           	callstack 0
   851  00000B                     led_turn_on@led:
   852                           	callstack 0
   853  00000B                     led_turn_off@led:
   854                           	callstack 0
   855  00000B                     gpio_pin_intialize@_pin_config:
   856                           	callstack 0
   857  00000B                     memset@s:
   858                           	callstack 0
   859  00000B                     ___xxtofl@arg:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0xA
   863  00000B                     	ds	1
   864  00000C                     ??_push_t:
   865  00000C                     fputs@fp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0xB
   869  00000C                     	ds	1
   870  00000D                     ??_gpio_pin_intialize:
   871  00000D                     ??_lcd_4bits_send_enable_signal:
   872  00000D                     ??_led_turn_on:
   873  00000D                     ??_led_turn_off:
   874  00000D                     lcd_send_4bits@_data_command:
   875                           	callstack 0
   876  00000D                     ___lldiv@counter:
   877                           	callstack 0
   878  00000D                     keypad_get_value@value:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xC
   882  00000D                     	ds	1
   883  00000E                     ?_doMath:
   884                           	callstack 0
   885  00000E                     lcd_send_4bits@ret:
   886                           	callstack 0
   887  00000E                     lcd_4bits_send_enable_signal@ret:
   888                           	callstack 0
   889  00000E                     led_turn_on@pin_obj:
   890                           	callstack 0
   891  00000E                     led_turn_off@pin_obj:
   892                           	callstack 0
   893  00000E                     gpio_pin_intialize@ret:
   894                           	callstack 0
   895  00000E                     fputs@c:
   896                           	callstack 0
   897  00000E                     infixToPostfix@infix:
   898                           	callstack 0
   899  00000E                     doMath@op:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0xD
   903  00000E                     	ds	1
   904  00000F                     ??_keypad_get_value:
   905  00000F                     ?_Is_digit:
   906                           	callstack 0
   907  00000F                     lcd_4bit_send_command@lcd:
   908                           	callstack 0
   909  00000F                     lcd_4bit_send_char_data@lcd:
   910                           	callstack 0
   911  00000F                     keypad_initialize@_keypad_obj:
   912                           	callstack 0
   913  00000F                     led_initialize@led:
   914                           	callstack 0
   915  00000F                     fputs@i:
   916                           	callstack 0
   917  00000F                     Is_digit@op:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0xE
   921  00000F                     	ds	1
   922  000010                     infixToPostfix@postfix:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0xF
   926  000010                     	ds	1
   927  000011                     ??_keypad_initialize:
   928  000011                     ??_led_initialize:
   929  000011                     ?_pad:
   930                           	callstack 0
   931  000011                     lcd_4bit_send_command@command:
   932                           	callstack 0
   933  000011                     lcd_4bit_send_char_data@data:
   934                           	callstack 0
   935  000011                     keypad_get_value@ret:
   936                           	callstack 0
   937  000011                     ___aodiv@counter:
   938                           	callstack 0
   939  000011                     ___aomod@counter:
   940                           	callstack 0
   941  000011                     ___lomod@counter:
   942                           	callstack 0
   943  000011                     pad@fp:
   944                           	callstack 0
   945  000011                     ___lodiv@quotient:
   946                           	callstack 0
   947                           
   948                           ; 8 bytes @ 0x10
   949  000011                     	ds	1
   950  000012                     ??_infixToPostfix:
   951  000012                     lcd_4bit_send_command@ret:
   952                           	callstack 0
   953  000012                     lcd_4bit_send_char_data@ret:
   954                           	callstack 0
   955  000012                     keypad_get_value@column_logic:
   956                           	callstack 0
   957  000012                     led_initialize@ret:
   958                           	callstack 0
   959  000012                     ___aodiv@sign:
   960                           	callstack 0
   961  000012                     ___aomod@sign:
   962                           	callstack 0
   963  000012                     doMath@op1:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x11
   967  000012                     	ds	1
   968  000013                     ?_abs:
   969                           	callstack 0
   970  000013                     keypad_initialize@ret:
   971                           	callstack 0
   972  000013                     keypad_get_value@l_counter:
   973                           	callstack 0
   974  000013                     led_initialize@pin_obj:
   975                           	callstack 0
   976  000013                     lcd_4bit_intialize@lcd:
   977                           	callstack 0
   978  000013                     lcd_4bits_set_cursor@lcd:
   979                           	callstack 0
   980  000013                     pad@buf:
   981                           	callstack 0
   982  000013                     abs@a:
   983                           	callstack 0
   984  000013                     ___aodiv@quotient:
   985                           	callstack 0
   986                           
   987                           ; 8 bytes @ 0x12
   988  000013                     	ds	1
   989  000014                     keypad_initialize@row_counter:
   990                           	callstack 0
   991  000014                     keypad_get_value@l_row_counter:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x13
   995  000014                     	ds	1
   996  000015                     ??_abs:
   997  000015                     ??_lcd_4bit_intialize:
   998  000015                     lcd_4bits_set_cursor@row:
   999                           	callstack 0
  1000  000015                     keypad_initialize@columns_counter:
  1001                           	callstack 0
  1002  000015                     keypad_get_value@l_columns_counter:
  1003                           	callstack 0
  1004  000015                     pad@p:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x14
  1008  000015                     	ds	1
  1009  000016                     lcd_4bits_set_cursor@column:
  1010                           	callstack 0
  1011  000016                     doMath@op2:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x15
  1015  000016                     	ds	1
  1016  000017                     ??_lcd_4bits_set_cursor:
  1017  000017                     ??_pad:
  1018  000017                     lcd_4bit_intialize@data_bins_counter:
  1019                           	callstack 0
  1020  000017                     infixToPostfix@num_1:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x16
  1024  000017                     	ds	1
  1025  000018                     lcd_4bit_intialize@ret:
  1026                           	callstack 0
  1027  000018                     pad@i:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x17
  1031  000018                     	ds	1
  1032  000019                     lcd_4bits_set_cursor@ret:
  1033                           	callstack 0
  1034  000019                     ___lodiv@counter:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x18
  1038  000019                     	ds	1
  1039  00001A                     ?_evaluate_Postfix:
  1040                           	callstack 0
  1041  00001A                     lcd_4bit_send_char_data_pos@lcd:
  1042                           	callstack 0
  1043  00001A                     lcd_4bit_send_string_pos@lcd:
  1044                           	callstack 0
  1045  00001A                     evaluate_Postfix@postfix:
  1046                           	callstack 0
  1047  00001A                     pad@w:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x19
  1051  00001A                     	ds	1
  1052  00001B                     infixToPostfix@current:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x1A
  1056  00001B                     	ds	1
  1057  00001C                     ?_dtoa:
  1058                           	callstack 0
  1059  00001C                     ?_utoa:
  1060                           	callstack 0
  1061  00001C                     lcd_4bit_send_char_data_pos@row:
  1062                           	callstack 0
  1063  00001C                     lcd_4bit_send_string_pos@row:
  1064                           	callstack 0
  1065  00001C                     infixToPostfix@i:
  1066                           	callstack 0
  1067  00001C                     dtoa@fp:
  1068                           	callstack 0
  1069  00001C                     utoa@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x1B
  1073  00001C                     	ds	1
  1074  00001D                     lcd_4bit_send_char_data_pos@column:
  1075                           	callstack 0
  1076  00001D                     lcd_4bit_send_string_pos@column:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x1C
  1080  00001D                     	ds	1
  1081  00001E                     lcd_4bit_send_char_data_pos@data:
  1082                           	callstack 0
  1083  00001E                     lcd_4bit_send_string_pos@str:
  1084                           	callstack 0
  1085  00001E                     infixToPostfix@j:
  1086                           	callstack 0
  1087  00001E                     dtoa@d:
  1088                           	callstack 0
  1089  00001E                     utoa@d:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x1D
  1093  00001E                     	ds	1
  1094  00001F                     lcd_4bit_send_char_data_pos@ret:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x1E
  1098  00001F                     	ds	1
  1099  000020                     lcd_4bit_send_string_pos@ret:
  1100                           	callstack 0
  1101  000020                     infixToPostfix@operatorStack:
  1102                           	callstack 0
  1103                           
  1104                           ; 82 bytes @ 0x1F
  1105  000020                     	ds	6
  1106  000026                     ??_dtoa:
  1107  000026                     ??_utoa:
  1108                           
  1109                           ; 1 bytes @ 0x25
  1110  000026                     	ds	8
  1111  00002E                     _dtoa$2498:
  1112                           	callstack 0
  1113  00002E                     utoa@p:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x2D
  1117  00002E                     	ds	2
  1118  000030                     dtoa@p:
  1119                           	callstack 0
  1120  000030                     utoa@w:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x2F
  1124  000030                     	ds	2
  1125  000032                     dtoa@w:
  1126                           	callstack 0
  1127  000032                     utoa@n:
  1128                           	callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x31
  1131  000032                     	ds	2
  1132  000034                     dtoa@s:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x33
  1136  000034                     	ds	2
  1137  000036                     dtoa@n:
  1138                           	callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x35
  1141  000036                     	ds	4
  1142  00003A                     utoa@i:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x39
  1146  00003A                     	ds	4
  1147  00003E                     dtoa@i:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x3D
  1151  00003E                     	ds	2
  1152  000040                     ?_vfpfcnvrt:
  1153                           	callstack 0
  1154  000040                     vfpfcnvrt@fp:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x3F
  1158  000040                     	ds	2
  1159  000042                     vfpfcnvrt@fmt:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x41
  1163  000042                     	ds	2
  1164  000044                     vfpfcnvrt@ap:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x43
  1168  000044                     	ds	2
  1169  000046                     ??_vfpfcnvrt:
  1170                           
  1171                           ; 1 bytes @ 0x45
  1172  000046                     	ds	14
  1173  000054                     vfpfcnvrt@ll:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x53
  1177  000054                     	ds	8
  1178  00005C                     vfpfcnvrt@llu:
  1179                           	callstack 0
  1180                           
  1181                           ; 8 bytes @ 0x5B
  1182  00005C                     	ds	8
  1183  000064                     ?_vfprintf:
  1184                           	callstack 0
  1185  000064                     vfprintf@fp:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x63
  1189  000064                     	ds	2
  1190  000066                     vfprintf@fmt:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x65
  1194  000066                     	ds	2
  1195  000068                     vfprintf@ap:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x67
  1199  000068                     	ds	2
  1200  00006A                     vfprintf@cfmt:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x69
  1204  00006A                     	ds	2
  1205  00006C                     ?_sprintf:
  1206                           	callstack 0
  1207  00006C                     sprintf@s:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x6B
  1211  00006C                     	ds	2
  1212  00006E                     sprintf@fmt:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x6D
  1216  00006E                     	ds	6
  1217  000074                     convert_uint32_to_string@value:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x73
  1221  000074                     	ds	4
  1222  000078                     convert_uint32_to_string@str:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x77
  1226  000078                     	ds	2
  1227  00007A                     convert_uint32_to_string@ret:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x79
  1231  00007A                     	ds	1
  1232  00007B                     ??_main:
  1233                           
  1234                           ; 1 bytes @ 0x7A
  1235  00007B                     	ds	2
  1236  00007D                     main@i:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x7C
  1240  00007D                     	ds	2
  1241                           
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 20 in file "Application.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  i               2  124[COMRAM] int 
  1252 ;;  ret             1    0        unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2  851[None  ] int 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;Total ram usage:        4 bytes
  1267 ;; Hardware stack levels required when called: 9
  1268 ;; This function calls:
  1269 ;;		_application_intialize
  1270 ;;		_convert_uint32_to_string
  1271 ;;		_evaluate_Postfix
  1272 ;;		_infixToPostfix
  1273 ;;		_keypad_get_value
  1274 ;;		_lcd_4bit_send_char_data_pos
  1275 ;;		_lcd_4bit_send_command
  1276 ;;		_lcd_4bit_send_string_pos
  1277 ;;		_led_turn_off
  1278 ;;		_led_turn_on
  1279 ;;		_memset
  1280 ;;		_strlen
  1281 ;; This function is called by:
  1282 ;;		Startup code after reset
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text0
  1287  0010AA                     __ptext0:
  1288                           	callstack 0
  1289  0010AA                     _main:
  1290                           	callstack 22
  1291  0010AA                     
  1292                           ;Application.c: 22:     application_intialize();
  1293  0010AA  EC1B  F020         	call	_application_intialize	;wreg free
  1294  0010AE                     l6086:
  1295  0010AE  0EC7               	movlw	low _keypad_1
  1296  0010B0  6E0B               	movwf	keypad_get_value@_keypad_obj^0,c
  1297  0010B2  0E01               	movlw	high _keypad_1
  1298  0010B4  6E0C               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  1299  0010B6  0E7F               	movlw	low _val
  1300  0010B8  6E0D               	movwf	keypad_get_value@value^0,c
  1301  0010BA  0E00               	movlw	high _val
  1302  0010BC  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  1303  0010BE  ECAC  F016         	call	_keypad_get_value	;wreg free
  1304  0010C2                     
  1305                           ;Application.c: 26:         if((val == 'A')&&(counter == 0)){
  1306  0010C2  0E41               	movlw	65
  1307  0010C4  187F               	xorwf	_val^0,w,c
  1308  0010C6  A4D8               	btfss	status,2,c
  1309  0010C8  EF68  F008         	goto	u5221
  1310  0010CC  EF6A  F008         	goto	u5220
  1311  0010D0                     u5221:
  1312  0010D0  EFA0  F008         	goto	l6104
  1313  0010D4                     u5220:
  1314  0010D4  0100               	movlb	0	; () banked
  1315  0010D6  51EF               	movf	_counter& (0+255),w,b
  1316  0010D8  A4D8               	btfss	status,2,c
  1317  0010DA  EF71  F008         	goto	u5231
  1318  0010DE  EF73  F008         	goto	u5230
  1319  0010E2                     u5231:
  1320  0010E2  EFA0  F008         	goto	l6104
  1321  0010E6                     u5230:
  1322  0010E6                     
  1323                           ; BSR set to: 0
  1324                           ;Application.c: 27:             led_turn_on(&led_1);
  1325  0010E6  0EF9               	movlw	low _led_1
  1326  0010E8  6E0B               	movwf	led_turn_on@led^0,c
  1327  0010EA  0E00               	movlw	high _led_1
  1328  0010EC  6E0C               	movwf	(led_turn_on@led+1)^0,c
  1329  0010EE  EC97  F01C         	call	_led_turn_on	;wreg free
  1330  0010F2                     
  1331                           ;Application.c: 28:             val = '#';
  1332  0010F2  0E23               	movlw	35
  1333  0010F4  6E7F               	movwf	_val^0,c
  1334  0010F6  0ED1               	movlw	low _lcd_1
  1335  0010F8  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1336  0010FA  0E01               	movlw	high _lcd_1
  1337  0010FC  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1338  0010FE  0E01               	movlw	1
  1339  001100  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1340  001102  0E01               	movlw	1
  1341  001104  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1342  001106  0E95               	movlw	low STR_4
  1343  001108  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1344  00110A  0E10               	movlw	high STR_4
  1345  00110C  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1346  00110E  EC8B  F01B         	call	_lcd_4bit_send_string_pos	;wreg free
  1347  001112                     
  1348                           ;Application.c: 31:             _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1349  001112  0E06               	movlw	6
  1350  001114  6E7C               	movwf	(??_main+1)^0,c
  1351  001116  0E13               	movlw	19
  1352  001118  6E7B               	movwf	??_main^0,c
  1353  00111A  0EAE               	movlw	174
  1354  00111C                     u5357:
  1355  00111C  2EE8               	decfsz	wreg,f,c
  1356  00111E  D7FE               	bra	u5357
  1357  001120  2E7B               	decfsz	??_main^0,f,c
  1358  001122  D7FC               	bra	u5357
  1359  001124  2E7C               	decfsz	(??_main+1)^0,f,c
  1360  001126  D7FA               	bra	u5357
  1361  001128  0ED1               	movlw	low _lcd_1
  1362  00112A  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1363  00112C  0E01               	movlw	high _lcd_1
  1364  00112E  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1365  001130  0E01               	movlw	1
  1366  001132  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1367  001134  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  1368  001138                     
  1369                           ;Application.c: 33:             counter++;
  1370  001138  0100               	movlb	0	; () banked
  1371  00113A  2BEF               	incf	_counter& (0+255),f,b
  1372                           
  1373                           ;Application.c: 34:         }
  1374  00113C  EFEF  F008         	goto	l6118
  1375  001140                     l6104:
  1376  001140  0E41               	movlw	65
  1377  001142  187F               	xorwf	_val^0,w,c
  1378  001144  A4D8               	btfss	status,2,c
  1379  001146  EFA7  F008         	goto	u5241
  1380  00114A  EFA9  F008         	goto	u5240
  1381  00114E                     u5241:
  1382  00114E  EFEF  F008         	goto	l6118
  1383  001152                     u5240:
  1384  001152  0100               	movlb	0	; () banked
  1385  001154  05EF               	decf	_counter& (0+255),w,b
  1386  001156  A4D8               	btfss	status,2,c
  1387  001158  EFB0  F008         	goto	u5251
  1388  00115C  EFB2  F008         	goto	u5250
  1389  001160                     u5251:
  1390  001160  EFEF  F008         	goto	l6118
  1391  001164                     u5250:
  1392  001164                     
  1393                           ; BSR set to: 0
  1394                           ;Application.c: 36:             counter = 0;
  1395  001164  0E00               	movlw	0
  1396  001166  6FEF               	movwf	_counter& (0+255),b
  1397  001168                     
  1398                           ; BSR set to: 0
  1399                           ;Application.c: 37:             led_turn_off(&led_1);
  1400  001168  0EF9               	movlw	low _led_1
  1401  00116A  6E0B               	movwf	led_turn_off@led^0,c
  1402  00116C  0E00               	movlw	high _led_1
  1403  00116E  6E0C               	movwf	(led_turn_off@led+1)^0,c
  1404  001170  ECD2  F01C         	call	_led_turn_off	;wreg free
  1405  001174  0ED1               	movlw	low _lcd_1
  1406  001176  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1407  001178  0E01               	movlw	high _lcd_1
  1408  00117A  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1409  00117C  0E01               	movlw	1
  1410  00117E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1411  001180  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  1412  001184                     
  1413                           ;Application.c: 39:             memset(infix, '\0', 100);
  1414  001184  0E00               	movlw	low _infix
  1415  001186  6E01               	movwf	memset@dest^0,c
  1416  001188  0E02               	movlw	high _infix
  1417  00118A  6E02               	movwf	(memset@dest+1)^0,c
  1418  00118C  0E00               	movlw	0
  1419  00118E  6E04               	movwf	(memset@c+1)^0,c
  1420  001190  0E00               	movlw	0
  1421  001192  6E03               	movwf	memset@c^0,c
  1422  001194  0E00               	movlw	0
  1423  001196  6E06               	movwf	(memset@n+1)^0,c
  1424  001198  0E64               	movlw	100
  1425  00119A  6E05               	movwf	memset@n^0,c
  1426  00119C  ECDB  F012         	call	_memset	;wreg free
  1427  0011A0                     
  1428                           ;Application.c: 40:             memset(postfix, '\0', 100);
  1429  0011A0  0E26               	movlw	low _postfix
  1430  0011A2  6E01               	movwf	memset@dest^0,c
  1431  0011A4  0E01               	movlw	high _postfix
  1432  0011A6  6E02               	movwf	(memset@dest+1)^0,c
  1433  0011A8  0E00               	movlw	0
  1434  0011AA  6E04               	movwf	(memset@c+1)^0,c
  1435  0011AC  0E00               	movlw	0
  1436  0011AE  6E03               	movwf	memset@c^0,c
  1437  0011B0  0E00               	movlw	0
  1438  0011B2  6E06               	movwf	(memset@n+1)^0,c
  1439  0011B4  0E64               	movlw	100
  1440  0011B6  6E05               	movwf	memset@n^0,c
  1441  0011B8  ECDB  F012         	call	_memset	;wreg free
  1442                           
  1443                           ;Application.c: 41:             res_counter = 0;
  1444  0011BC  0E00               	movlw	0
  1445  0011BE  0100               	movlb	0	; () banked
  1446  0011C0  6FED               	movwf	_res_counter& (0+255),b
  1447                           
  1448                           ;Application.c: 42:             num_1 = 0;
  1449  0011C2  0E00               	movlw	0
  1450  0011C4  0101               	movlb	1	; () banked
  1451  0011C6  6F04               	movwf	_num_1& (0+255),b
  1452  0011C8  0E00               	movlw	0
  1453  0011CA  6F05               	movwf	(_num_1+1)& (0+255),b
  1454  0011CC  0E00               	movlw	0
  1455  0011CE  6F06               	movwf	(_num_1+2)& (0+255),b
  1456  0011D0  0E00               	movlw	0
  1457  0011D2  6F07               	movwf	(_num_1+3)& (0+255),b
  1458                           
  1459                           ;Application.c: 43:             pos = 1;
  1460  0011D4  0E01               	movlw	1
  1461  0011D6  0100               	movlb	0	; () banked
  1462  0011D8  6FFB               	movwf	_pos& (0+255),b
  1463                           
  1464                           ;Application.c: 44:             equal_flag = 0;
  1465  0011DA  0E00               	movlw	0
  1466  0011DC  6FEC               	movwf	_equal_flag& (0+255),b
  1467  0011DE                     l6118:
  1468                           
  1469                           ;Application.c: 49:         for(int i = 0; i<7; i++){
  1470  0011DE  0E00               	movlw	0
  1471  0011E0  6E7E               	movwf	(main@i+1)^0,c
  1472  0011E2  0E00               	movlw	0
  1473  0011E4  6E7D               	movwf	main@i^0,c
  1474  0011E6                     l6124:
  1475                           
  1476                           ;Application.c: 50:             if(val == operators[i]){
  1477  0011E6  0EBF               	movlw	low _operators
  1478  0011E8  247D               	addwf	main@i^0,w,c
  1479  0011EA  6ED9               	movwf	fsr2l,c
  1480  0011EC  0E01               	movlw	high _operators
  1481  0011EE  207E               	addwfc	(main@i+1)^0,w,c
  1482  0011F0  6EDA               	movwf	fsr2h,c
  1483  0011F2  507F               	movf	_val^0,w,c
  1484  0011F4  18DE               	xorwf	postinc2,w,c
  1485  0011F6  A4D8               	btfss	status,2,c
  1486  0011F8  EF00  F009         	goto	u5261
  1487  0011FC  EF02  F009         	goto	u5260
  1488  001200                     u5261:
  1489  001200  EF07  F009         	goto	l6130
  1490  001204                     u5260:
  1491  001204                     
  1492                           ;Application.c: 51:                 flag = 1;
  1493  001204  0E01               	movlw	1
  1494  001206  0100               	movlb	0	; () banked
  1495  001208  6FEE               	movwf	_flag& (0+255),b
  1496                           
  1497                           ;Application.c: 52:                 break;
  1498  00120A  EF17  F009         	goto	l6134
  1499  00120E                     l6130:
  1500                           
  1501                           ;Application.c: 55:         }
  1502  00120E  4A7D               	infsnz	main@i^0,f,c
  1503  001210  2A7E               	incf	(main@i+1)^0,f,c
  1504  001212  BE7E               	btfsc	(main@i+1)^0,7,c
  1505  001214  EF15  F009         	goto	u5271
  1506  001218  507E               	movf	(main@i+1)^0,w,c
  1507  00121A  E109               	bnz	u5270
  1508  00121C  0E07               	movlw	7
  1509  00121E  5C7D               	subwf	main@i^0,w,c
  1510  001220  A0D8               	btfss	status,0,c
  1511  001222  EF15  F009         	goto	u5271
  1512  001226  EF17  F009         	goto	u5270
  1513  00122A                     u5271:
  1514  00122A  EFF3  F008         	goto	l6124
  1515  00122E                     u5270:
  1516  00122E                     l6134:
  1517                           
  1518                           ;Application.c: 56:         if((flag != 1)&&(counter == 1)&&(val != '#')){
  1519  00122E  0100               	movlb	0	; () banked
  1520  001230  05EE               	decf	_flag& (0+255),w,b
  1521  001232  B4D8               	btfsc	status,2,c
  1522  001234  EF1E  F009         	goto	u5281
  1523  001238  EF20  F009         	goto	u5280
  1524  00123C                     u5281:
  1525  00123C  EF87  F009         	goto	l6164
  1526  001240                     u5280:
  1527  001240                     
  1528                           ; BSR set to: 0
  1529  001240  05EF               	decf	_counter& (0+255),w,b
  1530  001242  A4D8               	btfss	status,2,c
  1531  001244  EF26  F009         	goto	u5291
  1532  001248  EF28  F009         	goto	u5290
  1533  00124C                     u5291:
  1534  00124C  EF87  F009         	goto	l6164
  1535  001250                     u5290:
  1536  001250                     
  1537                           ; BSR set to: 0
  1538  001250  0E23               	movlw	35
  1539  001252  187F               	xorwf	_val^0,w,c
  1540  001254  B4D8               	btfsc	status,2,c
  1541  001256  EF2F  F009         	goto	u5301
  1542  00125A  EF31  F009         	goto	u5300
  1543  00125E                     u5301:
  1544  00125E  EF87  F009         	goto	l6164
  1545  001262                     u5300:
  1546  001262                     
  1547                           ; BSR set to: 0
  1548                           ;Application.c: 57:             if(equal_flag == 1){
  1549  001262  05EC               	decf	_equal_flag& (0+255),w,b
  1550  001264  A4D8               	btfss	status,2,c
  1551  001266  EF37  F009         	goto	u5311
  1552  00126A  EF39  F009         	goto	u5310
  1553  00126E                     u5311:
  1554  00126E  EF6E  F009         	goto	l6156
  1555  001272                     u5310:
  1556  001272                     
  1557                           ; BSR set to: 0
  1558  001272  0ED1               	movlw	low _lcd_1
  1559  001274  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1560  001276  0E01               	movlw	high _lcd_1
  1561  001278  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1562  00127A  0E01               	movlw	1
  1563  00127C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1564  00127E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  1565  001282                     
  1566                           ;Application.c: 59:                 memset(infix, '\0', 100);
  1567  001282  0E00               	movlw	low _infix
  1568  001284  6E01               	movwf	memset@dest^0,c
  1569  001286  0E02               	movlw	high _infix
  1570  001288  6E02               	movwf	(memset@dest+1)^0,c
  1571  00128A  0E00               	movlw	0
  1572  00128C  6E04               	movwf	(memset@c+1)^0,c
  1573  00128E  0E00               	movlw	0
  1574  001290  6E03               	movwf	memset@c^0,c
  1575  001292  0E00               	movlw	0
  1576  001294  6E06               	movwf	(memset@n+1)^0,c
  1577  001296  0E64               	movlw	100
  1578  001298  6E05               	movwf	memset@n^0,c
  1579  00129A  ECDB  F012         	call	_memset	;wreg free
  1580  00129E                     
  1581                           ;Application.c: 60:                 memset(postfix, '\0', 100);
  1582  00129E  0E26               	movlw	low _postfix
  1583  0012A0  6E01               	movwf	memset@dest^0,c
  1584  0012A2  0E01               	movlw	high _postfix
  1585  0012A4  6E02               	movwf	(memset@dest+1)^0,c
  1586  0012A6  0E00               	movlw	0
  1587  0012A8  6E04               	movwf	(memset@c+1)^0,c
  1588  0012AA  0E00               	movlw	0
  1589  0012AC  6E03               	movwf	memset@c^0,c
  1590  0012AE  0E00               	movlw	0
  1591  0012B0  6E06               	movwf	(memset@n+1)^0,c
  1592  0012B2  0E64               	movlw	100
  1593  0012B4  6E05               	movwf	memset@n^0,c
  1594  0012B6  ECDB  F012         	call	_memset	;wreg free
  1595  0012BA                     
  1596                           ;Application.c: 61:                 res_counter = 0;
  1597  0012BA  0E00               	movlw	0
  1598  0012BC  0100               	movlb	0	; () banked
  1599  0012BE  6FED               	movwf	_res_counter& (0+255),b
  1600  0012C0                     
  1601                           ; BSR set to: 0
  1602                           ;Application.c: 62:                 num_1 = 0;
  1603  0012C0  0E00               	movlw	0
  1604  0012C2  0101               	movlb	1	; () banked
  1605  0012C4  6F04               	movwf	_num_1& (0+255),b
  1606  0012C6  0E00               	movlw	0
  1607  0012C8  6F05               	movwf	(_num_1+1)& (0+255),b
  1608  0012CA  0E00               	movlw	0
  1609  0012CC  6F06               	movwf	(_num_1+2)& (0+255),b
  1610  0012CE  0E00               	movlw	0
  1611  0012D0  6F07               	movwf	(_num_1+3)& (0+255),b
  1612  0012D2                     
  1613                           ; BSR set to: 1
  1614                           ;Application.c: 63:                 pos = 1;
  1615  0012D2  0E01               	movlw	1
  1616  0012D4  0100               	movlb	0	; () banked
  1617  0012D6  6FFB               	movwf	_pos& (0+255),b
  1618  0012D8                     
  1619                           ; BSR set to: 0
  1620                           ;Application.c: 64:                 equal_flag = 0;
  1621  0012D8  0E00               	movlw	0
  1622  0012DA  6FEC               	movwf	_equal_flag& (0+255),b
  1623  0012DC                     l6156:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;Application.c: 66:             infix[res_counter] = val;
  1627  0012DC  0E00               	movlw	low _infix
  1628  0012DE  25ED               	addwf	_res_counter& (0+255),w,b
  1629  0012E0  6ED9               	movwf	fsr2l,c
  1630  0012E2  6ADA               	clrf	fsr2h,c
  1631  0012E4  0E02               	movlw	high _infix
  1632  0012E6  22DA               	addwfc	fsr2h,f,c
  1633  0012E8  C07F  FFDF         	movff	_val,indf2
  1634  0012EC                     
  1635                           ; BSR set to: 0
  1636  0012EC  0ED1               	movlw	low _lcd_1
  1637  0012EE  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1638  0012F0  0E01               	movlw	high _lcd_1
  1639  0012F2  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1640  0012F4  0E01               	movlw	1
  1641  0012F6  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1642  0012F8  C0FB  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  1643  0012FC  C07F  F01E         	movff	_val,lcd_4bit_send_char_data_pos@data
  1644  001300  ECE0  F01E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1645  001304                     
  1646                           ;Application.c: 68:             res_counter++;
  1647  001304  0100               	movlb	0	; () banked
  1648  001306  2BED               	incf	_res_counter& (0+255),f,b
  1649  001308                     
  1650                           ; BSR set to: 0
  1651                           ;Application.c: 69:             pos++;
  1652  001308  2BFB               	incf	_pos& (0+255),f,b
  1653                           
  1654                           ;Application.c: 70:         }
  1655  00130A  EF71  F00A         	goto	l6218
  1656  00130E                     l6164:
  1657                           
  1658                           ; BSR set to: 0
  1659  00130E  05EE               	decf	_flag& (0+255),w,b
  1660  001310  A4D8               	btfss	status,2,c
  1661  001312  EF8D  F009         	goto	u5321
  1662  001316  EF8F  F009         	goto	u5320
  1663  00131A                     u5321:
  1664  00131A  EF71  F00A         	goto	l6218
  1665  00131E                     u5320:
  1666  00131E                     
  1667                           ; BSR set to: 0
  1668  00131E  05EF               	decf	_counter& (0+255),w,b
  1669  001320  A4D8               	btfss	status,2,c
  1670  001322  EF95  F009         	goto	u5331
  1671  001326  EF97  F009         	goto	u5330
  1672  00132A                     u5331:
  1673  00132A  EF71  F00A         	goto	l6218
  1674  00132E                     u5330:
  1675  00132E  EFD8  F009         	goto	l6198
  1676  001332                     l6170:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;Application.c: 74:                     op[0] = '*';
  1680  001332  0E2A               	movlw	42
  1681  001334  6FEA               	movwf	_op& (0+255),b
  1682  001336                     
  1683                           ; BSR set to: 0
  1684                           ;Application.c: 75:                     infix[res_counter] = '*';
  1685  001336  0E00               	movlw	low _infix
  1686  001338  25ED               	addwf	_res_counter& (0+255),w,b
  1687  00133A  6ED9               	movwf	fsr2l,c
  1688  00133C  6ADA               	clrf	fsr2h,c
  1689  00133E  0E02               	movlw	high _infix
  1690  001340  22DA               	addwfc	fsr2h,f,c
  1691  001342  0E2A               	movlw	42
  1692  001344  6EDF               	movwf	indf2,c
  1693  001346                     l6174:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;Application.c: 76:                     res_counter++;
  1697  001346  2BED               	incf	_res_counter& (0+255),f,b
  1698                           
  1699                           ;Application.c: 77:                     break;
  1700  001348  EFF9  F009         	goto	l6200
  1701  00134C                     l6176:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;Application.c: 79:                     op[0] = '/';
  1705  00134C  0E2F               	movlw	47
  1706  00134E  6FEA               	movwf	_op& (0+255),b
  1707  001350                     
  1708                           ; BSR set to: 0
  1709                           ;Application.c: 80:                     infix[res_counter] = '/';
  1710  001350  0E00               	movlw	low _infix
  1711  001352  25ED               	addwf	_res_counter& (0+255),w,b
  1712  001354  6ED9               	movwf	fsr2l,c
  1713  001356  6ADA               	clrf	fsr2h,c
  1714  001358  0E02               	movlw	high _infix
  1715  00135A  22DA               	addwfc	fsr2h,f,c
  1716  00135C  0E2F               	movlw	47
  1717  00135E  6EDF               	movwf	indf2,c
  1718  001360  EFA3  F009         	goto	l6174
  1719  001364                     l6182:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;Application.c: 84:                     op[0] = '-';
  1723  001364  0E2D               	movlw	45
  1724  001366  6FEA               	movwf	_op& (0+255),b
  1725  001368                     
  1726                           ; BSR set to: 0
  1727                           ;Application.c: 85:                     infix[res_counter] = '-';
  1728  001368  0E00               	movlw	low _infix
  1729  00136A  25ED               	addwf	_res_counter& (0+255),w,b
  1730  00136C  6ED9               	movwf	fsr2l,c
  1731  00136E  6ADA               	clrf	fsr2h,c
  1732  001370  0E02               	movlw	high _infix
  1733  001372  22DA               	addwfc	fsr2h,f,c
  1734  001374  0E2D               	movlw	45
  1735  001376  6EDF               	movwf	indf2,c
  1736  001378  EFA3  F009         	goto	l6174
  1737  00137C                     l6188:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;Application.c: 89:                     op[0] = '+';
  1741  00137C  0E2B               	movlw	43
  1742  00137E  6FEA               	movwf	_op& (0+255),b
  1743  001380                     
  1744                           ; BSR set to: 0
  1745                           ;Application.c: 90:                     infix[res_counter] = '+';
  1746  001380  0E00               	movlw	low _infix
  1747  001382  25ED               	addwf	_res_counter& (0+255),w,b
  1748  001384  6ED9               	movwf	fsr2l,c
  1749  001386  6ADA               	clrf	fsr2h,c
  1750  001388  0E02               	movlw	high _infix
  1751  00138A  22DA               	addwfc	fsr2h,f,c
  1752  00138C  0E2B               	movlw	43
  1753  00138E  6EDF               	movwf	indf2,c
  1754  001390  EFA3  F009         	goto	l6174
  1755  001394                     l6194:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Application.c: 94:                     op[0] = '=';
  1759  001394  0E3D               	movlw	61
  1760  001396  6FEA               	movwf	_op& (0+255),b
  1761                           
  1762                           ;Application.c: 95:                     equal_flag = 1;
  1763  001398  0E01               	movlw	1
  1764  00139A  6FEC               	movwf	_equal_flag& (0+255),b
  1765  00139C                     
  1766                           ; BSR set to: 0
  1767                           ;Application.c: 96:                     infix[res_counter] = '\0';
  1768  00139C  0E00               	movlw	low _infix
  1769  00139E  25ED               	addwf	_res_counter& (0+255),w,b
  1770  0013A0  6ED9               	movwf	fsr2l,c
  1771  0013A2  6ADA               	clrf	fsr2h,c
  1772  0013A4  0E02               	movlw	high _infix
  1773  0013A6  22DA               	addwfc	fsr2h,f,c
  1774  0013A8  0E00               	movlw	0
  1775  0013AA  6EDF               	movwf	indf2,c
  1776                           
  1777                           ;Application.c: 97:                     break;
  1778  0013AC  EFF9  F009         	goto	l6200
  1779  0013B0                     l6198:
  1780                           
  1781                           ; BSR set to: 0
  1782  0013B0  507F               	movf	_val^0,w,c
  1783  0013B2  6E7B               	movwf	??_main^0,c
  1784  0013B4  6A7C               	clrf	(??_main+1)^0,c
  1785                           
  1786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 1, Range of values is 0 to 0
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte            4     3 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793  0013B6  507C               	movf	(??_main+1)^0,w,c
  1794  0013B8  0A00               	xorlw	0	; case 0
  1795  0013BA  B4D8               	btfsc	status,2,c
  1796  0013BC  EFE2  F009         	goto	l6312
  1797  0013C0  EFF9  F009         	goto	l6200
  1798  0013C4                     l6312:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 5, Range of values is 42 to 69
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte           16     9 (average)
  1806                           ;	Chosen strategy is simple_byte
  1807  0013C4  507B               	movf	??_main^0,w,c
  1808  0013C6  0A2A               	xorlw	42	; case 42
  1809  0013C8  B4D8               	btfsc	status,2,c
  1810  0013CA  EFB2  F009         	goto	l6182
  1811  0013CE  0A01               	xorlw	1	; case 43
  1812  0013D0  B4D8               	btfsc	status,2,c
  1813  0013D2  EFBE  F009         	goto	l6188
  1814  0013D6  0A04               	xorlw	4	; case 47
  1815  0013D8  B4D8               	btfsc	status,2,c
  1816  0013DA  EF99  F009         	goto	l6170
  1817  0013DE  0A12               	xorlw	18	; case 61
  1818  0013E0  B4D8               	btfsc	status,2,c
  1819  0013E2  EFCA  F009         	goto	l6194
  1820  0013E6  0A78               	xorlw	120	; case 69
  1821  0013E8  B4D8               	btfsc	status,2,c
  1822  0013EA  EFA6  F009         	goto	l6176
  1823  0013EE  EFF9  F009         	goto	l6200
  1824  0013F2                     l6200:
  1825                           
  1826                           ; BSR set to: 0
  1827  0013F2  0ED1               	movlw	low _lcd_1
  1828  0013F4  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1829  0013F6  0E01               	movlw	high _lcd_1
  1830  0013F8  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1831  0013FA  0E01               	movlw	1
  1832  0013FC  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1833  0013FE  C0FB  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  1834  001402  C0EA  F01E         	movff	_op,lcd_4bit_send_char_data_pos@data
  1835  001406  ECE0  F01E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1836  00140A                     
  1837                           ;Application.c: 101:             if(op[0] == '='){
  1838  00140A  0E3D               	movlw	61
  1839  00140C  0100               	movlb	0	; () banked
  1840  00140E  19EA               	xorwf	_op& (0+255),w,b
  1841  001410  A4D8               	btfss	status,2,c
  1842  001412  EF0D  F00A         	goto	u5341
  1843  001416  EF0F  F00A         	goto	u5340
  1844  00141A                     u5341:
  1845  00141A  EF66  F00A         	goto	l6214
  1846  00141E                     u5340:
  1847  00141E                     
  1848                           ; BSR set to: 0
  1849                           ;Application.c: 102:                 infixToPostfix(infix, postfix);
  1850  00141E  0E00               	movlw	low _infix
  1851  001420  6E0E               	movwf	infixToPostfix@infix^0,c
  1852  001422  0E02               	movlw	high _infix
  1853  001424  6E0F               	movwf	(infixToPostfix@infix+1)^0,c
  1854  001426  0E26               	movlw	low _postfix
  1855  001428  6E10               	movwf	infixToPostfix@postfix^0,c
  1856  00142A  0E01               	movlw	high _postfix
  1857  00142C  6E11               	movwf	(infixToPostfix@postfix+1)^0,c
  1858  00142E  EC6F  F00C         	call	_infixToPostfix	;wreg free
  1859                           
  1860                           ;Application.c: 103:                 result = evaluate_Postfix(postfix);
  1861  001432  0E26               	movlw	low _postfix
  1862  001434  6E1A               	movwf	evaluate_Postfix@postfix^0,c
  1863  001436  0E01               	movlw	high _postfix
  1864  001438  6E1B               	movwf	(evaluate_Postfix@postfix+1)^0,c
  1865  00143A  EC58  F010         	call	_evaluate_Postfix	;wreg free
  1866  00143E  C01A  F108         	movff	?_evaluate_Postfix,_result
  1867  001442  C01B  F109         	movff	?_evaluate_Postfix+1,_result+1
  1868  001446  C01C  F10A         	movff	?_evaluate_Postfix+2,_result+2
  1869  00144A  C01D  F10B         	movff	?_evaluate_Postfix+3,_result+3
  1870  00144E  C108  F074         	movff	_result,convert_uint32_to_string@value
  1871  001452  C109  F075         	movff	_result+1,convert_uint32_to_string@value+1
  1872  001456  C10A  F076         	movff	_result+2,convert_uint32_to_string@value+2
  1873  00145A  C10B  F077         	movff	_result+3,convert_uint32_to_string@value+3
  1874  00145E  0E96               	movlw	low _arr
  1875  001460  6E78               	movwf	convert_uint32_to_string@str^0,c
  1876  001462  0E01               	movlw	high _arr
  1877  001464  6E79               	movwf	(convert_uint32_to_string@str+1)^0,c
  1878  001466  EC86  F01E         	call	_convert_uint32_to_string	;wreg free
  1879  00146A  0ED1               	movlw	low _lcd_1
  1880  00146C  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1881  00146E  0E01               	movlw	high _lcd_1
  1882  001470  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1883  001472  0E04               	movlw	4
  1884  001474  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1885  001476  0E96               	movlw	low _arr
  1886  001478  6E01               	movwf	strlen@s^0,c
  1887  00147A  0E01               	movlw	high _arr
  1888  00147C  6E02               	movwf	(strlen@s+1)^0,c
  1889  00147E  ECDF  F01F         	call	_strlen	;wreg free
  1890  001482  5001               	movf	?_strlen^0,w,c
  1891  001484  0814               	sublw	20
  1892  001486  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1893  001488  0E96               	movlw	low _arr
  1894  00148A  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1895  00148C  0E01               	movlw	high _arr
  1896  00148E  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1897  001490  EC8B  F01B         	call	_lcd_4bit_send_string_pos	;wreg free
  1898  001494                     
  1899                           ;Application.c: 106:                 memset(infix, '\0', 100);
  1900  001494  0E00               	movlw	low _infix
  1901  001496  6E01               	movwf	memset@dest^0,c
  1902  001498  0E02               	movlw	high _infix
  1903  00149A  6E02               	movwf	(memset@dest+1)^0,c
  1904  00149C  0E00               	movlw	0
  1905  00149E  6E04               	movwf	(memset@c+1)^0,c
  1906  0014A0  0E00               	movlw	0
  1907  0014A2  6E03               	movwf	memset@c^0,c
  1908  0014A4  0E00               	movlw	0
  1909  0014A6  6E06               	movwf	(memset@n+1)^0,c
  1910  0014A8  0E64               	movlw	100
  1911  0014AA  6E05               	movwf	memset@n^0,c
  1912  0014AC  ECDB  F012         	call	_memset	;wreg free
  1913  0014B0                     
  1914                           ;Application.c: 107:                 memset(postfix, '\0', 20);
  1915  0014B0  0E26               	movlw	low _postfix
  1916  0014B2  6E01               	movwf	memset@dest^0,c
  1917  0014B4  0E01               	movlw	high _postfix
  1918  0014B6  6E02               	movwf	(memset@dest+1)^0,c
  1919  0014B8  0E00               	movlw	0
  1920  0014BA  6E04               	movwf	(memset@c+1)^0,c
  1921  0014BC  0E00               	movlw	0
  1922  0014BE  6E03               	movwf	memset@c^0,c
  1923  0014C0  0E00               	movlw	0
  1924  0014C2  6E06               	movwf	(memset@n+1)^0,c
  1925  0014C4  0E14               	movlw	20
  1926  0014C6  6E05               	movwf	memset@n^0,c
  1927  0014C8  ECDB  F012         	call	_memset	;wreg free
  1928  0014CC                     l6214:
  1929                           
  1930                           ;Application.c: 109:             pos++;
  1931  0014CC  0100               	movlb	0	; () banked
  1932  0014CE  2BFB               	incf	_pos& (0+255),f,b
  1933  0014D0                     
  1934                           ; BSR set to: 0
  1935                           ;Application.c: 110:             num_1 = 0;
  1936  0014D0  0E00               	movlw	0
  1937  0014D2  0101               	movlb	1	; () banked
  1938  0014D4  6F04               	movwf	_num_1& (0+255),b
  1939  0014D6  0E00               	movlw	0
  1940  0014D8  6F05               	movwf	(_num_1+1)& (0+255),b
  1941  0014DA  0E00               	movlw	0
  1942  0014DC  6F06               	movwf	(_num_1+2)& (0+255),b
  1943  0014DE  0E00               	movlw	0
  1944  0014E0  6F07               	movwf	(_num_1+3)& (0+255),b
  1945  0014E2                     l6218:
  1946                           
  1947                           ;Application.c: 113:         flag = 0;
  1948  0014E2  0E00               	movlw	0
  1949  0014E4  0100               	movlb	0	; () banked
  1950  0014E6  6FEE               	movwf	_flag& (0+255),b
  1951  0014E8                     
  1952                           ; BSR set to: 0
  1953                           ;Application.c: 114:         val = '#';
  1954  0014E8  0E23               	movlw	35
  1955  0014EA  6E7F               	movwf	_val^0,c
  1956  0014EC  EF57  F008         	goto	l6086
  1957  0014F0  EF00  F000         	goto	start
  1958  0014F4                     __end_of_main:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _led_turn_on *****************
  1962 ;; Defined at:
  1963 ;;		line 40 in file "ECU_layer/LED/ecu_led.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  led             2   10[COMRAM] PTR const struct .
  1966 ;;		 -> led_1(1), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  pin_obj         1   13[COMRAM] struct .
  1969 ;;  ret             1    0        unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      unsigned char 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        4 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 1
  1986 ;; This function calls:
  1987 ;;		_gpio_pin_write_logic
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text1
  1994  00392E                     __ptext1:
  1995                           	callstack 0
  1996  00392E                     _led_turn_on:
  1997                           	callstack 29
  1998  00392E                     
  1999                           ;ECU_layer/LED/ecu_led.c: 42:     if(((void*)0) == led){
  2000  00392E  500B               	movf	led_turn_on@led^0,w,c
  2001  003930  100C               	iorwf	(led_turn_on@led+1)^0,w,c
  2002  003932  A4D8               	btfss	status,2,c
  2003  003934  EF9E  F01C         	goto	u4431
  2004  003938  EFA0  F01C         	goto	u4430
  2005  00393C                     u4431:
  2006  00393C  EFA2  F01C         	goto	l281
  2007  003940                     u4430:
  2008  003940                     
  2009                           ;ECU_layer/LED/ecu_led.c: 44:     }
  2010  003940  EFD1  F01C         	goto	l285
  2011  003944                     l281:
  2012                           
  2013                           ;ECU_layer/LED/ecu_led.c: 46:         pin_config_t pin_obj = {
  2014  003944  C0F5  F00E         	movff	led_turn_on@F3050,led_turn_on@pin_obj
  2015  003948  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  2016  00394C  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  2017  003950  50DF               	movf	223,w,c
  2018  003952  0B0F               	andlw	15
  2019  003954  6E0D               	movwf	??_led_turn_on^0,c
  2020  003956  500E               	movf	led_turn_on@pin_obj^0,w,c
  2021  003958  180D               	xorwf	??_led_turn_on^0,w,c
  2022  00395A  0BF8               	andlw	-8
  2023  00395C  180D               	xorwf	??_led_turn_on^0,w,c
  2024  00395E  6E0E               	movwf	led_turn_on@pin_obj^0,c
  2025  003960  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  2026  003964  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  2027  003968  38DF               	swapf	223,w,c
  2028  00396A  0B07               	andlw	7
  2029  00396C  6E0D               	movwf	??_led_turn_on^0,c
  2030  00396E  460D               	rlncf	??_led_turn_on^0,f,c
  2031  003970  460D               	rlncf	??_led_turn_on^0,f,c
  2032  003972  460D               	rlncf	??_led_turn_on^0,f,c
  2033  003974  500E               	movf	led_turn_on@pin_obj^0,w,c
  2034  003976  180D               	xorwf	??_led_turn_on^0,w,c
  2035  003978  0BC7               	andlw	-57
  2036  00397A  180D               	xorwf	??_led_turn_on^0,w,c
  2037  00397C  6E0E               	movwf	led_turn_on@pin_obj^0,c
  2038  00397E  9C0E               	bcf	led_turn_on@pin_obj^0,6,c
  2039  003980  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  2040  003984  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  2041  003988  AEDF               	btfss	indf2,7,c
  2042  00398A  D002               	bra	u4445
  2043  00398C  8E0E               	bsf	led_turn_on@pin_obj^0,7,c
  2044  00398E  D001               	bra	u4447
  2045  003990                     u4445:
  2046  003990  9E0E               	bcf	led_turn_on@pin_obj^0,7,c
  2047  003992                     u4447:
  2048  003992                     
  2049                           ;ECU_layer/LED/ecu_led.c: 52:         gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
  2050  003992  0E0E               	movlw	low led_turn_on@pin_obj
  2051  003994  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2052  003996  0E00               	movlw	high led_turn_on@pin_obj
  2053  003998  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2054  00399A  0E01               	movlw	1
  2055  00399C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2056  00399E  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  2057  0039A2                     l285:
  2058  0039A2  0012               	return		;funcret
  2059  0039A4                     __end_of_led_turn_on:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _led_turn_off *****************
  2063 ;; Defined at:
  2064 ;;		line 63 in file "ECU_layer/LED/ecu_led.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  led             2   10[COMRAM] PTR const struct .
  2067 ;;		 -> led_1(1), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  pin_obj         1   13[COMRAM] struct .
  2070 ;;  ret             1    0        unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      unsigned char 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;Total ram usage:        4 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		_gpio_pin_write_logic
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text2
  2095  0039A4                     __ptext2:
  2096                           	callstack 0
  2097  0039A4                     _led_turn_off:
  2098                           	callstack 29
  2099  0039A4                     
  2100                           ;ECU_layer/LED/ecu_led.c: 65:     if(((void*)0) == led){
  2101  0039A4  500B               	movf	led_turn_off@led^0,w,c
  2102  0039A6  100C               	iorwf	(led_turn_off@led+1)^0,w,c
  2103  0039A8  A4D8               	btfss	status,2,c
  2104  0039AA  EFD9  F01C         	goto	u4451
  2105  0039AE  EFDB  F01C         	goto	u4450
  2106  0039B2                     u4451:
  2107  0039B2  EFDD  F01C         	goto	l288
  2108  0039B6                     u4450:
  2109  0039B6                     
  2110                           ;ECU_layer/LED/ecu_led.c: 67:     }
  2111  0039B6  EF0C  F01D         	goto	l292
  2112  0039BA                     l288:
  2113                           
  2114                           ;ECU_layer/LED/ecu_led.c: 69:        pin_config_t pin_obj = {
  2115  0039BA  C0F4  F00E         	movff	led_turn_off@F3055,led_turn_off@pin_obj
  2116  0039BE  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  2117  0039C2  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  2118  0039C6  50DF               	movf	223,w,c
  2119  0039C8  0B0F               	andlw	15
  2120  0039CA  6E0D               	movwf	??_led_turn_off^0,c
  2121  0039CC  500E               	movf	led_turn_off@pin_obj^0,w,c
  2122  0039CE  180D               	xorwf	??_led_turn_off^0,w,c
  2123  0039D0  0BF8               	andlw	-8
  2124  0039D2  180D               	xorwf	??_led_turn_off^0,w,c
  2125  0039D4  6E0E               	movwf	led_turn_off@pin_obj^0,c
  2126  0039D6  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  2127  0039DA  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  2128  0039DE  38DF               	swapf	223,w,c
  2129  0039E0  0B07               	andlw	7
  2130  0039E2  6E0D               	movwf	??_led_turn_off^0,c
  2131  0039E4  460D               	rlncf	??_led_turn_off^0,f,c
  2132  0039E6  460D               	rlncf	??_led_turn_off^0,f,c
  2133  0039E8  460D               	rlncf	??_led_turn_off^0,f,c
  2134  0039EA  500E               	movf	led_turn_off@pin_obj^0,w,c
  2135  0039EC  180D               	xorwf	??_led_turn_off^0,w,c
  2136  0039EE  0BC7               	andlw	-57
  2137  0039F0  180D               	xorwf	??_led_turn_off^0,w,c
  2138  0039F2  6E0E               	movwf	led_turn_off@pin_obj^0,c
  2139  0039F4  9C0E               	bcf	led_turn_off@pin_obj^0,6,c
  2140  0039F6  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  2141  0039FA  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  2142  0039FE  AEDF               	btfss	indf2,7,c
  2143  003A00  D002               	bra	u4465
  2144  003A02  8E0E               	bsf	led_turn_off@pin_obj^0,7,c
  2145  003A04  D001               	bra	u4467
  2146  003A06                     u4465:
  2147  003A06  9E0E               	bcf	led_turn_off@pin_obj^0,7,c
  2148  003A08                     u4467:
  2149  003A08                     
  2150                           ;ECU_layer/LED/ecu_led.c: 75:         gpio_pin_write_logic(&pin_obj, GPIO_LOW);
  2151  003A08  0E0E               	movlw	low led_turn_off@pin_obj
  2152  003A0A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2153  003A0C  0E00               	movlw	high led_turn_off@pin_obj
  2154  003A0E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2155  003A10  0E00               	movlw	0
  2156  003A12  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2157  003A14  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  2158  003A18                     l292:
  2159  003A18  0012               	return		;funcret
  2160  003A1A                     __end_of_led_turn_off:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _lcd_4bit_send_string_pos *****************
  2164 ;; Defined at:
  2165 ;;		line 101 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  lcd             2   25[COMRAM] PTR const struct .
  2168 ;;		 -> lcd_1(6), 
  2169 ;;  row             1   27[COMRAM] unsigned char 
  2170 ;;  column          1   28[COMRAM] unsigned char 
  2171 ;;  str             2   29[COMRAM] PTR unsigned char 
  2172 ;;		 -> arr(11), STR_4(6), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  ret             1   31[COMRAM] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:        7 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 4
  2191 ;; This function calls:
  2192 ;;		_lcd_4bit_send_char_data
  2193 ;;		_lcd_4bits_set_cursor
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text3
  2200  003716                     __ptext3:
  2201                           	callstack 0
  2202  003716                     _lcd_4bit_send_string_pos:
  2203                           	callstack 26
  2204  003716                     
  2205                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 103:     if(((void*)0) == lcd){
  2206  003716  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  2207  003718  101B               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  2208  00371A  A4D8               	btfss	status,2,c
  2209  00371C  EF92  F01B         	goto	u4281
  2210  003720  EF94  F01B         	goto	u4280
  2211  003724                     u4281:
  2212  003724  EF98  F01B         	goto	l5238
  2213  003728                     u4280:
  2214  003728                     
  2215                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = (Std_ReturnType)0x00;
  2216  003728  0E00               	movlw	0
  2217  00372A  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2218                           
  2219                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 105:     }
  2220  00372C  EFD9  F01B         	goto	l5246
  2221  003730                     l5238:
  2222                           
  2223                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 107:         ret = lcd_4bits_set_cursor(lcd, row, colu
      +                          mn);
  2224  003730  C01A  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  2225  003734  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  2226  003738  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bits_set_cursor@row
  2227  00373C  C01D  F016         	movff	lcd_4bit_send_string_pos@column,lcd_4bits_set_cursor@column
  2228  003740  EC93  F01A         	call	_lcd_4bits_set_cursor	;wreg free
  2229  003744  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2230                           
  2231                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 108:         while(*str){
  2232  003746  EFC0  F01B         	goto	l5244
  2233  00374A                     l5240:
  2234                           
  2235                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 109:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  2236  00374A  C01A  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  2237  00374E  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2238  003752  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2239  003756  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2240  00375A  0E00               	movlw	low (__smallconst shr (0+16))
  2241  00375C  6EF8               	movwf	tblptru,c
  2242  00375E  0E0F               	movlw	(high __ramtop+-1)
  2243  003760  64F7               	cpfsgt	tblptrh,c
  2244  003762  D003               	bra	u4297
  2245  003764  0008               	tblrd		*
  2246  003766  50F5               	movf	tablat,w,c
  2247  003768  D005               	bra	u4290
  2248  00376A                     u4297:
  2249  00376A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2250  00376E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2251  003772  50EF               	movf	indf0,w,c
  2252  003774                     u4290:
  2253  003774  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
  2254  003776  EC0D  F01D         	call	_lcd_4bit_send_char_data	;wreg free
  2255  00377A  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2256  00377C  4A1E               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  2257  00377E  2A1F               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  2258  003780                     l5244:
  2259                           
  2260                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 108:         while(*str){
  2261  003780  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  2262  003784  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  2263  003788  0E00               	movlw	low (__smallconst shr (0+16))
  2264  00378A  6EF8               	movwf	tblptru,c
  2265  00378C  0E0F               	movlw	(high __ramtop+-1)
  2266  00378E  64F7               	cpfsgt	tblptrh,c
  2267  003790  D003               	bra	u4307
  2268  003792  0008               	tblrd		*
  2269  003794  50F5               	movf	tablat,w,c
  2270  003796  D005               	bra	u4300
  2271  003798                     u4307:
  2272  003798  CFF6 FFE9          	movff	tblptrl,fsr0l
  2273  00379C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2274  0037A0  50EF               	movf	indf0,w,c
  2275  0037A2                     u4300:
  2276  0037A2  0900               	iorlw	0
  2277  0037A4  A4D8               	btfss	status,2,c
  2278  0037A6  EFD7  F01B         	goto	u4311
  2279  0037AA  EFD9  F01B         	goto	u4310
  2280  0037AE                     u4311:
  2281  0037AE  EFA5  F01B         	goto	l5240
  2282  0037B2                     u4310:
  2283  0037B2                     l5246:
  2284                           
  2285                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 112:     return ret;
  2286  0037B2  5020               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  2287  0037B4  0012               	return		;funcret
  2288  0037B6                     __end_of_lcd_4bit_send_string_pos:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  2292 ;; Defined at:
  2293 ;;		line 76 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  lcd             2   25[COMRAM] PTR const struct .
  2296 ;;		 -> lcd_1(6), 
  2297 ;;  row             1   27[COMRAM] unsigned char 
  2298 ;;  column          1   28[COMRAM] unsigned char 
  2299 ;;  data            1   29[COMRAM] unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  ret             1   30[COMRAM] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      unsigned char 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2311 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;Total ram usage:        6 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 4
  2318 ;; This function calls:
  2319 ;;		_lcd_4bit_send_char_data
  2320 ;;		_lcd_4bits_set_cursor
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;;		_lcd_4bit_send_custom_char
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text4
  2328  003DC0                     __ptext4:
  2329                           	callstack 0
  2330  003DC0                     _lcd_4bit_send_char_data_pos:
  2331                           	callstack 26
  2332  003DC0                     
  2333                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 78:     if(((void*)0) == lcd){
  2334  003DC0  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  2335  003DC2  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  2336  003DC4  A4D8               	btfss	status,2,c
  2337  003DC6  EFE7  F01E         	goto	u4271
  2338  003DCA  EFE9  F01E         	goto	u4270
  2339  003DCE                     u4271:
  2340  003DCE  EFED  F01E         	goto	l5226
  2341  003DD2                     u4270:
  2342  003DD2                     
  2343                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 79:         ret = (Std_ReturnType)0x00;
  2344  003DD2  0E00               	movlw	0
  2345  003DD4  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2346                           
  2347                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 80:     }
  2348  003DD6  EF01  F01F         	goto	l5228
  2349  003DDA                     l5226:
  2350                           
  2351                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 82:         ret = lcd_4bits_set_cursor(lcd, row, colum
      +                          n);
  2352  003DDA  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bits_set_cursor@lcd
  2353  003DDE  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  2354  003DE2  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bits_set_cursor@row
  2355  003DE6  C01D  F016         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bits_set_cursor@column
  2356  003DEA  EC93  F01A         	call	_lcd_4bits_set_cursor	;wreg free
  2357  003DEE  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2358                           
  2359                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 83:         ret = lcd_4bit_send_char_data(lcd, data);
  2360  003DF0  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2361  003DF4  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  2362  003DF8  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  2363  003DFC  EC0D  F01D         	call	_lcd_4bit_send_char_data	;wreg free
  2364  003E00  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2365  003E02                     l5228:
  2366                           
  2367                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 85:     return ret;
  2368  003E02  501F               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  2369  003E04  0012               	return		;funcret
  2370  003E06                     __end_of_lcd_4bit_send_char_data_pos:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _lcd_4bits_set_cursor *****************
  2374 ;; Defined at:
  2375 ;;		line 324 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  lcd             2   18[COMRAM] PTR const struct .
  2378 ;;		 -> lcd_1(6), 
  2379 ;;  row             1   20[COMRAM] unsigned char 
  2380 ;;  column          1   21[COMRAM] unsigned char 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  ret             1   24[COMRAM] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      unsigned char 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;Total ram usage:        7 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 3
  2399 ;; This function calls:
  2400 ;;		_lcd_4bit_send_command
  2401 ;; This function is called by:
  2402 ;;		_lcd_4bit_send_char_data_pos
  2403 ;;		_lcd_4bit_send_string_pos
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text5
  2408  003526                     __ptext5:
  2409                           	callstack 0
  2410  003526                     _lcd_4bits_set_cursor:
  2411                           	callstack 26
  2412  003526                     
  2413                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 325:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2414  003526  0E01               	movlw	1
  2415  003528  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  2416  00352A                     
  2417                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 326:     column--;
  2418  00352A  0616               	decf	lcd_4bits_set_cursor@column^0,f,c
  2419                           
  2420                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 327:     switch (row){
  2421  00352C  EFC8  F01A         	goto	l4946
  2422  003530                     l4938:
  2423  003530  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  2424  003534  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2425  003538  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  2426  00353A  0F80               	addlw	128
  2427  00353C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2428  00353E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  2429  003542  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  2430                           
  2431                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 329:                    break;
  2432  003544  EFE5  F01A         	goto	l4948
  2433  003548                     l4940:
  2434  003548  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  2435  00354C  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2436  003550  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  2437  003552  0FC0               	addlw	192
  2438  003554  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2439  003556  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  2440  00355A  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  2441                           
  2442                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 331:                    break;
  2443  00355C  EFE5  F01A         	goto	l4948
  2444  003560                     l4942:
  2445  003560  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  2446  003564  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2447  003568  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  2448  00356A  0F94               	addlw	148
  2449  00356C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2450  00356E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  2451  003572  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  2452                           
  2453                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 333:                    break;
  2454  003574  EFE5  F01A         	goto	l4948
  2455  003578                     l4944:
  2456  003578  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  2457  00357C  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  2458  003580  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  2459  003582  0FD4               	addlw	212
  2460  003584  6E11               	movwf	lcd_4bit_send_command@command^0,c
  2461  003586  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  2462  00358A  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  2463                           
  2464                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 335:                    break;
  2465  00358C  EFE5  F01A         	goto	l4948
  2466  003590                     l4946:
  2467  003590  5015               	movf	lcd_4bits_set_cursor@row^0,w,c
  2468  003592  6E17               	movwf	??_lcd_4bits_set_cursor^0,c
  2469  003594  6A18               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  2470                           
  2471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2472                           ; Switch size 1, requested type "simple"
  2473                           ; Number of cases is 1, Range of values is 0 to 0
  2474                           ; switch strategies available:
  2475                           ; Name         Instructions Cycles
  2476                           ; simple_byte            4     3 (average)
  2477                           ;	Chosen strategy is simple_byte
  2478  003596  5018               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  2479  003598  0A00               	xorlw	0	; case 0
  2480  00359A  B4D8               	btfsc	status,2,c
  2481  00359C  EFD2  F01A         	goto	l6314
  2482  0035A0  EFE5  F01A         	goto	l4948
  2483  0035A4                     l6314:
  2484                           
  2485                           ; Switch size 1, requested type "simple"
  2486                           ; Number of cases is 4, Range of values is 1 to 4
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte           13     7 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491  0035A4  5017               	movf	??_lcd_4bits_set_cursor^0,w,c
  2492  0035A6  0A01               	xorlw	1	; case 1
  2493  0035A8  B4D8               	btfsc	status,2,c
  2494  0035AA  EF98  F01A         	goto	l4938
  2495  0035AE  0A03               	xorlw	3	; case 2
  2496  0035B0  B4D8               	btfsc	status,2,c
  2497  0035B2  EFA4  F01A         	goto	l4940
  2498  0035B6  0A01               	xorlw	1	; case 3
  2499  0035B8  B4D8               	btfsc	status,2,c
  2500  0035BA  EFB0  F01A         	goto	l4942
  2501  0035BE  0A07               	xorlw	7	; case 4
  2502  0035C0  B4D8               	btfsc	status,2,c
  2503  0035C2  EFBC  F01A         	goto	l4944
  2504  0035C6  EFE5  F01A         	goto	l4948
  2505  0035CA                     l4948:
  2506                           
  2507                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 338:     return ret;
  2508  0035CA  5019               	movf	lcd_4bits_set_cursor@ret^0,w,c
  2509  0035CC  0012               	return		;funcret
  2510  0035CE                     __end_of_lcd_4bits_set_cursor:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _lcd_4bit_send_char_data *****************
  2514 ;; Defined at:
  2515 ;;		line 61 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  lcd             2   14[COMRAM] PTR const struct .
  2518 ;;		 -> lcd_1(6), 
  2519 ;;  data            1   16[COMRAM] unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  ret             1   17[COMRAM] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      unsigned char 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2531 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;Total ram usage:        4 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 2
  2538 ;; This function calls:
  2539 ;;		_gpio_pin_write_logic
  2540 ;;		_lcd_4bits_send_enable_signal
  2541 ;;		_lcd_send_4bits
  2542 ;; This function is called by:
  2543 ;;		_lcd_4bit_send_char_data_pos
  2544 ;;		_lcd_4bit_send_string_pos
  2545 ;;		_lcd_4bit_send_string
  2546 ;;		_lcd_4bit_send_custom_char
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text6
  2551  003A1A                     __ptext6:
  2552                           	callstack 0
  2553  003A1A                     _lcd_4bit_send_char_data:
  2554                           	callstack 27
  2555  003A1A                     
  2556                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  2557  003A1A  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2558  003A1C  1010               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  2559  003A1E  A4D8               	btfss	status,2,c
  2560  003A20  EF14  F01D         	goto	u3881
  2561  003A24  EF16  F01D         	goto	u3880
  2562  003A28                     u3881:
  2563  003A28  EF1A  F01D         	goto	l4928
  2564  003A2C                     u3880:
  2565  003A2C                     
  2566                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  2567  003A2C  0E00               	movlw	0
  2568  003A2E  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2569                           
  2570                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  2571  003A30  EF44  F01D         	goto	l4930
  2572  003A34                     l4928:
  2573                           
  2574                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  2575  003A34  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2576  003A38  C010  F002         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  2577  003A3C  0E01               	movlw	1
  2578  003A3E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2579  003A40  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  2580  003A44  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2581                           
  2582                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, data >> 4);
  2583  003A46  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2584  003A4A  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2585  003A4E  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2586  003A50  0B0F               	andlw	15
  2587  003A52  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
  2588  003A54  EC20  F01E         	call	_lcd_send_4bits	;wreg free
  2589  003A58  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2590                           
  2591                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bits_send_enable_signal(lcd);
  2592  003A5A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2593  003A5E  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2594  003A62  EC8A  F01F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2595  003A66  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2596                           
  2597                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, data >> 0);
  2598  003A68  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2599  003A6C  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  2600  003A70  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  2601  003A74  EC20  F01E         	call	_lcd_send_4bits	;wreg free
  2602  003A78  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2603                           
  2604                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bits_send_enable_signal(lcd);
  2605  003A7A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  2606  003A7E  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  2607  003A82  EC8A  F01F         	call	_lcd_4bits_send_enable_signal	;wreg free
  2608  003A86  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  2609  003A88                     l4930:
  2610                           
  2611                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  2612  003A88  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2613  003A8A  0012               	return		;funcret
  2614  003A8C                     __end_of_lcd_4bit_send_char_data:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _keypad_get_value *****************
  2618 ;; Defined at:
  2619 ;;		line 56 in file "ECU_layer/KeyPad/ecu_keypad.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  2622 ;;		 -> keypad_1(10), 
  2623 ;;  value           2   12[COMRAM] PTR unsigned char 
  2624 ;;		 -> val(1), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  l_columns_co    1   20[COMRAM] unsigned char 
  2627 ;;  l_row_counte    1   19[COMRAM] unsigned char 
  2628 ;;  l_counter       1   18[COMRAM] unsigned char 
  2629 ;;  column_logic    1   17[COMRAM] enum E2965
  2630 ;;  ret             1   16[COMRAM] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      unsigned char 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:       11 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 1
  2647 ;; This function calls:
  2648 ;;		_gpio_pin_read_logic
  2649 ;;		_gpio_pin_write_logic
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text7
  2656  002D58                     __ptext7:
  2657                           	callstack 0
  2658  002D58                     _keypad_get_value:
  2659                           	callstack 29
  2660  002D58  0E00               	movlw	0
  2661  002D5A  6E14               	movwf	keypad_get_value@l_row_counter^0,c
  2662  002D5C  0E00               	movlw	0
  2663  002D5E  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  2664  002D60  0E00               	movlw	0
  2665  002D62  6E13               	movwf	keypad_get_value@l_counter^0,c
  2666  002D64  0E00               	movlw	0
  2667  002D66  6E12               	movwf	keypad_get_value@column_logic^0,c
  2668  002D68  500B               	movf	keypad_get_value@_keypad_obj^0,w,c
  2669  002D6A  100C               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  2670  002D6C  B4D8               	btfsc	status,2,c
  2671  002D6E  EFBB  F016         	goto	u4371
  2672  002D72  EFBD  F016         	goto	u4370
  2673  002D76                     u4371:
  2674  002D76  EFC6  F016         	goto	l5308
  2675  002D7A                     u4370:
  2676  002D7A  500D               	movf	keypad_get_value@value^0,w,c
  2677  002D7C  100E               	iorwf	(keypad_get_value@value+1)^0,w,c
  2678  002D7E  A4D8               	btfss	status,2,c
  2679  002D80  EFC4  F016         	goto	u4381
  2680  002D84  EFC6  F016         	goto	u4380
  2681  002D88                     u4381:
  2682  002D88  EFCA  F016         	goto	l5310
  2683  002D8C                     u4380:
  2684  002D8C                     l5308:
  2685  002D8C  0E00               	movlw	0
  2686  002D8E  6E11               	movwf	keypad_get_value@ret^0,c
  2687  002D90  EF3B  F017         	goto	l5352
  2688  002D94                     l5310:
  2689  002D94  0E00               	movlw	0
  2690  002D96  6E14               	movwf	keypad_get_value@l_row_counter^0,c
  2691  002D98                     l5316:
  2692  002D98  0E00               	movlw	0
  2693  002D9A  6E13               	movwf	keypad_get_value@l_counter^0,c
  2694  002D9C                     l5322:
  2695  002D9C  5013               	movf	keypad_get_value@l_counter^0,w,c
  2696  002D9E  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2697  002DA0  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2698  002DA2  0E00               	movlw	0
  2699  002DA4  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2700  002DA6  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2701  002DA8  0E00               	movlw	0
  2702  002DAA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2703  002DAC  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  2704  002DB0  2A13               	incf	keypad_get_value@l_counter^0,f,c
  2705  002DB2  0E03               	movlw	3
  2706  002DB4  6413               	cpfsgt	keypad_get_value@l_counter^0,c
  2707  002DB6  EFDF  F016         	goto	u4391
  2708  002DBA  EFE1  F016         	goto	u4390
  2709  002DBE                     u4391:
  2710  002DBE  EFCE  F016         	goto	l5322
  2711  002DC2                     u4390:
  2712  002DC2  5014               	movf	keypad_get_value@l_row_counter^0,w,c
  2713  002DC4  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2714  002DC6  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2715  002DC8  0E00               	movlw	0
  2716  002DCA  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2717  002DCC  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2718  002DCE  0E01               	movlw	1
  2719  002DD0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2720  002DD2  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  2721  002DD6  0E82               	movlw	130
  2722  002DD8  6E0F               	movwf	??_keypad_get_value^0,c
  2723  002DDA  0EDE               	movlw	222
  2724  002DDC                     u5367:
  2725  002DDC  2EE8               	decfsz	wreg,f,c
  2726  002DDE  D7FE               	bra	u5367
  2727  002DE0  2E0F               	decfsz	??_keypad_get_value^0,f,c
  2728  002DE2  D7FC               	bra	u5367
  2729  002DE4  0E00               	movlw	0
  2730  002DE6  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  2731  002DE8                     l5338:
  2732  002DE8  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  2733  002DEA  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  2734  002DEC  6E0F               	movwf	??_keypad_get_value^0,c
  2735  002DEE  0E00               	movlw	0
  2736  002DF0  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  2737  002DF2  6E10               	movwf	(??_keypad_get_value+1)^0,c
  2738  002DF4  0E04               	movlw	4
  2739  002DF6  240F               	addwf	??_keypad_get_value^0,w,c
  2740  002DF8  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  2741  002DFA  0E00               	movlw	0
  2742  002DFC  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
  2743  002DFE  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  2744  002E00  0E12               	movlw	low keypad_get_value@column_logic
  2745  002E02  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  2746  002E04  0E00               	movlw	high keypad_get_value@column_logic
  2747  002E06  6E04               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  2748  002E08  ECE2  F019         	call	_gpio_pin_read_logic	;wreg free
  2749  002E0C  6E11               	movwf	keypad_get_value@ret^0,c
  2750  002E0E  0412               	decf	keypad_get_value@column_logic^0,w,c
  2751  002E10  A4D8               	btfss	status,2,c
  2752  002E12  EF0D  F017         	goto	u4401
  2753  002E16  EF0F  F017         	goto	u4400
  2754  002E1A                     u4401:
  2755  002E1A  EF29  F017         	goto	l5344
  2756  002E1E                     u4400:
  2757  002E1E  5014               	movf	keypad_get_value@l_row_counter^0,w,c
  2758  002E20  0D06               	mullw	6
  2759  002E22  0E01               	movlw	low _btn_values
  2760  002E24  6E0F               	movwf	??_keypad_get_value^0,c
  2761  002E26  0E10               	movlw	high _btn_values
  2762  002E28  6E10               	movwf	(??_keypad_get_value+1)^0,c
  2763  002E2A  50F3               	movf	243,w,c
  2764  002E2C  260F               	addwf	??_keypad_get_value^0,f,c
  2765  002E2E  50F4               	movf	244,w,c
  2766  002E30  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  2767  002E32  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  2768  002E34  260F               	addwf	??_keypad_get_value^0,f,c
  2769  002E36  0E00               	movlw	0
  2770  002E38  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  2771  002E3A  C00F  FFF6         	movff	??_keypad_get_value,tblptrl
  2772  002E3E  C010  FFF7         	movff	??_keypad_get_value+1,tblptrh
  2773  002E42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2774  002E42  6AF8               	clrf	tblptru,c
  2775  002E44                     	endif
  2776  002E44                     	if	0	;tblptru may be non-zero
  2777  002E44                     	endif
  2778  002E44  C00D  FFD9         	movff	keypad_get_value@value,fsr2l
  2779  002E48  C00E  FFDA         	movff	keypad_get_value@value+1,fsr2h
  2780  002E4C  0008               	tblrd		*
  2781  002E4E  CFF5 FFDF          	movff	tablat,indf2
  2782  002E52                     l5344:
  2783  002E52  2A15               	incf	keypad_get_value@l_columns_counter^0,f,c
  2784  002E54  0E05               	movlw	5
  2785  002E56  6415               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  2786  002E58  EF30  F017         	goto	u4411
  2787  002E5C  EF32  F017         	goto	u4410
  2788  002E60                     u4411:
  2789  002E60  EFF4  F016         	goto	l5338
  2790  002E64                     u4410:
  2791  002E64  2A14               	incf	keypad_get_value@l_row_counter^0,f,c
  2792  002E66  0E03               	movlw	3
  2793  002E68  6414               	cpfsgt	keypad_get_value@l_row_counter^0,c
  2794  002E6A  EF39  F017         	goto	u4421
  2795  002E6E  EF3B  F017         	goto	u4420
  2796  002E72                     u4421:
  2797  002E72  EFCC  F016         	goto	l5316
  2798  002E76                     u4420:
  2799  002E76                     l5352:
  2800  002E76  5011               	movf	keypad_get_value@ret^0,w,c
  2801  002E78  0012               	return		;funcret
  2802  002E7A                     __end_of_keypad_get_value:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _gpio_pin_read_logic *****************
  2806 ;; Defined at:
  2807 ;;		line 106 in file "MCAL_layer/GPIO/hal_gpio.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2810 ;;		 -> keypad_1.keypad_column_pins(6), keypad_1(10), 
  2811 ;;  logic           2    2[COMRAM] PTR enum E2965
  2812 ;;		 -> keypad_get_value@column_logic(1), button_read_state@Pin_Logic_Status(1), 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  ret             1    9[COMRAM] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:       10 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_keypad_get_value
  2834 ;;		_button_read_state
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text8
  2839  0033C4                     __ptext8:
  2840                           	callstack 0
  2841  0033C4                     _gpio_pin_read_logic:
  2842                           	callstack 29
  2843  0033C4                     
  2844                           ;MCAL_layer/GPIO/hal_gpio.c: 107:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2845  0033C4  0E01               	movlw	1
  2846  0033C6  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  2847  0033C8                     
  2848                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1){
  2849  0033C8  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2850  0033CA  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  2851  0033CC  B4D8               	btfsc	status,2,c
  2852  0033CE  EFEB  F019         	goto	u3841
  2853  0033D2  EFED  F019         	goto	u3840
  2854  0033D6                     u3841:
  2855  0033D6  EF07  F01A         	goto	l4914
  2856  0033DA                     u3840:
  2857  0033DA  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  2858  0033DC  1004               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  2859  0033DE  B4D8               	btfsc	status,2,c
  2860  0033E0  EFF4  F019         	goto	u3851
  2861  0033E4  EFF6  F019         	goto	u3850
  2862  0033E8                     u3851:
  2863  0033E8  EF07  F01A         	goto	l4914
  2864  0033EC                     u3850:
  2865  0033EC  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2866  0033F0  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2867  0033F4  30DF               	rrcf	223,w,c
  2868  0033F6  32E8               	rrcf	wreg,f,c
  2869  0033F8  32E8               	rrcf	wreg,f,c
  2870  0033FA  0B07               	andlw	7
  2871  0033FC  6E05               	movwf	??_gpio_pin_read_logic^0,c
  2872  0033FE  0E07               	movlw	7
  2873  003400  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
  2874  003402  EF05  F01A         	goto	u3861
  2875  003406  EF07  F01A         	goto	u3860
  2876  00340A                     u3861:
  2877  00340A  EF0B  F01A         	goto	l4916
  2878  00340E                     u3860:
  2879  00340E                     l4914:
  2880                           
  2881                           ;MCAL_layer/GPIO/hal_gpio.c: 109:         ret = (Std_ReturnType)0x00;
  2882  00340E  0E00               	movlw	0
  2883  003410  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  2884                           
  2885                           ;MCAL_layer/GPIO/hal_gpio.c: 110:     }
  2886  003412  EF3C  F01A         	goto	l4918
  2887  003416                     l4916:
  2888                           
  2889                           ;MCAL_layer/GPIO/hal_gpio.c: 112:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin) & (uint8)1);
  2890  003416  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2891  00341A  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2892  00341E  30DF               	rrcf	223,w,c
  2893  003420  32E8               	rrcf	wreg,f,c
  2894  003422  32E8               	rrcf	wreg,f,c
  2895  003424  0B07               	andlw	7
  2896  003426  6E05               	movwf	??_gpio_pin_read_logic^0,c
  2897  003428  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  2898  00342C  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  2899  003430  50DF               	movf	223,w,c
  2900  003432  0B07               	andlw	7
  2901  003434  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  2902  003436  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  2903  003438  0D02               	mullw	2
  2904  00343A  0EA1               	movlw	low _port_registers
  2905  00343C  24F3               	addwf	243,w,c
  2906  00343E  6ED9               	movwf	fsr2l,c
  2907  003440  0E01               	movlw	high _port_registers
  2908  003442  20F4               	addwfc	prodh,w,c
  2909  003444  6EDA               	movwf	fsr2h,c
  2910  003446  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  2911  00344A  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  2912  00344E  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  2913  003452  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  2914  003456  50DF               	movf	indf2,w,c
  2915  003458  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  2916  00345A  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  2917  00345C  EF32  F01A         	goto	u3874
  2918  003460                     u3875:
  2919  003460  90D8               	bcf	status,0,c
  2920  003462  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  2921  003464                     u3874:
  2922  003464  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  2923  003466  EF30  F01A         	goto	u3875
  2924  00346A  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  2925  00346C  0B01               	andlw	1
  2926  00346E  C003  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  2927  003472  C004  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  2928  003476  6EDF               	movwf	indf2,c
  2929  003478                     l4918:
  2930                           
  2931                           ;MCAL_layer/GPIO/hal_gpio.c: 114:     return ret;
  2932  003478  500A               	movf	gpio_pin_read_logic@ret^0,w,c
  2933  00347A  0012               	return		;funcret
  2934  00347C                     __end_of_gpio_pin_read_logic:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _infixToPostfix *****************
  2938 ;; Defined at:
  2939 ;;		line 97 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  infix           2   13[COMRAM] PTR const unsigned char 
  2942 ;;		 -> infix(100), 
  2943 ;;  postfix         2   15[COMRAM] PTR unsigned long 
  2944 ;;		 -> postfix(80), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  current         1   26[COMRAM] unsigned char 
  2947 ;;  operatorStac   82   31[COMRAM] struct Stack_t
  2948 ;;  num_1           4   22[COMRAM] unsigned long 
  2949 ;;  j               2   29[COMRAM] int 
  2950 ;;  i               2   27[COMRAM] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:        91       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:       100       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:      100 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 1
  2967 ;; This function calls:
  2968 ;;		___lmul
  2969 ;;		_check_digit
  2970 ;;		_initialize_t
  2971 ;;		_operator_type
  2972 ;;		_pop_t
  2973 ;;		_precedence
  2974 ;;		_push_t
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text9
  2981  0018DE                     __ptext9:
  2982                           	callstack 0
  2983  0018DE                     _infixToPostfix:
  2984                           	callstack 29
  2985  0018DE                     
  2986                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 98:     struct Stack_t operatorStack;;Algo
      +                          rithms/Infix_to_postfix/infix_to_post.c: 99:     initialize_t(&operatorStack);
  2987  0018DE  0E20               	movlw	low infixToPostfix@operatorStack
  2988  0018E0  6E01               	movwf	initialize_t@stack^0,c
  2989  0018E2  0E00               	movlw	high infixToPostfix@operatorStack
  2990  0018E4  6E02               	movwf	(initialize_t@stack+1)^0,c
  2991  0018E6  EC0D  F020         	call	_initialize_t	;wreg free
  2992  0018EA                     
  2993                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 100:     uint32 num_1 = 0;
  2994  0018EA  0E00               	movlw	0
  2995  0018EC  6E17               	movwf	infixToPostfix@num_1^0,c
  2996  0018EE  0E00               	movlw	0
  2997  0018F0  6E18               	movwf	(infixToPostfix@num_1+1)^0,c
  2998  0018F2  0E00               	movlw	0
  2999  0018F4  6E19               	movwf	(infixToPostfix@num_1+2)^0,c
  3000  0018F6  0E00               	movlw	0
  3001  0018F8  6E1A               	movwf	(infixToPostfix@num_1+3)^0,c
  3002  0018FA                     
  3003                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 101:     int i = 0;
  3004  0018FA  0E00               	movlw	0
  3005  0018FC  6E1D               	movwf	(infixToPostfix@i+1)^0,c
  3006  0018FE  0E00               	movlw	0
  3007  001900  6E1C               	movwf	infixToPostfix@i^0,c
  3008  001902                     
  3009                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 102:     int j = 0;
  3010  001902  0E00               	movlw	0
  3011  001904  6E1F               	movwf	(infixToPostfix@j+1)^0,c
  3012  001906  0E00               	movlw	0
  3013  001908  6E1E               	movwf	infixToPostfix@j^0,c
  3014                           
  3015                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 103:     while (infix[i] != '\0') {
  3016  00190A  EF9D  F00D         	goto	l5476
  3017  00190E                     l5436:
  3018                           
  3019                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 104:         char current = infix[i];
  3020  00190E  501C               	movf	infixToPostfix@i^0,w,c
  3021  001910  240E               	addwf	infixToPostfix@infix^0,w,c
  3022  001912  6ED9               	movwf	fsr2l,c
  3023  001914  501D               	movf	(infixToPostfix@i+1)^0,w,c
  3024  001916  200F               	addwfc	(infixToPostfix@infix+1)^0,w,c
  3025  001918  6EDA               	movwf	fsr2h,c
  3026  00191A  50DF               	movf	indf2,w,c
  3027  00191C  6E1B               	movwf	infixToPostfix@current^0,c
  3028  00191E                     
  3029                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 106:         if (current == ' ') {
  3030  00191E  0E20               	movlw	32
  3031  001920  181B               	xorwf	infixToPostfix@current^0,w,c
  3032  001922  A4D8               	btfss	status,2,c
  3033  001924  EF96  F00C         	goto	u4501
  3034  001928  EF98  F00C         	goto	u4500
  3035  00192C                     u4501:
  3036  00192C  EF9C  F00C         	goto	l5442
  3037  001930                     u4500:
  3038  001930                     l5440:
  3039                           
  3040                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 107:             i++;
  3041  001930  4A1C               	infsnz	infixToPostfix@i^0,f,c
  3042  001932  2A1D               	incf	(infixToPostfix@i+1)^0,f,c
  3043                           
  3044                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 108:             continue;
  3045  001934  EF9D  F00D         	goto	l5476
  3046  001938                     l5442:
  3047                           
  3048                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 111:         if (check_digit(current) || c
      +                          urrent == '.') {
  3049  001938  501B               	movf	infixToPostfix@current^0,w,c
  3050  00193A  ECA8  F01F         	call	_check_digit
  3051  00193E  5001               	movf	?_check_digit^0,w,c
  3052  001940  1002               	iorwf	(?_check_digit+1)^0,w,c
  3053  001942  A4D8               	btfss	status,2,c
  3054  001944  EFA6  F00C         	goto	u4511
  3055  001948  EFA8  F00C         	goto	u4510
  3056  00194C                     u4511:
  3057  00194C  EFE4  F00C         	goto	l5450
  3058  001950                     u4510:
  3059  001950  0E2E               	movlw	46
  3060  001952  181B               	xorwf	infixToPostfix@current^0,w,c
  3061  001954  A4D8               	btfss	status,2,c
  3062  001956  EFAF  F00C         	goto	u4521
  3063  00195A  EFB1  F00C         	goto	u4520
  3064  00195E                     u4521:
  3065  00195E  EF57  F00D         	goto	l5468
  3066  001962                     u4520:
  3067  001962  EFE4  F00C         	goto	l5450
  3068  001966                     l5446:
  3069                           
  3070                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 113:                 num_1 = num_1 * 10 + 
      +                          (infix[i] - '0');
  3071  001966  0ED0               	movlw	208
  3072  001968  6E12               	movwf	??_infixToPostfix^0,c
  3073  00196A  0EFF               	movlw	255
  3074  00196C  6E13               	movwf	(??_infixToPostfix+1)^0,c
  3075  00196E  501C               	movf	infixToPostfix@i^0,w,c
  3076  001970  240E               	addwf	infixToPostfix@infix^0,w,c
  3077  001972  6ED9               	movwf	fsr2l,c
  3078  001974  501D               	movf	(infixToPostfix@i+1)^0,w,c
  3079  001976  200F               	addwfc	(infixToPostfix@infix+1)^0,w,c
  3080  001978  6EDA               	movwf	fsr2h,c
  3081  00197A  50DF               	movf	indf2,w,c
  3082  00197C  6E14               	movwf	(??_infixToPostfix+2)^0,c
  3083  00197E  6A15               	clrf	(??_infixToPostfix+3)^0,c
  3084  001980  5012               	movf	??_infixToPostfix^0,w,c
  3085  001982  2614               	addwf	(??_infixToPostfix+2)^0,f,c
  3086  001984  5013               	movf	(??_infixToPostfix+1)^0,w,c
  3087  001986  2215               	addwfc	(??_infixToPostfix+3)^0,f,c
  3088  001988  C017  F001         	movff	infixToPostfix@num_1,___lmul@multiplier
  3089  00198C  C018  F002         	movff	infixToPostfix@num_1+1,___lmul@multiplier+1
  3090  001990  C019  F003         	movff	infixToPostfix@num_1+2,___lmul@multiplier+2
  3091  001994  C01A  F004         	movff	infixToPostfix@num_1+3,___lmul@multiplier+3
  3092  001998  0E0A               	movlw	10
  3093  00199A  6E05               	movwf	___lmul@multiplicand^0,c
  3094  00199C  0E00               	movlw	0
  3095  00199E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3096  0019A0  0E00               	movlw	0
  3097  0019A2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3098  0019A4  0E00               	movlw	0
  3099  0019A6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3100  0019A8  ECEB  F01D         	call	___lmul	;wreg free
  3101  0019AC  5014               	movf	(??_infixToPostfix+2)^0,w,c
  3102  0019AE  2401               	addwf	?___lmul^0,w,c
  3103  0019B0  6E17               	movwf	infixToPostfix@num_1^0,c
  3104  0019B2  5015               	movf	(??_infixToPostfix+3)^0,w,c
  3105  0019B4  2002               	addwfc	(?___lmul+1)^0,w,c
  3106  0019B6  6E18               	movwf	(infixToPostfix@num_1+1)^0,c
  3107  0019B8  0E00               	movlw	0
  3108  0019BA  2003               	addwfc	(?___lmul+2)^0,w,c
  3109  0019BC  6E19               	movwf	(infixToPostfix@num_1+2)^0,c
  3110  0019BE  0E00               	movlw	0
  3111  0019C0  2004               	addwfc	(?___lmul+3)^0,w,c
  3112  0019C2  6E1A               	movwf	(infixToPostfix@num_1+3)^0,c
  3113  0019C4                     
  3114                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 114:                 i++;
  3115  0019C4  4A1C               	infsnz	infixToPostfix@i^0,f,c
  3116  0019C6  2A1D               	incf	(infixToPostfix@i+1)^0,f,c
  3117  0019C8                     l5450:
  3118                           
  3119                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 112:             while (check_digit(infix[
      +                          i]) || infix[i] == '.') {
  3120  0019C8  501C               	movf	infixToPostfix@i^0,w,c
  3121  0019CA  240E               	addwf	infixToPostfix@infix^0,w,c
  3122  0019CC  6ED9               	movwf	fsr2l,c
  3123  0019CE  501D               	movf	(infixToPostfix@i+1)^0,w,c
  3124  0019D0  200F               	addwfc	(infixToPostfix@infix+1)^0,w,c
  3125  0019D2  6EDA               	movwf	fsr2h,c
  3126  0019D4  50DF               	movf	indf2,w,c
  3127  0019D6  ECA8  F01F         	call	_check_digit
  3128  0019DA  5001               	movf	?_check_digit^0,w,c
  3129  0019DC  1002               	iorwf	(?_check_digit+1)^0,w,c
  3130  0019DE  A4D8               	btfss	status,2,c
  3131  0019E0  EFF4  F00C         	goto	u4531
  3132  0019E4  EFF6  F00C         	goto	u4530
  3133  0019E8                     u4531:
  3134  0019E8  EFB3  F00C         	goto	l5446
  3135  0019EC                     u4530:
  3136  0019EC  501C               	movf	infixToPostfix@i^0,w,c
  3137  0019EE  240E               	addwf	infixToPostfix@infix^0,w,c
  3138  0019F0  6ED9               	movwf	fsr2l,c
  3139  0019F2  501D               	movf	(infixToPostfix@i+1)^0,w,c
  3140  0019F4  200F               	addwfc	(infixToPostfix@infix+1)^0,w,c
  3141  0019F6  6EDA               	movwf	fsr2h,c
  3142  0019F8  0E2E               	movlw	46
  3143  0019FA  18DE               	xorwf	postinc2,w,c
  3144  0019FC  B4D8               	btfsc	status,2,c
  3145  0019FE  EF03  F00D         	goto	u4541
  3146  001A02  EF05  F00D         	goto	u4540
  3147  001A06                     u4541:
  3148  001A06  EFB3  F00C         	goto	l5446
  3149  001A0A                     u4540:
  3150  001A0A                     
  3151                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 117:             postfix[j++] = num_1;
  3152  001A0A  90D8               	bcf	status,0,c
  3153  001A0C  341E               	rlcf	infixToPostfix@j^0,w,c
  3154  001A0E  6ED9               	movwf	fsr2l,c
  3155  001A10  341F               	rlcf	(infixToPostfix@j+1)^0,w,c
  3156  001A12  6EDA               	movwf	fsr2h,c
  3157  001A14  90D8               	bcf	status,0,c
  3158  001A16  36D9               	rlcf	fsr2l,f,c
  3159  001A18  36DA               	rlcf	fsr2h,f,c
  3160  001A1A  5010               	movf	infixToPostfix@postfix^0,w,c
  3161  001A1C  26D9               	addwf	fsr2l,f,c
  3162  001A1E  5011               	movf	(infixToPostfix@postfix+1)^0,w,c
  3163  001A20  22DA               	addwfc	fsr2h,f,c
  3164  001A22  C017  FFDE         	movff	infixToPostfix@num_1,postinc2
  3165  001A26  C018  FFDE         	movff	infixToPostfix@num_1+1,postinc2
  3166  001A2A  C019  FFDE         	movff	infixToPostfix@num_1+2,postinc2
  3167  001A2E  C01A  FFDE         	movff	infixToPostfix@num_1+3,postinc2
  3168  001A32  4A1E               	infsnz	infixToPostfix@j^0,f,c
  3169  001A34  2A1F               	incf	(infixToPostfix@j+1)^0,f,c
  3170  001A36                     
  3171                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 118:             num_1 = 0.0;
  3172  001A36  0E00               	movlw	0
  3173  001A38  6E17               	movwf	infixToPostfix@num_1^0,c
  3174  001A3A  0E00               	movlw	0
  3175  001A3C  6E18               	movwf	(infixToPostfix@num_1+1)^0,c
  3176  001A3E  0E00               	movlw	0
  3177  001A40  6E19               	movwf	(infixToPostfix@num_1+2)^0,c
  3178  001A42  0E00               	movlw	0
  3179  001A44  6E1A               	movwf	(infixToPostfix@num_1+3)^0,c
  3180  001A46                     
  3181                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 119:             postfix[j++] = 4294967291
      +                          ;
  3182  001A46  90D8               	bcf	status,0,c
  3183  001A48  341E               	rlcf	infixToPostfix@j^0,w,c
  3184  001A4A  6ED9               	movwf	fsr2l,c
  3185  001A4C  341F               	rlcf	(infixToPostfix@j+1)^0,w,c
  3186  001A4E  6EDA               	movwf	fsr2h,c
  3187  001A50  90D8               	bcf	status,0,c
  3188  001A52  36D9               	rlcf	fsr2l,f,c
  3189  001A54  36DA               	rlcf	fsr2h,f,c
  3190  001A56  5010               	movf	infixToPostfix@postfix^0,w,c
  3191  001A58  26D9               	addwf	fsr2l,f,c
  3192  001A5A  5011               	movf	(infixToPostfix@postfix+1)^0,w,c
  3193  001A5C  22DA               	addwfc	fsr2h,f,c
  3194  001A5E  0EFB               	movlw	251
  3195  001A60  6EDE               	movwf	postinc2,c
  3196  001A62  0EFF               	movlw	255
  3197  001A64  6EDE               	movwf	postinc2,c
  3198  001A66  0EFF               	movlw	255
  3199  001A68  6EDE               	movwf	postinc2,c
  3200  001A6A  0EFF               	movlw	255
  3201  001A6C  6EDD               	movwf	postdec2,c
  3202  001A6E  4A1E               	infsnz	infixToPostfix@j^0,f,c
  3203  001A70  2A1F               	incf	(infixToPostfix@j+1)^0,f,c
  3204                           
  3205                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 121:         } else {
  3206  001A72  EF9D  F00D         	goto	l5476
  3207  001A76                     l5464:
  3208                           
  3209                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 123:                 postfix[j++] = pop_t(
      +                          &operatorStack);
  3210  001A76  0E20               	movlw	low infixToPostfix@operatorStack
  3211  001A78  6E01               	movwf	pop_t@stack^0,c
  3212  001A7A  0E00               	movlw	high infixToPostfix@operatorStack
  3213  001A7C  6E02               	movwf	(pop_t@stack+1)^0,c
  3214  001A7E  EC03  F01F         	call	_pop_t	;wreg free
  3215  001A82  90D8               	bcf	status,0,c
  3216  001A84  341E               	rlcf	infixToPostfix@j^0,w,c
  3217  001A86  6ED9               	movwf	fsr2l,c
  3218  001A88  341F               	rlcf	(infixToPostfix@j+1)^0,w,c
  3219  001A8A  6EDA               	movwf	fsr2h,c
  3220  001A8C  90D8               	bcf	status,0,c
  3221  001A8E  36D9               	rlcf	fsr2l,f,c
  3222  001A90  36DA               	rlcf	fsr2h,f,c
  3223  001A92  5010               	movf	infixToPostfix@postfix^0,w,c
  3224  001A94  26D9               	addwf	fsr2l,f,c
  3225  001A96  5011               	movf	(infixToPostfix@postfix+1)^0,w,c
  3226  001A98  22DA               	addwfc	fsr2h,f,c
  3227  001A9A  C001  FFDE         	movff	?_pop_t,postinc2
  3228  001A9E  C002  FFDE         	movff	?_pop_t+1,postinc2
  3229  001AA2  C003  FFDE         	movff	?_pop_t+2,postinc2
  3230  001AA6  C004  FFDE         	movff	?_pop_t+3,postinc2
  3231  001AAA  4A1E               	infsnz	infixToPostfix@j^0,f,c
  3232  001AAC  2A1F               	incf	(infixToPostfix@j+1)^0,f,c
  3233  001AAE                     l5468:
  3234                           
  3235                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 122:             while (operatorStack.top 
      +                          != -1 && precedence(current) <= precedence(operatorStack.data[operatorStack.top])) {
  3236  001AAE  2870               	incf	(infixToPostfix@operatorStack+80)^0,w,c
  3237  001AB0  E108               	bnz	u4550
  3238  001AB2  2871               	incf	(infixToPostfix@operatorStack+81)^0,w,c
  3239  001AB4  B4D8               	btfsc	status,2,c
  3240  001AB6  EF5F  F00D         	goto	u4551
  3241  001ABA  EF61  F00D         	goto	u4550
  3242  001ABE                     u4551:
  3243  001ABE  EF8A  F00D         	goto	l5472
  3244  001AC2                     u4550:
  3245  001AC2  0E20               	movlw	low infixToPostfix@operatorStack
  3246  001AC4  6E12               	movwf	??_infixToPostfix^0,c
  3247  001AC6  0E00               	movlw	high infixToPostfix@operatorStack
  3248  001AC8  6E13               	movwf	(??_infixToPostfix+1)^0,c
  3249  001ACA  90D8               	bcf	status,0,c
  3250  001ACC  3470               	rlcf	(infixToPostfix@operatorStack+80)^0,w,c
  3251  001ACE  6ED9               	movwf	fsr2l,c
  3252  001AD0  3471               	rlcf	(infixToPostfix@operatorStack+81)^0,w,c
  3253  001AD2  6EDA               	movwf	fsr2h,c
  3254  001AD4  90D8               	bcf	status,0,c
  3255  001AD6  36D9               	rlcf	fsr2l,f,c
  3256  001AD8  36DA               	rlcf	fsr2h,f,c
  3257  001ADA  5012               	movf	??_infixToPostfix^0,w,c
  3258  001ADC  26D9               	addwf	fsr2l,f,c
  3259  001ADE  5013               	movf	(??_infixToPostfix+1)^0,w,c
  3260  001AE0  22DA               	addwfc	fsr2h,f,c
  3261  001AE2  50DF               	movf	indf2,w,c
  3262  001AE4  EC1B  F01C         	call	_precedence
  3263  001AE8  C001  F014         	movff	?_precedence,??_infixToPostfix+2
  3264  001AEC  C002  F015         	movff	?_precedence+1,??_infixToPostfix+3
  3265  001AF0  501B               	movf	infixToPostfix@current^0,w,c
  3266  001AF2  EC1B  F01C         	call	_precedence
  3267  001AF6  5001               	movf	?_precedence^0,w,c
  3268  001AF8  5C14               	subwf	(??_infixToPostfix+2)^0,w,c
  3269  001AFA  5015               	movf	(??_infixToPostfix+3)^0,w,c
  3270  001AFC  0A80               	xorlw	128
  3271  001AFE  6E16               	movwf	(??_infixToPostfix+4)^0,c
  3272  001B00  5002               	movf	(?_precedence+1)^0,w,c
  3273  001B02  0A80               	xorlw	128
  3274  001B04  5816               	subwfb	(??_infixToPostfix+4)^0,w,c
  3275  001B06  B0D8               	btfsc	status,0,c
  3276  001B08  EF88  F00D         	goto	u4561
  3277  001B0C  EF8A  F00D         	goto	u4560
  3278  001B10                     u4561:
  3279  001B10  EF3B  F00D         	goto	l5464
  3280  001B14                     u4560:
  3281  001B14                     l5472:
  3282                           
  3283                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 125:             push_t(&operatorStack, op
      +                          erator_type(current));
  3284  001B14  0E20               	movlw	low infixToPostfix@operatorStack
  3285  001B16  6E06               	movwf	push_t@stack^0,c
  3286  001B18  0E00               	movlw	high infixToPostfix@operatorStack
  3287  001B1A  6E07               	movwf	(push_t@stack+1)^0,c
  3288  001B1C  501B               	movf	infixToPostfix@current^0,w,c
  3289  001B1E  ECE7  F01A         	call	_operator_type
  3290  001B22  C001  F008         	movff	?_operator_type,push_t@c
  3291  001B26  C002  F009         	movff	?_operator_type+1,push_t@c+1
  3292  001B2A  C003  F00A         	movff	?_operator_type+2,push_t@c+2
  3293  001B2E  C004  F00B         	movff	?_operator_type+3,push_t@c+3
  3294  001B32  EC26  F01F         	call	_push_t	;wreg free
  3295  001B36  EF98  F00C         	goto	l5440
  3296  001B3A                     l5476:
  3297                           
  3298                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 103:     while (infix[i] != '\0') {
  3299  001B3A  501C               	movf	infixToPostfix@i^0,w,c
  3300  001B3C  240E               	addwf	infixToPostfix@infix^0,w,c
  3301  001B3E  6ED9               	movwf	fsr2l,c
  3302  001B40  501D               	movf	(infixToPostfix@i+1)^0,w,c
  3303  001B42  200F               	addwfc	(infixToPostfix@infix+1)^0,w,c
  3304  001B44  6EDA               	movwf	fsr2h,c
  3305  001B46  50DF               	movf	indf2,w,c
  3306  001B48  A4D8               	btfss	status,2,c
  3307  001B4A  EFA9  F00D         	goto	u4571
  3308  001B4E  EFAB  F00D         	goto	u4570
  3309  001B52                     u4571:
  3310  001B52  EF87  F00C         	goto	l5436
  3311  001B56                     u4570:
  3312  001B56  EFC9  F00D         	goto	l5482
  3313  001B5A                     l5478:
  3314                           
  3315                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 132:         postfix[j] = pop_t(&operatorS
      +                          tack);
  3316  001B5A  0E20               	movlw	low infixToPostfix@operatorStack
  3317  001B5C  6E01               	movwf	pop_t@stack^0,c
  3318  001B5E  0E00               	movlw	high infixToPostfix@operatorStack
  3319  001B60  6E02               	movwf	(pop_t@stack+1)^0,c
  3320  001B62  EC03  F01F         	call	_pop_t	;wreg free
  3321  001B66  90D8               	bcf	status,0,c
  3322  001B68  341E               	rlcf	infixToPostfix@j^0,w,c
  3323  001B6A  6ED9               	movwf	fsr2l,c
  3324  001B6C  341F               	rlcf	(infixToPostfix@j+1)^0,w,c
  3325  001B6E  6EDA               	movwf	fsr2h,c
  3326  001B70  90D8               	bcf	status,0,c
  3327  001B72  36D9               	rlcf	fsr2l,f,c
  3328  001B74  36DA               	rlcf	fsr2h,f,c
  3329  001B76  5010               	movf	infixToPostfix@postfix^0,w,c
  3330  001B78  26D9               	addwf	fsr2l,f,c
  3331  001B7A  5011               	movf	(infixToPostfix@postfix+1)^0,w,c
  3332  001B7C  22DA               	addwfc	fsr2h,f,c
  3333  001B7E  C001  FFDE         	movff	?_pop_t,postinc2
  3334  001B82  C002  FFDE         	movff	?_pop_t+1,postinc2
  3335  001B86  C003  FFDE         	movff	?_pop_t+2,postinc2
  3336  001B8A  C004  FFDE         	movff	?_pop_t+3,postinc2
  3337  001B8E                     
  3338                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 134:         j++;
  3339  001B8E  4A1E               	infsnz	infixToPostfix@j^0,f,c
  3340  001B90  2A1F               	incf	(infixToPostfix@j+1)^0,f,c
  3341  001B92                     l5482:
  3342                           
  3343                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 131:     while (operatorStack.top != -1) {
  3344  001B92  2870               	incf	(infixToPostfix@operatorStack+80)^0,w,c
  3345  001B94  E106               	bnz	u4581
  3346  001B96  2871               	incf	(infixToPostfix@operatorStack+81)^0,w,c
  3347  001B98  A4D8               	btfss	status,2,c
  3348  001B9A  EFD1  F00D         	goto	u4581
  3349  001B9E  EFD3  F00D         	goto	u4580
  3350  001BA2                     u4581:
  3351  001BA2  EFAD  F00D         	goto	l5478
  3352  001BA6                     u4580:
  3353  001BA6                     
  3354                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 137:     postfix[j] = '\0';
  3355  001BA6  90D8               	bcf	status,0,c
  3356  001BA8  341E               	rlcf	infixToPostfix@j^0,w,c
  3357  001BAA  6ED9               	movwf	fsr2l,c
  3358  001BAC  341F               	rlcf	(infixToPostfix@j+1)^0,w,c
  3359  001BAE  6EDA               	movwf	fsr2h,c
  3360  001BB0  90D8               	bcf	status,0,c
  3361  001BB2  36D9               	rlcf	fsr2l,f,c
  3362  001BB4  36DA               	rlcf	fsr2h,f,c
  3363  001BB6  5010               	movf	infixToPostfix@postfix^0,w,c
  3364  001BB8  26D9               	addwf	fsr2l,f,c
  3365  001BBA  5011               	movf	(infixToPostfix@postfix+1)^0,w,c
  3366  001BBC  22DA               	addwfc	fsr2h,f,c
  3367  001BBE  6ADE               	clrf	postinc2,c
  3368  001BC0  6ADE               	clrf	postinc2,c
  3369  001BC2  6ADE               	clrf	postinc2,c
  3370  001BC4  6ADD               	clrf	postdec2,c
  3371  001BC6  0012               	return		;funcret
  3372  001BC8                     __end_of_infixToPostfix:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _precedence *****************
  3376 ;; Defined at:
  3377 ;;		line 88 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  op              1    wreg     unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  op              1    2[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2    0[COMRAM] int 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        3 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_infixToPostfix
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text10
  3405  003836                     __ptext10:
  3406                           	callstack 0
  3407  003836                     _precedence:
  3408                           	callstack 29
  3409                           
  3410                           ;incstack = 0
  3411                           ;precedence@op stored from wreg
  3412  003836  6E03               	movwf	precedence@op^0,c
  3413  003838                     
  3414                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 89:     if (op == '+' || op == '-')
  3415  003838  0E2B               	movlw	43
  3416  00383A  1803               	xorwf	precedence@op^0,w,c
  3417  00383C  B4D8               	btfsc	status,2,c
  3418  00383E  EF23  F01C         	goto	u4121
  3419  003842  EF25  F01C         	goto	u4120
  3420  003846                     u4121:
  3421  003846  EF2E  F01C         	goto	l5156
  3422  00384A                     u4120:
  3423  00384A  0E2D               	movlw	45
  3424  00384C  1803               	xorwf	precedence@op^0,w,c
  3425  00384E  A4D8               	btfss	status,2,c
  3426  003850  EF2C  F01C         	goto	u4131
  3427  003854  EF2E  F01C         	goto	u4130
  3428  003858                     u4131:
  3429  003858  EF34  F01C         	goto	l5160
  3430  00385C                     u4130:
  3431  00385C                     l5156:
  3432                           
  3433                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 90:         return 1;
  3434  00385C  0E00               	movlw	0
  3435  00385E  6E02               	movwf	(?_precedence+1)^0,c
  3436  003860  0E01               	movlw	1
  3437  003862  6E01               	movwf	?_precedence^0,c
  3438  003864  EF59  F01C         	goto	l934
  3439  003868                     l5160:
  3440                           
  3441                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 91:     if (op == '*' || op == '/' || op =
      +                          = '%')
  3442  003868  0E2A               	movlw	42
  3443  00386A  1803               	xorwf	precedence@op^0,w,c
  3444  00386C  B4D8               	btfsc	status,2,c
  3445  00386E  EF3B  F01C         	goto	u4141
  3446  003872  EF3D  F01C         	goto	u4140
  3447  003876                     u4141:
  3448  003876  EF4F  F01C         	goto	l5166
  3449  00387A                     u4140:
  3450  00387A  0E2F               	movlw	47
  3451  00387C  1803               	xorwf	precedence@op^0,w,c
  3452  00387E  B4D8               	btfsc	status,2,c
  3453  003880  EF44  F01C         	goto	u4151
  3454  003884  EF46  F01C         	goto	u4150
  3455  003888                     u4151:
  3456  003888  EF4F  F01C         	goto	l5166
  3457  00388C                     u4150:
  3458  00388C  0E25               	movlw	37
  3459  00388E  1803               	xorwf	precedence@op^0,w,c
  3460  003890  A4D8               	btfss	status,2,c
  3461  003892  EF4D  F01C         	goto	u4161
  3462  003896  EF4F  F01C         	goto	u4160
  3463  00389A                     u4161:
  3464  00389A  EF55  F01C         	goto	l5170
  3465  00389E                     u4160:
  3466  00389E                     l5166:
  3467                           
  3468                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 92:         return 2;
  3469  00389E  0E00               	movlw	0
  3470  0038A0  6E02               	movwf	(?_precedence+1)^0,c
  3471  0038A2  0E02               	movlw	2
  3472  0038A4  6E01               	movwf	?_precedence^0,c
  3473  0038A6  EF59  F01C         	goto	l934
  3474  0038AA                     l5170:
  3475                           
  3476                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 93:     return 0;
  3477  0038AA  0E00               	movlw	0
  3478  0038AC  6E02               	movwf	(?_precedence+1)^0,c
  3479  0038AE  0E00               	movlw	0
  3480  0038B0  6E01               	movwf	?_precedence^0,c
  3481  0038B2                     l934:
  3482  0038B2  0012               	return		;funcret
  3483  0038B4                     __end_of_precedence:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _operator_type *****************
  3487 ;; Defined at:
  3488 ;;		line 16 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  input           1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  input           1    4[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  4    0[COMRAM] unsigned long 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;Total ram usage:        5 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_infixToPostfix
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text11
  3516  0035CE                     __ptext11:
  3517                           	callstack 0
  3518  0035CE                     _operator_type:
  3519                           	callstack 29
  3520                           
  3521                           ;incstack = 0
  3522                           ;operator_type@input stored from wreg
  3523  0035CE  6E05               	movwf	operator_type@input^0,c
  3524  0035D0                     
  3525                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 17:     if (input == '+'){
  3526  0035D0  0E2B               	movlw	43
  3527  0035D2  1805               	xorwf	operator_type@input^0,w,c
  3528  0035D4  A4D8               	btfss	status,2,c
  3529  0035D6  EFEF  F01A         	goto	u3971
  3530  0035DA  EFF1  F01A         	goto	u3970
  3531  0035DE                     u3971:
  3532  0035DE  EFF7  F01A         	goto	l5052
  3533  0035E2                     u3970:
  3534  0035E2                     
  3535                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 18:         return 4294967295;
  3536  0035E2  6801               	setf	?_operator_type^0,c
  3537  0035E4  6802               	setf	(?_operator_type+1)^0,c
  3538  0035E6  6803               	setf	(?_operator_type+2)^0,c
  3539  0035E8  6804               	setf	(?_operator_type+3)^0,c
  3540  0035EA  EF38  F01B         	goto	l887
  3541  0035EE                     l5052:
  3542  0035EE  0E2A               	movlw	42
  3543  0035F0  1805               	xorwf	operator_type@input^0,w,c
  3544  0035F2  A4D8               	btfss	status,2,c
  3545  0035F4  EFFE  F01A         	goto	u3981
  3546  0035F8  EF00  F01B         	goto	u3980
  3547  0035FC                     u3981:
  3548  0035FC  EF0A  F01B         	goto	l5060
  3549  003600                     u3980:
  3550  003600                     
  3551                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 21:         return 4294967294;
  3552  003600  0EFE               	movlw	254
  3553  003602  6E01               	movwf	?_operator_type^0,c
  3554  003604  0EFF               	movlw	255
  3555  003606  6E02               	movwf	(?_operator_type+1)^0,c
  3556  003608  0EFF               	movlw	255
  3557  00360A  6E03               	movwf	(?_operator_type+2)^0,c
  3558  00360C  0EFF               	movlw	255
  3559  00360E  6E04               	movwf	(?_operator_type+3)^0,c
  3560  003610  EF38  F01B         	goto	l887
  3561  003614                     l5060:
  3562  003614  0E2F               	movlw	47
  3563  003616  1805               	xorwf	operator_type@input^0,w,c
  3564  003618  A4D8               	btfss	status,2,c
  3565  00361A  EF11  F01B         	goto	u3991
  3566  00361E  EF13  F01B         	goto	u3990
  3567  003622                     u3991:
  3568  003622  EF1D  F01B         	goto	l5068
  3569  003626                     u3990:
  3570  003626                     
  3571                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 24:         return 4294967293;
  3572  003626  0EFD               	movlw	253
  3573  003628  6E01               	movwf	?_operator_type^0,c
  3574  00362A  0EFF               	movlw	255
  3575  00362C  6E02               	movwf	(?_operator_type+1)^0,c
  3576  00362E  0EFF               	movlw	255
  3577  003630  6E03               	movwf	(?_operator_type+2)^0,c
  3578  003632  0EFF               	movlw	255
  3579  003634  6E04               	movwf	(?_operator_type+3)^0,c
  3580  003636  EF38  F01B         	goto	l887
  3581  00363A                     l5068:
  3582  00363A  0E2D               	movlw	45
  3583  00363C  1805               	xorwf	operator_type@input^0,w,c
  3584  00363E  A4D8               	btfss	status,2,c
  3585  003640  EF24  F01B         	goto	u4001
  3586  003644  EF26  F01B         	goto	u4000
  3587  003648                     u4001:
  3588  003648  EF30  F01B         	goto	l890
  3589  00364C                     u4000:
  3590  00364C                     
  3591                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 27:         return 4294967292;
  3592  00364C  0EFC               	movlw	252
  3593  00364E  6E01               	movwf	?_operator_type^0,c
  3594  003650  0EFF               	movlw	255
  3595  003652  6E02               	movwf	(?_operator_type+1)^0,c
  3596  003654  0EFF               	movlw	255
  3597  003656  6E03               	movwf	(?_operator_type+2)^0,c
  3598  003658  0EFF               	movlw	255
  3599  00365A  6E04               	movwf	(?_operator_type+3)^0,c
  3600  00365C  EF38  F01B         	goto	l887
  3601  003660                     l890:
  3602  003660                     
  3603                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 29:     return 0;
  3604  003660  0E00               	movlw	0
  3605  003662  6E01               	movwf	?_operator_type^0,c
  3606  003664  0E00               	movlw	0
  3607  003666  6E02               	movwf	(?_operator_type+1)^0,c
  3608  003668  0E00               	movlw	0
  3609  00366A  6E03               	movwf	(?_operator_type+2)^0,c
  3610  00366C  0E00               	movlw	0
  3611  00366E  6E04               	movwf	(?_operator_type+3)^0,c
  3612  003670                     l887:
  3613  003670  0012               	return		;funcret
  3614  003672                     __end_of_operator_type:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _check_digit *****************
  3618 ;; Defined at:
  3619 ;;		line 82 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  c               1    wreg     unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  c               1    2[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    0[COMRAM] int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        3 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_infixToPostfix
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text12
  3647  003F50                     __ptext12:
  3648                           	callstack 0
  3649  003F50                     _check_digit:
  3650                           	callstack 29
  3651                           
  3652                           ;incstack = 0
  3653                           ;check_digit@c stored from wreg
  3654  003F50  6E03               	movwf	check_digit@c^0,c
  3655  003F52                     
  3656                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 83:  if ((c>='0') && (c<='9')) return 1;
  3657  003F52  0E2F               	movlw	47
  3658  003F54  6403               	cpfsgt	check_digit@c^0,c
  3659  003F56  EFAF  F01F         	goto	u4101
  3660  003F5A  EFB1  F01F         	goto	u4100
  3661  003F5E                     u4101:
  3662  003F5E  EFBF  F01F         	goto	l5148
  3663  003F62                     u4100:
  3664  003F62  0E3A               	movlw	58
  3665  003F64  6003               	cpfslt	check_digit@c^0,c
  3666  003F66  EFB7  F01F         	goto	u4111
  3667  003F6A  EFB9  F01F         	goto	u4110
  3668  003F6E                     u4111:
  3669  003F6E  EFBF  F01F         	goto	l5148
  3670  003F72                     u4110:
  3671  003F72  0E00               	movlw	0
  3672  003F74  6E02               	movwf	(?_check_digit+1)^0,c
  3673  003F76  0E01               	movlw	1
  3674  003F78  6E01               	movwf	?_check_digit^0,c
  3675  003F7A  EFC3  F01F         	goto	l928
  3676  003F7E                     l5148:
  3677                           
  3678                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 84:  return 0;
  3679  003F7E  0E00               	movlw	0
  3680  003F80  6E02               	movwf	(?_check_digit+1)^0,c
  3681  003F82  0E00               	movlw	0
  3682  003F84  6E01               	movwf	?_check_digit^0,c
  3683  003F86                     l928:
  3684  003F86  0012               	return		;funcret
  3685  003F88                     __end_of_check_digit:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _evaluate_Postfix *****************
  3689 ;; Defined at:
  3690 ;;		line 142 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  postfix         2   25[COMRAM] PTR const unsigned long 
  3693 ;;		 -> postfix(80), 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  current         4   12[BANK0 ] unsigned long 
  3696 ;;  operandStack   82   18[BANK0 ] struct Stack_t
  3697 ;;  result          4    8[BANK0 ] unsigned long 
  3698 ;;  operand2        4    4[BANK0 ] unsigned long 
  3699 ;;  operand1        4    0[BANK0 ] unsigned long 
  3700 ;;  i               2   16[BANK0 ] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  4   25[COMRAM] unsigned long 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         8     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:      108 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		_Is_digit
  3719 ;;		___xxtofl
  3720 ;;		_doMath
  3721 ;;		_initialize_t
  3722 ;;		_pop_t
  3723 ;;		_push_t
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text13
  3730  0020B0                     __ptext13:
  3731                           	callstack 0
  3732  0020B0                     _evaluate_Postfix:
  3733                           	callstack 28
  3734  0020B0                     
  3735                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 143:     struct Stack_t operandStack;;Algo
      +                          rithms/Infix_to_postfix/infix_to_post.c: 144:     initialize_t(&operandStack);
  3736  0020B0  0E92               	movlw	low evaluate_Postfix@operandStack
  3737  0020B2  6E01               	movwf	initialize_t@stack^0,c
  3738  0020B4  0E00               	movlw	high evaluate_Postfix@operandStack
  3739  0020B6  6E02               	movwf	(initialize_t@stack+1)^0,c
  3740  0020B8  EC0D  F020         	call	_initialize_t	;wreg free
  3741  0020BC                     
  3742                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 146:     int i = 0;
  3743  0020BC  0E00               	movlw	0
  3744  0020BE  0100               	movlb	0	; () banked
  3745  0020C0  6F91               	movwf	(evaluate_Postfix@i+1)& (0+255),b
  3746  0020C2  0E00               	movlw	0
  3747  0020C4  6F90               	movwf	evaluate_Postfix@i& (0+255),b
  3748                           
  3749                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 147:     while (postfix[i] != '\0') {
  3750  0020C6  EF17  F011         	goto	l5516
  3751  0020CA                     l5496:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 148:         uint32 current = postfix[i];
  3755  0020CA  90D8               	bcf	status,0,c
  3756  0020CC  3590               	rlcf	evaluate_Postfix@i& (0+255),w,b
  3757  0020CE  6ED9               	movwf	fsr2l,c
  3758  0020D0  3591               	rlcf	(evaluate_Postfix@i+1)& (0+255),w,b
  3759  0020D2  6EDA               	movwf	fsr2h,c
  3760  0020D4  90D8               	bcf	status,0,c
  3761  0020D6  36D9               	rlcf	fsr2l,f,c
  3762  0020D8  36DA               	rlcf	fsr2h,f,c
  3763  0020DA  501A               	movf	evaluate_Postfix@postfix^0,w,c
  3764  0020DC  26D9               	addwf	fsr2l,f,c
  3765  0020DE  501B               	movf	(evaluate_Postfix@postfix+1)^0,w,c
  3766  0020E0  22DA               	addwfc	fsr2h,f,c
  3767  0020E2  CFDE F08C          	movff	postinc2,evaluate_Postfix@current
  3768  0020E6  CFDE F08D          	movff	postinc2,evaluate_Postfix@current+1
  3769  0020EA  CFDE F08E          	movff	postinc2,evaluate_Postfix@current+2
  3770  0020EE  CFDE F08F          	movff	postinc2,evaluate_Postfix@current+3
  3771  0020F2                     
  3772                           ; BSR set to: 0
  3773                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 150:         if (Is_digit(current)){
  3774  0020F2  C08C  F001         	movff	evaluate_Postfix@current,___xxtofl@val
  3775  0020F6  C08D  F002         	movff	evaluate_Postfix@current+1,___xxtofl@val+1
  3776  0020FA  C08E  F003         	movff	evaluate_Postfix@current+2,___xxtofl@val+2
  3777  0020FE  C08F  F004         	movff	evaluate_Postfix@current+3,___xxtofl@val+3
  3778  002102  0E00               	movlw	0
  3779  002104  EC3D  F011         	call	___xxtofl
  3780  002108  C001  F00F         	movff	?___xxtofl,Is_digit@op
  3781  00210C  C002  F010         	movff	?___xxtofl+1,Is_digit@op+1
  3782  002110  C003  F011         	movff	?___xxtofl+2,Is_digit@op+2
  3783  002114  C004  F012         	movff	?___xxtofl+3,Is_digit@op+3
  3784  002118  EC3D  F017         	call	_Is_digit	;wreg free
  3785  00211C  500F               	movf	?_Is_digit^0,w,c
  3786  00211E  1010               	iorwf	(?_Is_digit+1)^0,w,c
  3787  002120  B4D8               	btfsc	status,2,c
  3788  002122  EF95  F010         	goto	u4591
  3789  002126  EF97  F010         	goto	u4590
  3790  00212A                     u4591:
  3791  00212A  EFB7  F010         	goto	l5504
  3792  00212E                     u4590:
  3793  00212E                     
  3794                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 152:             push_t(&operandStack, pos
      +                          tfix[i]);
  3795  00212E  0E92               	movlw	low evaluate_Postfix@operandStack
  3796  002130  6E06               	movwf	push_t@stack^0,c
  3797  002132  0E00               	movlw	high evaluate_Postfix@operandStack
  3798  002134  6E07               	movwf	(push_t@stack+1)^0,c
  3799  002136  90D8               	bcf	status,0,c
  3800  002138  0100               	movlb	0	; () banked
  3801  00213A  3590               	rlcf	evaluate_Postfix@i& (0+255),w,b
  3802  00213C  6ED9               	movwf	fsr2l,c
  3803  00213E  3591               	rlcf	(evaluate_Postfix@i+1)& (0+255),w,b
  3804  002140  6EDA               	movwf	fsr2h,c
  3805  002142  90D8               	bcf	status,0,c
  3806  002144  36D9               	rlcf	fsr2l,f,c
  3807  002146  36DA               	rlcf	fsr2h,f,c
  3808  002148  501A               	movf	evaluate_Postfix@postfix^0,w,c
  3809  00214A  26D9               	addwf	fsr2l,f,c
  3810  00214C  501B               	movf	(evaluate_Postfix@postfix+1)^0,w,c
  3811  00214E  22DA               	addwfc	fsr2h,f,c
  3812  002150  CFDE F008          	movff	postinc2,push_t@c
  3813  002154  CFDE F009          	movff	postinc2,push_t@c+1
  3814  002158  CFDE F00A          	movff	postinc2,push_t@c+2
  3815  00215C  CFDE F00B          	movff	postinc2,push_t@c+3
  3816  002160  EC26  F01F         	call	_push_t	;wreg free
  3817  002164                     l5502:
  3818                           
  3819                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 153:             i++;
  3820  002164  0100               	movlb	0	; () banked
  3821  002166  4B90               	infsnz	evaluate_Postfix@i& (0+255),f,b
  3822  002168  2B91               	incf	(evaluate_Postfix@i+1)& (0+255),f,b
  3823                           
  3824                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 154:         }
  3825  00216A  EF17  F011         	goto	l5516
  3826  00216E                     l5504:
  3827  00216E  0EFB               	movlw	251
  3828  002170  0100               	movlb	0	; () banked
  3829  002172  198C               	xorwf	evaluate_Postfix@current& (0+255),w,b
  3830  002174  E10A               	bnz	u4601
  3831  002176  298D               	incf	(evaluate_Postfix@current+1)& (0+255),w,b
  3832  002178  E108               	bnz	u4601
  3833  00217A  298E               	incf	(evaluate_Postfix@current+2)& (0+255),w,b
  3834  00217C  E106               	bnz	u4601
  3835  00217E  298F               	incf	(evaluate_Postfix@current+3)& (0+255),w,b
  3836  002180  A4D8               	btfss	status,2,c
  3837  002182  EFC5  F010         	goto	u4601
  3838  002186  EFC7  F010         	goto	u4600
  3839  00218A                     u4601:
  3840  00218A  EFC9  F010         	goto	l5508
  3841  00218E                     u4600:
  3842  00218E  EFB2  F010         	goto	l5502
  3843  002192                     l5508:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 161:             operand2 = pop_t(&operand
      +                          Stack);
  3847  002192  0E92               	movlw	low evaluate_Postfix@operandStack
  3848  002194  6E01               	movwf	pop_t@stack^0,c
  3849  002196  0E00               	movlw	high evaluate_Postfix@operandStack
  3850  002198  6E02               	movwf	(pop_t@stack+1)^0,c
  3851  00219A  EC03  F01F         	call	_pop_t	;wreg free
  3852  00219E  C001  F084         	movff	?_pop_t,evaluate_Postfix@operand2
  3853  0021A2  C002  F085         	movff	?_pop_t+1,evaluate_Postfix@operand2+1
  3854  0021A6  C003  F086         	movff	?_pop_t+2,evaluate_Postfix@operand2+2
  3855  0021AA  C004  F087         	movff	?_pop_t+3,evaluate_Postfix@operand2+3
  3856                           
  3857                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 163:             operand1 = pop_t(&operand
      +                          Stack);
  3858  0021AE  0E92               	movlw	low evaluate_Postfix@operandStack
  3859  0021B0  6E01               	movwf	pop_t@stack^0,c
  3860  0021B2  0E00               	movlw	high evaluate_Postfix@operandStack
  3861  0021B4  6E02               	movwf	(pop_t@stack+1)^0,c
  3862  0021B6  EC03  F01F         	call	_pop_t	;wreg free
  3863  0021BA  C001  F080         	movff	?_pop_t,evaluate_Postfix@operand1
  3864  0021BE  C002  F081         	movff	?_pop_t+1,evaluate_Postfix@operand1+1
  3865  0021C2  C003  F082         	movff	?_pop_t+2,evaluate_Postfix@operand1+2
  3866  0021C6  C004  F083         	movff	?_pop_t+3,evaluate_Postfix@operand1+3
  3867  0021CA                     
  3868                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 165:             result = doMath(current, 
      +                          operand1, operand2);
  3869  0021CA  C08C  F00E         	movff	evaluate_Postfix@current,doMath@op
  3870  0021CE  C08D  F00F         	movff	evaluate_Postfix@current+1,doMath@op+1
  3871  0021D2  C08E  F010         	movff	evaluate_Postfix@current+2,doMath@op+2
  3872  0021D6  C08F  F011         	movff	evaluate_Postfix@current+3,doMath@op+3
  3873  0021DA  C080  F012         	movff	evaluate_Postfix@operand1,doMath@op1
  3874  0021DE  C081  F013         	movff	evaluate_Postfix@operand1+1,doMath@op1+1
  3875  0021E2  C082  F014         	movff	evaluate_Postfix@operand1+2,doMath@op1+2
  3876  0021E6  C083  F015         	movff	evaluate_Postfix@operand1+3,doMath@op1+3
  3877  0021EA  C084  F016         	movff	evaluate_Postfix@operand2,doMath@op2
  3878  0021EE  C085  F017         	movff	evaluate_Postfix@operand2+1,doMath@op2+1
  3879  0021F2  C086  F018         	movff	evaluate_Postfix@operand2+2,doMath@op2+2
  3880  0021F6  C087  F019         	movff	evaluate_Postfix@operand2+3,doMath@op2+3
  3881  0021FA  ECEA  F014         	call	_doMath	;wreg free
  3882  0021FE  C00E  F088         	movff	?_doMath,evaluate_Postfix@result
  3883  002202  C00F  F089         	movff	?_doMath+1,evaluate_Postfix@result+1
  3884  002206  C010  F08A         	movff	?_doMath+2,evaluate_Postfix@result+2
  3885  00220A  C011  F08B         	movff	?_doMath+3,evaluate_Postfix@result+3
  3886  00220E                     
  3887                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 167:             push_t(&operandStack, res
      +                          ult);
  3888  00220E  0E92               	movlw	low evaluate_Postfix@operandStack
  3889  002210  6E06               	movwf	push_t@stack^0,c
  3890  002212  0E00               	movlw	high evaluate_Postfix@operandStack
  3891  002214  6E07               	movwf	(push_t@stack+1)^0,c
  3892  002216  C088  F008         	movff	evaluate_Postfix@result,push_t@c
  3893  00221A  C089  F009         	movff	evaluate_Postfix@result+1,push_t@c+1
  3894  00221E  C08A  F00A         	movff	evaluate_Postfix@result+2,push_t@c+2
  3895  002222  C08B  F00B         	movff	evaluate_Postfix@result+3,push_t@c+3
  3896  002226  EC26  F01F         	call	_push_t	;wreg free
  3897  00222A  EFB2  F010         	goto	l5502
  3898  00222E                     l5516:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 147:     while (postfix[i] != '\0') {
  3902  00222E  90D8               	bcf	status,0,c
  3903  002230  3590               	rlcf	evaluate_Postfix@i& (0+255),w,b
  3904  002232  6ED9               	movwf	fsr2l,c
  3905  002234  3591               	rlcf	(evaluate_Postfix@i+1)& (0+255),w,b
  3906  002236  6EDA               	movwf	fsr2h,c
  3907  002238  90D8               	bcf	status,0,c
  3908  00223A  36D9               	rlcf	fsr2l,f,c
  3909  00223C  36DA               	rlcf	fsr2h,f,c
  3910  00223E  501A               	movf	evaluate_Postfix@postfix^0,w,c
  3911  002240  26D9               	addwf	fsr2l,f,c
  3912  002242  501B               	movf	(evaluate_Postfix@postfix+1)^0,w,c
  3913  002244  22DA               	addwfc	fsr2h,f,c
  3914  002246  50DE               	movf	postinc2,w,c
  3915  002248  10DE               	iorwf	postinc2,w,c
  3916  00224A  10DE               	iorwf	postinc2,w,c
  3917  00224C  10DE               	iorwf	postinc2,w,c
  3918  00224E  A4D8               	btfss	status,2,c
  3919  002250  EF2C  F011         	goto	u4611
  3920  002254  EF2E  F011         	goto	u4610
  3921  002258                     u4611:
  3922  002258  EF65  F010         	goto	l5496
  3923  00225C                     u4610:
  3924  00225C                     
  3925                           ; BSR set to: 0
  3926                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 172:     return pop_t(&operandStack);
  3927  00225C  0E92               	movlw	low evaluate_Postfix@operandStack
  3928  00225E  6E01               	movwf	pop_t@stack^0,c
  3929  002260  0E00               	movlw	high evaluate_Postfix@operandStack
  3930  002262  6E02               	movwf	(pop_t@stack+1)^0,c
  3931  002264  EC03  F01F         	call	_pop_t	;wreg free
  3932  002268  C001  F01A         	movff	?_pop_t,?_evaluate_Postfix
  3933  00226C  C002  F01B         	movff	?_pop_t+1,?_evaluate_Postfix+1
  3934  002270  C003  F01C         	movff	?_pop_t+2,?_evaluate_Postfix+2
  3935  002274  C004  F01D         	movff	?_pop_t+3,?_evaluate_Postfix+3
  3936  002278  0012               	return		;funcret
  3937  00227A                     __end_of_evaluate_Postfix:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _push_t *****************
  3941 ;; Defined at:
  3942 ;;		line 72 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  stack           2    5[COMRAM] PTR struct Stack_t
  3945 ;;		 -> evaluate_Postfix@operandStack(82), infixToPostfix@operatorStack(82), 
  3946 ;;  c               4    7[COMRAM] unsigned long 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3958 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;Total ram usage:        8 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_infixToPostfix
  3968 ;;		_evaluate_Postfix
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text14
  3973  003E4C                     __ptext14:
  3974                           	callstack 0
  3975  003E4C                     _push_t:
  3976                           	callstack 29
  3977  003E4C                     
  3978                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 74:     stack->data[++stack->top] = c;
  3979  003E4C  EE20 F050          	lfsr	2,80
  3980  003E50  5006               	movf	push_t@stack^0,w,c
  3981  003E52  26D9               	addwf	fsr2l,f,c
  3982  003E54  5007               	movf	(push_t@stack+1)^0,w,c
  3983  003E56  22DA               	addwfc	fsr2h,f,c
  3984  003E58  2ADE               	incf	postinc2,f,c
  3985  003E5A  0E00               	movlw	0
  3986  003E5C  22DD               	addwfc	postdec2,f,c
  3987  003E5E  CFDE F00C          	movff	postinc2,??_push_t
  3988  003E62  CFDD F00D          	movff	postdec2,??_push_t+1
  3989  003E66  90D8               	bcf	status,0,c
  3990  003E68  360C               	rlcf	??_push_t^0,f,c
  3991  003E6A  360D               	rlcf	(??_push_t+1)^0,f,c
  3992  003E6C  90D8               	bcf	status,0,c
  3993  003E6E  360C               	rlcf	??_push_t^0,f,c
  3994  003E70  360D               	rlcf	(??_push_t+1)^0,f,c
  3995  003E72  500C               	movf	??_push_t^0,w,c
  3996  003E74  2406               	addwf	push_t@stack^0,w,c
  3997  003E76  6ED9               	movwf	fsr2l,c
  3998  003E78  500D               	movf	(??_push_t+1)^0,w,c
  3999  003E7A  2007               	addwfc	(push_t@stack+1)^0,w,c
  4000  003E7C  6EDA               	movwf	fsr2h,c
  4001  003E7E  C008  FFDE         	movff	push_t@c,postinc2
  4002  003E82  C009  FFDE         	movff	push_t@c+1,postinc2
  4003  003E86  C00A  FFDE         	movff	push_t@c+2,postinc2
  4004  003E8A  C00B  FFDE         	movff	push_t@c+3,postinc2
  4005  003E8E  0012               	return		;funcret
  4006  003E90                     __end_of_push_t:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _pop_t *****************
  4010 ;; Defined at:
  4011 ;;		line 78 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  stack           2    0[COMRAM] PTR struct Stack_t
  4014 ;;		 -> evaluate_Postfix@operandStack(82), infixToPostfix@operatorStack(82), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  4    0[COMRAM] unsigned long 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:        6 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_infixToPostfix
  4036 ;;		_evaluate_Postfix
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text15
  4041  003E06                     __ptext15:
  4042                           	callstack 0
  4043  003E06                     _pop_t:
  4044                           	callstack 29
  4045  003E06                     
  4046                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 79:     return stack->data[stack->top--];
  4047  003E06  EE20 F050          	lfsr	2,80
  4048  003E0A  5001               	movf	pop_t@stack^0,w,c
  4049  003E0C  26D9               	addwf	fsr2l,f,c
  4050  003E0E  5002               	movf	(pop_t@stack+1)^0,w,c
  4051  003E10  22DA               	addwfc	fsr2h,f,c
  4052  003E12  CFDF F005          	movff	indf2,??_pop_t
  4053  003E16  0E01               	movlw	1
  4054  003E18  5EDE               	subwf	postinc2,f,c
  4055  003E1A  CFDF F006          	movff	indf2,??_pop_t+1
  4056  003E1E  0E00               	movlw	0
  4057  003E20  5ADD               	subwfb	postdec2,f,c
  4058  003E22  90D8               	bcf	status,0,c
  4059  003E24  3605               	rlcf	??_pop_t^0,f,c
  4060  003E26  3606               	rlcf	(??_pop_t+1)^0,f,c
  4061  003E28  90D8               	bcf	status,0,c
  4062  003E2A  3605               	rlcf	??_pop_t^0,f,c
  4063  003E2C  3606               	rlcf	(??_pop_t+1)^0,f,c
  4064  003E2E  5005               	movf	??_pop_t^0,w,c
  4065  003E30  2401               	addwf	pop_t@stack^0,w,c
  4066  003E32  6ED9               	movwf	fsr2l,c
  4067  003E34  5006               	movf	(??_pop_t+1)^0,w,c
  4068  003E36  2002               	addwfc	(pop_t@stack+1)^0,w,c
  4069  003E38  6EDA               	movwf	fsr2h,c
  4070  003E3A  CFDE F001          	movff	postinc2,?_pop_t
  4071  003E3E  CFDE F002          	movff	postinc2,?_pop_t+1
  4072  003E42  CFDE F003          	movff	postinc2,?_pop_t+2
  4073  003E46  CFDE F004          	movff	postinc2,?_pop_t+3
  4074  003E4A  0012               	return		;funcret
  4075  003E4C                     __end_of_pop_t:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _initialize_t *****************
  4079 ;; Defined at:
  4080 ;;		line 67 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  stack           2    0[COMRAM] PTR struct Stack_t
  4083 ;;		 -> evaluate_Postfix@operandStack(82), infixToPostfix@operatorStack(82), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_infixToPostfix
  4105 ;;		_evaluate_Postfix
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text16
  4110  00401A                     __ptext16:
  4111                           	callstack 0
  4112  00401A                     _initialize_t:
  4113                           	callstack 29
  4114  00401A                     
  4115                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 68:     stack->top = -1;
  4116  00401A  EE20 F050          	lfsr	2,80
  4117  00401E  5001               	movf	initialize_t@stack^0,w,c
  4118  004020  26D9               	addwf	fsr2l,f,c
  4119  004022  5002               	movf	(initialize_t@stack+1)^0,w,c
  4120  004024  22DA               	addwfc	fsr2h,f,c
  4121  004026  0EFF               	movlw	255
  4122  004028  6EDE               	movwf	postinc2,c
  4123  00402A  0EFF               	movlw	255
  4124  00402C  6EDD               	movwf	postdec2,c
  4125  00402E  0012               	return		;funcret
  4126  004030                     __end_of_initialize_t:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _doMath *****************
  4130 ;; Defined at:
  4131 ;;		line 43 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  op              4   13[COMRAM] unsigned long 
  4134 ;;  op1             4   17[COMRAM] unsigned long 
  4135 ;;  op2             4   21[COMRAM] unsigned long 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  4   13[COMRAM] unsigned long 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4147 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;Total ram usage:       12 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 1
  4154 ;; This function calls:
  4155 ;;		___lldiv
  4156 ;;		___lmul
  4157 ;; This function is called by:
  4158 ;;		_evaluate_Postfix
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text17
  4163  0029D4                     __ptext17:
  4164                           	callstack 0
  4165  0029D4                     _doMath:
  4166                           	callstack 28
  4167  0029D4                     
  4168                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 44:     if (op== 4294967294)
  4169  0029D4  0EFE               	movlw	254
  4170  0029D6  180E               	xorwf	doMath@op^0,w,c
  4171  0029D8  E10A               	bnz	u4011
  4172  0029DA  280F               	incf	(doMath@op+1)^0,w,c
  4173  0029DC  E108               	bnz	u4011
  4174  0029DE  2810               	incf	(doMath@op+2)^0,w,c
  4175  0029E0  E106               	bnz	u4011
  4176  0029E2  2811               	incf	(doMath@op+3)^0,w,c
  4177  0029E4  A4D8               	btfss	status,2,c
  4178  0029E6  EFF7  F014         	goto	u4011
  4179  0029EA  EFF9  F014         	goto	u4010
  4180  0029EE                     u4011:
  4181  0029EE  EF15  F015         	goto	l5086
  4182  0029F2                     u4010:
  4183  0029F2                     
  4184                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 45:         return (op1*op2);
  4185  0029F2  C012  F001         	movff	doMath@op1,___lmul@multiplier
  4186  0029F6  C013  F002         	movff	doMath@op1+1,___lmul@multiplier+1
  4187  0029FA  C014  F003         	movff	doMath@op1+2,___lmul@multiplier+2
  4188  0029FE  C015  F004         	movff	doMath@op1+3,___lmul@multiplier+3
  4189  002A02  C016  F005         	movff	doMath@op2,___lmul@multiplicand
  4190  002A06  C017  F006         	movff	doMath@op2+1,___lmul@multiplicand+1
  4191  002A0A  C018  F007         	movff	doMath@op2+2,___lmul@multiplicand+2
  4192  002A0E  C019  F008         	movff	doMath@op2+3,___lmul@multiplicand+3
  4193  002A12  ECEB  F01D         	call	___lmul	;wreg free
  4194  002A16  C001  F00E         	movff	?___lmul,?_doMath
  4195  002A1A  C002  F00F         	movff	?___lmul+1,?_doMath+1
  4196  002A1E  C003  F010         	movff	?___lmul+2,?_doMath+2
  4197  002A22  C004  F011         	movff	?___lmul+3,?_doMath+3
  4198  002A26  EF81  F015         	goto	l902
  4199  002A2A                     l5086:
  4200  002A2A  0EFD               	movlw	253
  4201  002A2C  180E               	xorwf	doMath@op^0,w,c
  4202  002A2E  E10A               	bnz	u4021
  4203  002A30  280F               	incf	(doMath@op+1)^0,w,c
  4204  002A32  E108               	bnz	u4021
  4205  002A34  2810               	incf	(doMath@op+2)^0,w,c
  4206  002A36  E106               	bnz	u4021
  4207  002A38  2811               	incf	(doMath@op+3)^0,w,c
  4208  002A3A  A4D8               	btfss	status,2,c
  4209  002A3C  EF22  F015         	goto	u4021
  4210  002A40  EF24  F015         	goto	u4020
  4211  002A44                     u4021:
  4212  002A44  EF40  F015         	goto	l5094
  4213  002A48                     u4020:
  4214  002A48                     
  4215                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 47:         return (op1/op2);
  4216  002A48  C012  F001         	movff	doMath@op1,___lldiv@dividend
  4217  002A4C  C013  F002         	movff	doMath@op1+1,___lldiv@dividend+1
  4218  002A50  C014  F003         	movff	doMath@op1+2,___lldiv@dividend+2
  4219  002A54  C015  F004         	movff	doMath@op1+3,___lldiv@dividend+3
  4220  002A58  C016  F005         	movff	doMath@op2,___lldiv@divisor
  4221  002A5C  C017  F006         	movff	doMath@op2+1,___lldiv@divisor+1
  4222  002A60  C018  F007         	movff	doMath@op2+2,___lldiv@divisor+2
  4223  002A64  C019  F008         	movff	doMath@op2+3,___lldiv@divisor+3
  4224  002A68  EC39  F01B         	call	___lldiv	;wreg free
  4225  002A6C  C001  F00E         	movff	?___lldiv,?_doMath
  4226  002A70  C002  F00F         	movff	?___lldiv+1,?_doMath+1
  4227  002A74  C003  F010         	movff	?___lldiv+2,?_doMath+2
  4228  002A78  C004  F011         	movff	?___lldiv+3,?_doMath+3
  4229  002A7C  EF81  F015         	goto	l902
  4230  002A80                     l5094:
  4231  002A80  280E               	incf	doMath@op^0,w,c
  4232  002A82  E10A               	bnz	u4031
  4233  002A84  280F               	incf	(doMath@op+1)^0,w,c
  4234  002A86  E108               	bnz	u4031
  4235  002A88  2810               	incf	(doMath@op+2)^0,w,c
  4236  002A8A  E106               	bnz	u4031
  4237  002A8C  2811               	incf	(doMath@op+3)^0,w,c
  4238  002A8E  A4D8               	btfss	status,2,c
  4239  002A90  EF4C  F015         	goto	u4031
  4240  002A94  EF4E  F015         	goto	u4030
  4241  002A98                     u4031:
  4242  002A98  EF5C  F015         	goto	l5102
  4243  002A9C                     u4030:
  4244  002A9C                     
  4245                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 49:         return (op1+op2);
  4246  002A9C  5016               	movf	doMath@op2^0,w,c
  4247  002A9E  2412               	addwf	doMath@op1^0,w,c
  4248  002AA0  6E0E               	movwf	?_doMath^0,c
  4249  002AA2  5017               	movf	(doMath@op2+1)^0,w,c
  4250  002AA4  2013               	addwfc	(doMath@op1+1)^0,w,c
  4251  002AA6  6E0F               	movwf	(?_doMath+1)^0,c
  4252  002AA8  5018               	movf	(doMath@op2+2)^0,w,c
  4253  002AAA  2014               	addwfc	(doMath@op1+2)^0,w,c
  4254  002AAC  6E10               	movwf	(?_doMath+2)^0,c
  4255  002AAE  5019               	movf	(doMath@op2+3)^0,w,c
  4256  002AB0  2015               	addwfc	(doMath@op1+3)^0,w,c
  4257  002AB2  6E11               	movwf	(?_doMath+3)^0,c
  4258  002AB4  EF81  F015         	goto	l902
  4259  002AB8                     l5102:
  4260  002AB8  0EFC               	movlw	252
  4261  002ABA  180E               	xorwf	doMath@op^0,w,c
  4262  002ABC  E10A               	bnz	u4041
  4263  002ABE  280F               	incf	(doMath@op+1)^0,w,c
  4264  002AC0  E108               	bnz	u4041
  4265  002AC2  2810               	incf	(doMath@op+2)^0,w,c
  4266  002AC4  E106               	bnz	u4041
  4267  002AC6  2811               	incf	(doMath@op+3)^0,w,c
  4268  002AC8  A4D8               	btfss	status,2,c
  4269  002ACA  EF69  F015         	goto	u4041
  4270  002ACE  EF6B  F015         	goto	u4040
  4271  002AD2                     u4041:
  4272  002AD2  EF79  F015         	goto	l905
  4273  002AD6                     u4040:
  4274  002AD6                     
  4275                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 51:         return (op1-op2);
  4276  002AD6  5016               	movf	doMath@op2^0,w,c
  4277  002AD8  5C12               	subwf	doMath@op1^0,w,c
  4278  002ADA  6E0E               	movwf	?_doMath^0,c
  4279  002ADC  5017               	movf	(doMath@op2+1)^0,w,c
  4280  002ADE  5813               	subwfb	(doMath@op1+1)^0,w,c
  4281  002AE0  6E0F               	movwf	(?_doMath+1)^0,c
  4282  002AE2  5018               	movf	(doMath@op2+2)^0,w,c
  4283  002AE4  5814               	subwfb	(doMath@op1+2)^0,w,c
  4284  002AE6  6E10               	movwf	(?_doMath+2)^0,c
  4285  002AE8  5019               	movf	(doMath@op2+3)^0,w,c
  4286  002AEA  5815               	subwfb	(doMath@op1+3)^0,w,c
  4287  002AEC  6E11               	movwf	(?_doMath+3)^0,c
  4288  002AEE  EF81  F015         	goto	l902
  4289  002AF2                     l905:
  4290  002AF2                     
  4291                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 52:     return 0;
  4292  002AF2  0E00               	movlw	0
  4293  002AF4  6E0E               	movwf	?_doMath^0,c
  4294  002AF6  0E00               	movlw	0
  4295  002AF8  6E0F               	movwf	(?_doMath+1)^0,c
  4296  002AFA  0E00               	movlw	0
  4297  002AFC  6E10               	movwf	(?_doMath+2)^0,c
  4298  002AFE  0E00               	movlw	0
  4299  002B00  6E11               	movwf	(?_doMath+3)^0,c
  4300  002B02                     l902:
  4301  002B02  0012               	return		;funcret
  4302  002B04                     __end_of_doMath:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function ___lmul *****************
  4306 ;; Defined at:
  4307 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  multiplier      4    0[COMRAM] unsigned long 
  4310 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  product         4    8[COMRAM] unsigned long 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  4    0[COMRAM] unsigned long 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:       12 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_doMath
  4332 ;;		_infixToPostfix
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text18
  4337  003BD6                     __ptext18:
  4338                           	callstack 0
  4339  003BD6                     ___lmul:
  4340                           	callstack 29
  4341  003BD6  0E00               	movlw	0
  4342  003BD8  6E09               	movwf	___lmul@product^0,c
  4343  003BDA  0E00               	movlw	0
  4344  003BDC  6E0A               	movwf	(___lmul@product+1)^0,c
  4345  003BDE  0E00               	movlw	0
  4346  003BE0  6E0B               	movwf	(___lmul@product+2)^0,c
  4347  003BE2  0E00               	movlw	0
  4348  003BE4  6E0C               	movwf	(___lmul@product+3)^0,c
  4349  003BE6                     l4852:
  4350  003BE6  A001               	btfss	___lmul@multiplier^0,0,c
  4351  003BE8  EFF8  F01D         	goto	u3751
  4352  003BEC  EFFA  F01D         	goto	u3750
  4353  003BF0                     u3751:
  4354  003BF0  EF02  F01E         	goto	l4856
  4355  003BF4                     u3750:
  4356  003BF4  5005               	movf	___lmul@multiplicand^0,w,c
  4357  003BF6  2609               	addwf	___lmul@product^0,f,c
  4358  003BF8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4359  003BFA  220A               	addwfc	(___lmul@product+1)^0,f,c
  4360  003BFC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4361  003BFE  220B               	addwfc	(___lmul@product+2)^0,f,c
  4362  003C00  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4363  003C02  220C               	addwfc	(___lmul@product+3)^0,f,c
  4364  003C04                     l4856:
  4365  003C04  90D8               	bcf	status,0,c
  4366  003C06  3605               	rlcf	___lmul@multiplicand^0,f,c
  4367  003C08  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4368  003C0A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4369  003C0C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4370  003C0E  90D8               	bcf	status,0,c
  4371  003C10  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4372  003C12  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4373  003C14  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4374  003C16  3201               	rrcf	___lmul@multiplier^0,f,c
  4375  003C18  5001               	movf	___lmul@multiplier^0,w,c
  4376  003C1A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4377  003C1C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4378  003C1E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4379  003C20  A4D8               	btfss	status,2,c
  4380  003C22  EF15  F01E         	goto	u3761
  4381  003C26  EF17  F01E         	goto	u3760
  4382  003C2A                     u3761:
  4383  003C2A  EFF3  F01D         	goto	l4852
  4384  003C2E                     u3760:
  4385  003C2E  C009  F001         	movff	___lmul@product,?___lmul
  4386  003C32  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4387  003C36  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4388  003C3A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4389  003C3E  0012               	return		;funcret
  4390  003C40                     __end_of___lmul:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function ___lldiv *****************
  4394 ;; Defined at:
  4395 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  dividend        4    0[COMRAM] unsigned long 
  4398 ;;  divisor         4    4[COMRAM] unsigned long 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  quotient        4    8[COMRAM] unsigned long 
  4401 ;;  counter         1   12[COMRAM] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  4    0[COMRAM] unsigned long 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:       13 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_doMath
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text19
  4425  003672                     __ptext19:
  4426                           	callstack 0
  4427  003672                     ___lldiv:
  4428                           	callstack 28
  4429  003672  0E00               	movlw	0
  4430  003674  6E09               	movwf	___lldiv@quotient^0,c
  4431  003676  0E00               	movlw	0
  4432  003678  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4433  00367A  0E00               	movlw	0
  4434  00367C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4435  00367E  0E00               	movlw	0
  4436  003680  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4437  003682  5005               	movf	___lldiv@divisor^0,w,c
  4438  003684  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4439  003686  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4440  003688  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4441  00368A  B4D8               	btfsc	status,2,c
  4442  00368C  EF4A  F01B         	goto	u3771
  4443  003690  EF4C  F01B         	goto	u3770
  4444  003694                     u3771:
  4445  003694  EF82  F01B         	goto	l999
  4446  003698                     u3770:
  4447  003698  0E01               	movlw	1
  4448  00369A  6E0D               	movwf	___lldiv@counter^0,c
  4449  00369C  EF56  F01B         	goto	l4868
  4450  0036A0                     l4866:
  4451  0036A0  90D8               	bcf	status,0,c
  4452  0036A2  3605               	rlcf	___lldiv@divisor^0,f,c
  4453  0036A4  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4454  0036A6  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4455  0036A8  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4456  0036AA  2A0D               	incf	___lldiv@counter^0,f,c
  4457  0036AC                     l4868:
  4458  0036AC  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4459  0036AE  EF5B  F01B         	goto	u3781
  4460  0036B2  EF5D  F01B         	goto	u3780
  4461  0036B6                     u3781:
  4462  0036B6  EF50  F01B         	goto	l4866
  4463  0036BA                     u3780:
  4464  0036BA                     l4870:
  4465  0036BA  90D8               	bcf	status,0,c
  4466  0036BC  3609               	rlcf	___lldiv@quotient^0,f,c
  4467  0036BE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4468  0036C0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4469  0036C2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4470  0036C4  5005               	movf	___lldiv@divisor^0,w,c
  4471  0036C6  5C01               	subwf	___lldiv@dividend^0,w,c
  4472  0036C8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4473  0036CA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4474  0036CC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4475  0036CE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4476  0036D0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4477  0036D2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4478  0036D4  A0D8               	btfss	status,0,c
  4479  0036D6  EF6F  F01B         	goto	u3791
  4480  0036DA  EF71  F01B         	goto	u3790
  4481  0036DE                     u3791:
  4482  0036DE  EF7A  F01B         	goto	l4878
  4483  0036E2                     u3790:
  4484  0036E2  5005               	movf	___lldiv@divisor^0,w,c
  4485  0036E4  5E01               	subwf	___lldiv@dividend^0,f,c
  4486  0036E6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4487  0036E8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4488  0036EA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4489  0036EC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4490  0036EE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4491  0036F0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4492  0036F2  8009               	bsf	___lldiv@quotient^0,0,c
  4493  0036F4                     l4878:
  4494  0036F4  90D8               	bcf	status,0,c
  4495  0036F6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4496  0036F8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4497  0036FA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4498  0036FC  3205               	rrcf	___lldiv@divisor^0,f,c
  4499  0036FE  2E0D               	decfsz	___lldiv@counter^0,f,c
  4500  003700  EF5D  F01B         	goto	l4870
  4501  003704                     l999:
  4502  003704  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4503  003708  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4504  00370C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4505  003710  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4506  003714  0012               	return		;funcret
  4507  003716                     __end_of___lldiv:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function ___xxtofl *****************
  4511 ;; Defined at:
  4512 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  sign            1    wreg     unsigned char 
  4515 ;;  val             4    0[COMRAM] long 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  sign            1    8[COMRAM] unsigned char 
  4518 ;;  arg             4   10[COMRAM] unsigned long 
  4519 ;;  exp             1    9[COMRAM] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  4    0[COMRAM] unsigned char 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;Total ram usage:       14 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_evaluate_Postfix
  4539 ;;		_I2C_Master_Mode_Clock_Configurations
  4540 ;;		_EUSART_Baud_Rate_Calculation
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text20
  4545  00227A                     __ptext20:
  4546                           	callstack 0
  4547  00227A                     ___xxtofl:
  4548                           	callstack 29
  4549                           
  4550                           ;incstack = 0
  4551                           ;___xxtofl@sign stored from wreg
  4552  00227A  6E09               	movwf	___xxtofl@sign^0,c
  4553  00227C  5009               	movf	___xxtofl@sign^0,w,c
  4554  00227E  B4D8               	btfsc	status,2,c
  4555  002280  EF44  F011         	goto	u4171
  4556  002284  EF46  F011         	goto	u4170
  4557  002288                     u4171:
  4558  002288  EF68  F011         	goto	l1627
  4559  00228C                     u4170:
  4560  00228C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4561  00228E  EF4D  F011         	goto	u4180
  4562  002292  EF4B  F011         	goto	u4181
  4563  002296                     u4181:
  4564  002296  EF68  F011         	goto	l1627
  4565  00229A                     u4180:
  4566  00229A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4567  00229E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4568  0022A2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4569  0022A6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4570  0022AA  1E05               	comf	??___xxtofl^0,f,c
  4571  0022AC  1E06               	comf	(??___xxtofl+1)^0,f,c
  4572  0022AE  1E07               	comf	(??___xxtofl+2)^0,f,c
  4573  0022B0  1E08               	comf	(??___xxtofl+3)^0,f,c
  4574  0022B2  2A05               	incf	??___xxtofl^0,f,c
  4575  0022B4  0E00               	movlw	0
  4576  0022B6  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4577  0022B8  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4578  0022BA  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4579  0022BC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4580  0022C0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4581  0022C4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4582  0022C8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4583  0022CC  EF70  F011         	goto	l5180
  4584  0022D0                     l1627:
  4585  0022D0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4586  0022D4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4587  0022D8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4588  0022DC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4589  0022E0                     l5180:
  4590  0022E0  5001               	movf	___xxtofl@val^0,w,c
  4591  0022E2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4592  0022E4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4593  0022E6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4594  0022E8  A4D8               	btfss	status,2,c
  4595  0022EA  EF79  F011         	goto	u4191
  4596  0022EE  EF7B  F011         	goto	u4190
  4597  0022F2                     u4191:
  4598  0022F2  EF85  F011         	goto	l5186
  4599  0022F6                     u4190:
  4600  0022F6  0E00               	movlw	0
  4601  0022F8  6E01               	movwf	?___xxtofl^0,c
  4602  0022FA  0E00               	movlw	0
  4603  0022FC  6E02               	movwf	(?___xxtofl+1)^0,c
  4604  0022FE  0E00               	movlw	0
  4605  002300  6E03               	movwf	(?___xxtofl+2)^0,c
  4606  002302  0E00               	movlw	0
  4607  002304  6E04               	movwf	(?___xxtofl+3)^0,c
  4608  002306  EF16  F012         	goto	l1630
  4609  00230A                     l5186:
  4610  00230A  0E96               	movlw	150
  4611  00230C  6E0A               	movwf	___xxtofl@exp^0,c
  4612  00230E  EF8F  F011         	goto	l5190
  4613  002312                     l5188:
  4614  002312  2A0A               	incf	___xxtofl@exp^0,f,c
  4615  002314  90D8               	bcf	status,0,c
  4616  002316  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4617  002318  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4618  00231A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4619  00231C  320B               	rrcf	___xxtofl@arg^0,f,c
  4620  00231E                     l5190:
  4621  00231E  0E00               	movlw	0
  4622  002320  140B               	andwf	___xxtofl@arg^0,w,c
  4623  002322  6E05               	movwf	??___xxtofl^0,c
  4624  002324  0E00               	movlw	0
  4625  002326  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4626  002328  6E06               	movwf	(??___xxtofl+1)^0,c
  4627  00232A  0E00               	movlw	0
  4628  00232C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4629  00232E  6E07               	movwf	(??___xxtofl+2)^0,c
  4630  002330  0EFE               	movlw	254
  4631  002332  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4632  002334  6E08               	movwf	(??___xxtofl+3)^0,c
  4633  002336  5005               	movf	??___xxtofl^0,w,c
  4634  002338  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4635  00233A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4636  00233C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4637  00233E  A4D8               	btfss	status,2,c
  4638  002340  EFA4  F011         	goto	u4201
  4639  002344  EFA6  F011         	goto	u4200
  4640  002348                     u4201:
  4641  002348  EF89  F011         	goto	l5188
  4642  00234C                     u4200:
  4643  00234C  EFB4  F011         	goto	l1634
  4644  002350                     l5192:
  4645  002350  2A0A               	incf	___xxtofl@exp^0,f,c
  4646  002352  0E01               	movlw	1
  4647  002354  260B               	addwf	___xxtofl@arg^0,f,c
  4648  002356  0E00               	movlw	0
  4649  002358  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4650  00235A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4651  00235C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4652  00235E  90D8               	bcf	status,0,c
  4653  002360  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4654  002362  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4655  002364  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4656  002366  320B               	rrcf	___xxtofl@arg^0,f,c
  4657  002368                     l1634:
  4658  002368  0E00               	movlw	0
  4659  00236A  140B               	andwf	___xxtofl@arg^0,w,c
  4660  00236C  6E05               	movwf	??___xxtofl^0,c
  4661  00236E  0E00               	movlw	0
  4662  002370  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4663  002372  6E06               	movwf	(??___xxtofl+1)^0,c
  4664  002374  0E00               	movlw	0
  4665  002376  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4666  002378  6E07               	movwf	(??___xxtofl+2)^0,c
  4667  00237A  0EFF               	movlw	255
  4668  00237C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4669  00237E  6E08               	movwf	(??___xxtofl+3)^0,c
  4670  002380  5005               	movf	??___xxtofl^0,w,c
  4671  002382  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4672  002384  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4673  002386  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4674  002388  A4D8               	btfss	status,2,c
  4675  00238A  EFC9  F011         	goto	u4211
  4676  00238E  EFCB  F011         	goto	u4210
  4677  002392                     u4211:
  4678  002392  EFA8  F011         	goto	l5192
  4679  002396                     u4210:
  4680  002396  EFD3  F011         	goto	l5200
  4681  00239A                     l5198:
  4682  00239A  060A               	decf	___xxtofl@exp^0,f,c
  4683  00239C  90D8               	bcf	status,0,c
  4684  00239E  360B               	rlcf	___xxtofl@arg^0,f,c
  4685  0023A0  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4686  0023A2  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4687  0023A4  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4688  0023A6                     l5200:
  4689  0023A6  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4690  0023A8  EFD8  F011         	goto	u4221
  4691  0023AC  EFDA  F011         	goto	u4220
  4692  0023B0                     u4221:
  4693  0023B0  EFE2  F011         	goto	l1641
  4694  0023B4                     u4220:
  4695  0023B4  0E02               	movlw	2
  4696  0023B6  600A               	cpfslt	___xxtofl@exp^0,c
  4697  0023B8  EFE0  F011         	goto	u4231
  4698  0023BC  EFE2  F011         	goto	u4230
  4699  0023C0                     u4231:
  4700  0023C0  EFCD  F011         	goto	l5198
  4701  0023C4                     u4230:
  4702  0023C4                     l1641:
  4703  0023C4  B00A               	btfsc	___xxtofl@exp^0,0,c
  4704  0023C6  EFE7  F011         	goto	u4241
  4705  0023CA  EFE9  F011         	goto	u4240
  4706  0023CE                     u4241:
  4707  0023CE  EFEA  F011         	goto	l5206
  4708  0023D2                     u4240:
  4709  0023D2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4710  0023D4                     l5206:
  4711  0023D4  90D8               	bcf	status,0,c
  4712  0023D6  320A               	rrcf	___xxtofl@exp^0,f,c
  4713  0023D8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4714  0023DC  6A06               	clrf	(??___xxtofl+1)^0,c
  4715  0023DE  6A07               	clrf	(??___xxtofl+2)^0,c
  4716  0023E0  6A08               	clrf	(??___xxtofl+3)^0,c
  4717  0023E2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4718  0023E6  6A07               	clrf	(??___xxtofl+2)^0,c
  4719  0023E8  6A06               	clrf	(??___xxtofl+1)^0,c
  4720  0023EA  6A05               	clrf	??___xxtofl^0,c
  4721  0023EC  5005               	movf	??___xxtofl^0,w,c
  4722  0023EE  120B               	iorwf	___xxtofl@arg^0,f,c
  4723  0023F0  5006               	movf	(??___xxtofl+1)^0,w,c
  4724  0023F2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4725  0023F4  5007               	movf	(??___xxtofl+2)^0,w,c
  4726  0023F6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4727  0023F8  5008               	movf	(??___xxtofl+3)^0,w,c
  4728  0023FA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4729  0023FC  5009               	movf	___xxtofl@sign^0,w,c
  4730  0023FE  B4D8               	btfsc	status,2,c
  4731  002400  EF04  F012         	goto	u4251
  4732  002404  EF06  F012         	goto	u4250
  4733  002408                     u4251:
  4734  002408  EF0E  F012         	goto	l5216
  4735  00240C                     u4250:
  4736  00240C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4737  00240E  EF0D  F012         	goto	u4260
  4738  002412  EF0B  F012         	goto	u4261
  4739  002416                     u4261:
  4740  002416  EF0E  F012         	goto	l5216
  4741  00241A                     u4260:
  4742  00241A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4743  00241C                     l5216:
  4744  00241C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4745  002420  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4746  002424  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4747  002428  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4748  00242C                     l1630:
  4749  00242C  0012               	return		;funcret
  4750  00242E                     __end_of___xxtofl:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function _Is_digit *****************
  4754 ;; Defined at:
  4755 ;;		line 56 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  op              4   14[COMRAM] float 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2   14[COMRAM] int 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:        4 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 1
  4776 ;; This function calls:
  4777 ;;		___fleq
  4778 ;; This function is called by:
  4779 ;;		_evaluate_Postfix
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text21
  4784  002E7A                     __ptext21:
  4785                           	callstack 0
  4786  002E7A                     _Is_digit:
  4787                           	callstack 28
  4788  002E7A                     
  4789                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 57:     if ((op== 4294967294)||(op== 42949
      +                          67292)||(op== 4294967293)||(op== 4294967295)||(op== 4294967291)){
  4790  002E7A  C00F  F001         	movff	Is_digit@op,___fleq@ff1
  4791  002E7E  C010  F002         	movff	Is_digit@op+1,___fleq@ff1+1
  4792  002E82  C011  F003         	movff	Is_digit@op+2,___fleq@ff1+2
  4793  002E86  C012  F004         	movff	Is_digit@op+3,___fleq@ff1+3
  4794  002E8A  0E00               	movlw	0
  4795  002E8C  6E05               	movwf	___fleq@ff2^0,c
  4796  002E8E  0E00               	movlw	0
  4797  002E90  6E06               	movwf	(___fleq@ff2+1)^0,c
  4798  002E92  0E80               	movlw	128
  4799  002E94  6E07               	movwf	(___fleq@ff2+2)^0,c
  4800  002E96  0E4F               	movlw	79
  4801  002E98  6E08               	movwf	(___fleq@ff2+3)^0,c
  4802  002E9A  EC3E  F01A         	call	___fleq	;wreg free
  4803  002E9E  B0D8               	btfsc	status,0,c
  4804  002EA0  EF54  F017         	goto	u4051
  4805  002EA4  EF56  F017         	goto	u4050
  4806  002EA8                     u4051:
  4807  002EA8  EFBA  F017         	goto	l5122
  4808  002EAC                     u4050:
  4809  002EAC  C00F  F001         	movff	Is_digit@op,___fleq@ff1
  4810  002EB0  C010  F002         	movff	Is_digit@op+1,___fleq@ff1+1
  4811  002EB4  C011  F003         	movff	Is_digit@op+2,___fleq@ff1+2
  4812  002EB8  C012  F004         	movff	Is_digit@op+3,___fleq@ff1+3
  4813  002EBC  0E00               	movlw	0
  4814  002EBE  6E05               	movwf	___fleq@ff2^0,c
  4815  002EC0  0E00               	movlw	0
  4816  002EC2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4817  002EC4  0E80               	movlw	128
  4818  002EC6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4819  002EC8  0E4F               	movlw	79
  4820  002ECA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4821  002ECC  EC3E  F01A         	call	___fleq	;wreg free
  4822  002ED0  B0D8               	btfsc	status,0,c
  4823  002ED2  EF6D  F017         	goto	u4061
  4824  002ED6  EF6F  F017         	goto	u4060
  4825  002EDA                     u4061:
  4826  002EDA  EFBA  F017         	goto	l5122
  4827  002EDE                     u4060:
  4828  002EDE  C00F  F001         	movff	Is_digit@op,___fleq@ff1
  4829  002EE2  C010  F002         	movff	Is_digit@op+1,___fleq@ff1+1
  4830  002EE6  C011  F003         	movff	Is_digit@op+2,___fleq@ff1+2
  4831  002EEA  C012  F004         	movff	Is_digit@op+3,___fleq@ff1+3
  4832  002EEE  0E00               	movlw	0
  4833  002EF0  6E05               	movwf	___fleq@ff2^0,c
  4834  002EF2  0E00               	movlw	0
  4835  002EF4  6E06               	movwf	(___fleq@ff2+1)^0,c
  4836  002EF6  0E80               	movlw	128
  4837  002EF8  6E07               	movwf	(___fleq@ff2+2)^0,c
  4838  002EFA  0E4F               	movlw	79
  4839  002EFC  6E08               	movwf	(___fleq@ff2+3)^0,c
  4840  002EFE  EC3E  F01A         	call	___fleq	;wreg free
  4841  002F02  B0D8               	btfsc	status,0,c
  4842  002F04  EF86  F017         	goto	u4071
  4843  002F08  EF88  F017         	goto	u4070
  4844  002F0C                     u4071:
  4845  002F0C  EFBA  F017         	goto	l5122
  4846  002F10                     u4070:
  4847  002F10  C00F  F001         	movff	Is_digit@op,___fleq@ff1
  4848  002F14  C010  F002         	movff	Is_digit@op+1,___fleq@ff1+1
  4849  002F18  C011  F003         	movff	Is_digit@op+2,___fleq@ff1+2
  4850  002F1C  C012  F004         	movff	Is_digit@op+3,___fleq@ff1+3
  4851  002F20  0E00               	movlw	0
  4852  002F22  6E05               	movwf	___fleq@ff2^0,c
  4853  002F24  0E00               	movlw	0
  4854  002F26  6E06               	movwf	(___fleq@ff2+1)^0,c
  4855  002F28  0E80               	movlw	128
  4856  002F2A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4857  002F2C  0E4F               	movlw	79
  4858  002F2E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4859  002F30  EC3E  F01A         	call	___fleq	;wreg free
  4860  002F34  B0D8               	btfsc	status,0,c
  4861  002F36  EF9F  F017         	goto	u4081
  4862  002F3A  EFA1  F017         	goto	u4080
  4863  002F3E                     u4081:
  4864  002F3E  EFBA  F017         	goto	l5122
  4865  002F42                     u4080:
  4866  002F42  C00F  F001         	movff	Is_digit@op,___fleq@ff1
  4867  002F46  C010  F002         	movff	Is_digit@op+1,___fleq@ff1+1
  4868  002F4A  C011  F003         	movff	Is_digit@op+2,___fleq@ff1+2
  4869  002F4E  C012  F004         	movff	Is_digit@op+3,___fleq@ff1+3
  4870  002F52  0E00               	movlw	0
  4871  002F54  6E05               	movwf	___fleq@ff2^0,c
  4872  002F56  0E00               	movlw	0
  4873  002F58  6E06               	movwf	(___fleq@ff2+1)^0,c
  4874  002F5A  0E80               	movlw	128
  4875  002F5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  4876  002F5E  0E4F               	movlw	79
  4877  002F60  6E08               	movwf	(___fleq@ff2+3)^0,c
  4878  002F62  EC3E  F01A         	call	___fleq	;wreg free
  4879  002F66  A0D8               	btfss	status,0,c
  4880  002F68  EFB8  F017         	goto	u4091
  4881  002F6C  EFBA  F017         	goto	u4090
  4882  002F70                     u4091:
  4883  002F70  EFC0  F017         	goto	l5128
  4884  002F74                     u4090:
  4885  002F74                     l5122:
  4886                           
  4887                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 58:         return 0;
  4888  002F74  0E00               	movlw	0
  4889  002F76  6E10               	movwf	(?_Is_digit+1)^0,c
  4890  002F78  0E00               	movlw	0
  4891  002F7A  6E0F               	movwf	?_Is_digit^0,c
  4892  002F7C  EFC4  F017         	goto	l914
  4893  002F80                     l5128:
  4894                           
  4895                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 61:         return 1;
  4896  002F80  0E00               	movlw	0
  4897  002F82  6E10               	movwf	(?_Is_digit+1)^0,c
  4898  002F84  0E01               	movlw	1
  4899  002F86  6E0F               	movwf	?_Is_digit^0,c
  4900  002F88                     l914:
  4901  002F88  0012               	return		;funcret
  4902  002F8A                     __end_of_Is_digit:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function ___fleq *****************
  4906 ;; Defined at:
  4907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  ff1             4    0[COMRAM] int 
  4910 ;;  ff2             4    4[COMRAM] int 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;		None               void
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:       12 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_Is_digit
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text22
  4936  00347C                     __ptext22:
  4937                           	callstack 0
  4938  00347C                     ___fleq:
  4939                           	callstack 28
  4940  00347C  0E00               	movlw	0
  4941  00347E  1401               	andwf	___fleq@ff1^0,w,c
  4942  003480  6E09               	movwf	??___fleq^0,c
  4943  003482  0E00               	movlw	0
  4944  003484  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4945  003486  6E0A               	movwf	(??___fleq+1)^0,c
  4946  003488  0E80               	movlw	128
  4947  00348A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4948  00348C  6E0B               	movwf	(??___fleq+2)^0,c
  4949  00348E  0E7F               	movlw	127
  4950  003490  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4951  003492  6E0C               	movwf	(??___fleq+3)^0,c
  4952  003494  5009               	movf	??___fleq^0,w,c
  4953  003496  100A               	iorwf	(??___fleq+1)^0,w,c
  4954  003498  100B               	iorwf	(??___fleq+2)^0,w,c
  4955  00349A  100C               	iorwf	(??___fleq+3)^0,w,c
  4956  00349C  A4D8               	btfss	status,2,c
  4957  00349E  EF53  F01A         	goto	u3801
  4958  0034A2  EF55  F01A         	goto	u3800
  4959  0034A6                     u3801:
  4960  0034A6  EF5D  F01A         	goto	l4886
  4961  0034AA                     u3800:
  4962  0034AA  0E00               	movlw	0
  4963  0034AC  6E01               	movwf	___fleq@ff1^0,c
  4964  0034AE  0E00               	movlw	0
  4965  0034B0  6E02               	movwf	(___fleq@ff1+1)^0,c
  4966  0034B2  0E00               	movlw	0
  4967  0034B4  6E03               	movwf	(___fleq@ff1+2)^0,c
  4968  0034B6  0E00               	movlw	0
  4969  0034B8  6E04               	movwf	(___fleq@ff1+3)^0,c
  4970  0034BA                     l4886:
  4971  0034BA  0E00               	movlw	0
  4972  0034BC  1405               	andwf	___fleq@ff2^0,w,c
  4973  0034BE  6E09               	movwf	??___fleq^0,c
  4974  0034C0  0E00               	movlw	0
  4975  0034C2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4976  0034C4  6E0A               	movwf	(??___fleq+1)^0,c
  4977  0034C6  0E80               	movlw	128
  4978  0034C8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4979  0034CA  6E0B               	movwf	(??___fleq+2)^0,c
  4980  0034CC  0E7F               	movlw	127
  4981  0034CE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4982  0034D0  6E0C               	movwf	(??___fleq+3)^0,c
  4983  0034D2  5009               	movf	??___fleq^0,w,c
  4984  0034D4  100A               	iorwf	(??___fleq+1)^0,w,c
  4985  0034D6  100B               	iorwf	(??___fleq+2)^0,w,c
  4986  0034D8  100C               	iorwf	(??___fleq+3)^0,w,c
  4987  0034DA  A4D8               	btfss	status,2,c
  4988  0034DC  EF72  F01A         	goto	u3811
  4989  0034E0  EF74  F01A         	goto	u3810
  4990  0034E4                     u3811:
  4991  0034E4  EF7C  F01A         	goto	l4890
  4992  0034E8                     u3810:
  4993  0034E8  0E00               	movlw	0
  4994  0034EA  6E05               	movwf	___fleq@ff2^0,c
  4995  0034EC  0E00               	movlw	0
  4996  0034EE  6E06               	movwf	(___fleq@ff2+1)^0,c
  4997  0034F0  0E00               	movlw	0
  4998  0034F2  6E07               	movwf	(___fleq@ff2+2)^0,c
  4999  0034F4  0E00               	movlw	0
  5000  0034F6  6E08               	movwf	(___fleq@ff2+3)^0,c
  5001  0034F8                     l4890:
  5002  0034F8  5005               	movf	___fleq@ff2^0,w,c
  5003  0034FA  1801               	xorwf	___fleq@ff1^0,w,c
  5004  0034FC  E10F               	bnz	u3820
  5005  0034FE  5006               	movf	(___fleq@ff2+1)^0,w,c
  5006  003500  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5007  003502  E10C               	bnz	u3820
  5008  003504  5007               	movf	(___fleq@ff2+2)^0,w,c
  5009  003506  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5010  003508  E109               	bnz	u3820
  5011  00350A  5008               	movf	(___fleq@ff2+3)^0,w,c
  5012  00350C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5013  00350E  B4D8               	btfsc	status,2,c
  5014  003510  EF8C  F01A         	goto	u3821
  5015  003514  EF8E  F01A         	goto	u3820
  5016  003518                     u3821:
  5017  003518  EF91  F01A         	goto	l4894
  5018  00351C                     u3820:
  5019  00351C  90D8               	bcf	status,0,c
  5020  00351E  EF92  F01A         	goto	l1231
  5021  003522                     l4894:
  5022  003522  80D8               	bsf	status,0,c
  5023  003524                     l1231:
  5024  003524  0012               	return		;funcret
  5025  003526                     __end_of___fleq:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _convert_uint32_to_string *****************
  5029 ;; Defined at:
  5030 ;;		line 246 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  value           4  115[COMRAM] unsigned long 
  5033 ;;  str             2  119[COMRAM] PTR unsigned char 
  5034 ;;		 -> arr(11), 
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  ret             1  121[COMRAM] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      unsigned char 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        7 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 8
  5053 ;; This function calls:
  5054 ;;		_memset
  5055 ;;		_sprintf
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text23
  5062  003D0C                     __ptext23:
  5063                           	callstack 0
  5064  003D0C                     _convert_uint32_to_string:
  5065                           	callstack 22
  5066  003D0C                     
  5067                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 247:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5068  003D0C  0E01               	movlw	1
  5069  003D0E  6E7A               	movwf	convert_uint32_to_string@ret^0,c
  5070  003D10                     
  5071                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 248:     if(((void*)0) == str){
  5072  003D10  5078               	movf	convert_uint32_to_string@str^0,w,c
  5073  003D12  1079               	iorwf	(convert_uint32_to_string@str+1)^0,w,c
  5074  003D14  A4D8               	btfss	status,2,c
  5075  003D16  EF8F  F01E         	goto	u4361
  5076  003D1A  EF91  F01E         	goto	u4360
  5077  003D1E                     u4361:
  5078  003D1E  EF95  F01E         	goto	l5294
  5079  003D22                     u4360:
  5080  003D22                     
  5081                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 249:         ret = (Std_ReturnType)0x00;
  5082  003D22  0E00               	movlw	0
  5083  003D24  6E7A               	movwf	convert_uint32_to_string@ret^0,c
  5084                           
  5085                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 250:     }
  5086  003D26  EFB5  F01E         	goto	l5298
  5087  003D2A                     l5294:
  5088                           
  5089                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 252:         memset(str, '\0', 11);
  5090  003D2A  C078  F001         	movff	convert_uint32_to_string@str,memset@dest
  5091  003D2E  C079  F002         	movff	convert_uint32_to_string@str+1,memset@dest+1
  5092  003D32  0E00               	movlw	0
  5093  003D34  6E04               	movwf	(memset@c+1)^0,c
  5094  003D36  0E00               	movlw	0
  5095  003D38  6E03               	movwf	memset@c^0,c
  5096  003D3A  0E00               	movlw	0
  5097  003D3C  6E06               	movwf	(memset@n+1)^0,c
  5098  003D3E  0E0B               	movlw	11
  5099  003D40  6E05               	movwf	memset@n^0,c
  5100  003D42  ECDB  F012         	call	_memset	;wreg free
  5101  003D46                     
  5102                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 253:         sprintf(str, "%lu", value);
  5103  003D46  C078  F06C         	movff	convert_uint32_to_string@str,sprintf@s
  5104  003D4A  C079  F06D         	movff	convert_uint32_to_string@str+1,sprintf@s+1
  5105  003D4E  0E9B               	movlw	low STR_1
  5106  003D50  6E6E               	movwf	sprintf@fmt^0,c
  5107  003D52  0E10               	movlw	high STR_1
  5108  003D54  6E6F               	movwf	(sprintf@fmt+1)^0,c
  5109  003D56  C074  F070         	movff	convert_uint32_to_string@value,?_sprintf+4
  5110  003D5A  C075  F071         	movff	convert_uint32_to_string@value+1,?_sprintf+5
  5111  003D5E  C076  F072         	movff	convert_uint32_to_string@value+2,?_sprintf+6
  5112  003D62  C077  F073         	movff	convert_uint32_to_string@value+3,?_sprintf+7
  5113  003D66  ECB7  F01E         	call	_sprintf	;wreg free
  5114  003D6A                     l5298:
  5115                           
  5116                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 255:     return ret;
  5117  003D6A  507A               	movf	convert_uint32_to_string@ret^0,w,c
  5118  003D6C  0012               	return		;funcret
  5119  003D6E                     __end_of_convert_uint32_to_string:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _sprintf *****************
  5123 ;; Defined at:
  5124 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  s               2  107[COMRAM] PTR unsigned char 
  5127 ;;		 -> arr(11), 
  5128 ;;  fmt             2  109[COMRAM] PTR const unsigned char 
  5129 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  f              11    2[BANK0 ] struct _IO_FILE
  5132 ;;  ap              2    0[BANK0 ] PTR void [1]
  5133 ;;		 -> ?_sprintf(2), 
  5134 ;;  ret             2    0        int 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2  107[COMRAM] int 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5144 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Totals:         8      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;Total ram usage:       21 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; Hardware stack levels required when called: 7
  5151 ;; This function calls:
  5152 ;;		_vfprintf
  5153 ;; This function is called by:
  5154 ;;		_convert_uint32_to_string
  5155 ;;		_convert_uint16_to_string
  5156 ;;		_convert_uint8_to_string
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text24
  5161  003D6E                     __ptext24:
  5162                           	callstack 0
  5163  003D6E                     _sprintf:
  5164                           	callstack 22
  5165  003D6E  0E70               	movlw	low (?_sprintf+4)
  5166  003D70  0100               	movlb	0	; () banked
  5167  003D72  6F80               	movwf	sprintf@ap& (0+255),b
  5168  003D74  0E00               	movlw	high (?_sprintf+4)
  5169  003D76  6F81               	movwf	(sprintf@ap+1)& (0+255),b
  5170  003D78  C06C  F082         	movff	sprintf@s,sprintf@f
  5171  003D7C  C06D  F083         	movff	sprintf@s+1,sprintf@f+1
  5172  003D80                     
  5173                           ; BSR set to: 0
  5174  003D80  0E00               	movlw	0
  5175  003D82  6F86               	movwf	(sprintf@f+4)& (0+255),b
  5176  003D84  0E00               	movlw	0
  5177  003D86  6F85               	movwf	(sprintf@f+3)& (0+255),b
  5178  003D88                     
  5179                           ; BSR set to: 0
  5180  003D88  0E00               	movlw	0
  5181  003D8A  6F8C               	movwf	(sprintf@f+10)& (0+255),b
  5182  003D8C  0E00               	movlw	0
  5183  003D8E  6F8B               	movwf	(sprintf@f+9)& (0+255),b
  5184  003D90                     
  5185                           ; BSR set to: 0
  5186  003D90  0E82               	movlw	low sprintf@f
  5187  003D92  6E64               	movwf	vfprintf@fp^0,c
  5188  003D94  0E00               	movlw	high sprintf@f
  5189  003D96  6E65               	movwf	(vfprintf@fp+1)^0,c
  5190  003D98  C06E  F066         	movff	sprintf@fmt,vfprintf@fmt
  5191  003D9C  C06F  F067         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5192  003DA0  0E80               	movlw	low sprintf@ap
  5193  003DA2  6E68               	movwf	vfprintf@ap^0,c
  5194  003DA4  0E00               	movlw	high sprintf@ap
  5195  003DA6  6E69               	movwf	(vfprintf@ap+1)^0,c
  5196  003DA8  EC54  F01E         	call	_vfprintf	;wreg free
  5197  003DAC  0100               	movlb	0	; () banked
  5198  003DAE  5185               	movf	(sprintf@f+3)& (0+255),w,b
  5199  003DB0  246C               	addwf	sprintf@s^0,w,c
  5200  003DB2  6ED9               	movwf	fsr2l,c
  5201  003DB4  5186               	movf	(sprintf@f+4)& (0+255),w,b
  5202  003DB6  206D               	addwfc	(sprintf@s+1)^0,w,c
  5203  003DB8  6EDA               	movwf	fsr2h,c
  5204  003DBA  0E00               	movlw	0
  5205  003DBC  6EDF               	movwf	indf2,c
  5206  003DBE                     
  5207                           ; BSR set to: 0
  5208  003DBE  0012               	return		;funcret
  5209  003DC0                     __end_of_sprintf:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _vfprintf *****************
  5213 ;; Defined at:
  5214 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  fp              2   99[COMRAM] PTR struct _IO_FILE
  5217 ;;		 -> sprintf@f(11), 
  5218 ;;  fmt             2  101[COMRAM] PTR const unsigned char 
  5219 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  5220 ;;  ap              2  103[COMRAM] PTR PTR void 
  5221 ;;		 -> sprintf@ap(2), 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  cfmt            2  105[COMRAM] PTR unsigned char 
  5224 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  2   99[COMRAM] int 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:        8 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 6
  5241 ;; This function calls:
  5242 ;;		_vfpfcnvrt
  5243 ;; This function is called by:
  5244 ;;		_sprintf
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text25
  5249  003CA8                     __ptext25:
  5250                           	callstack 0
  5251  003CA8                     _vfprintf:
  5252                           	callstack 22
  5253  003CA8                     
  5254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5255  003CA8  C066  F06A         	movff	vfprintf@fmt,vfprintf@cfmt
  5256  003CAC  C067  F06B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5257  003CB0                     
  5258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5259  003CB0  0E00               	movlw	0
  5260  003CB2  0101               	movlb	1	; () banked
  5261  003CB4  6F0F               	movwf	(_nout+1)& (0+255),b
  5262  003CB6  0E00               	movlw	0
  5263  003CB8  6F0E               	movwf	_nout& (0+255),b
  5264                           
  5265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5266  003CBA  EF72  F01E         	goto	l4904
  5267  003CBE                     l4902:
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5271  003CBE  C064  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5272  003CC2  C065  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5273  003CC6  0E6A               	movlw	low vfprintf@cfmt
  5274  003CC8  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5275  003CCA  0E00               	movlw	high vfprintf@cfmt
  5276  003CCC  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5277  003CCE  C068  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5278  003CD2  C069  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5279  003CD6  EC7A  F00A         	call	_vfpfcnvrt	;wreg free
  5280  003CDA  5040               	movf	?_vfpfcnvrt^0,w,c
  5281  003CDC  0101               	movlb	1	; () banked
  5282  003CDE  270E               	addwf	_nout& (0+255),f,b
  5283  003CE0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5284  003CE2  230F               	addwfc	(_nout+1)& (0+255),f,b
  5285  003CE4                     l4904:
  5286                           
  5287                           ; BSR set to: 1
  5288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5289  003CE4  C06A  FFF6         	movff	vfprintf@cfmt,tblptrl
  5290  003CE8  C06B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5291  003CEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5292  003CEC  6AF8               	clrf	tblptru,c
  5293  003CEE                     	endif
  5294  003CEE                     	if	0	;tblptru may be non-zero
  5295  003CEE                     	endif
  5296  003CEE  0008               	tblrd		*
  5297  003CF0  50F5               	movf	tablat,w,c
  5298  003CF2  0900               	iorlw	0
  5299  003CF4  A4D8               	btfss	status,2,c
  5300  003CF6  EF7F  F01E         	goto	u3831
  5301  003CFA  EF81  F01E         	goto	u3830
  5302  003CFE                     u3831:
  5303  003CFE  EF5F  F01E         	goto	l4902
  5304  003D02                     u3830:
  5305  003D02                     
  5306                           ; BSR set to: 1
  5307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5308  003D02  C10E  F064         	movff	_nout,?_vfprintf
  5309  003D06  C10F  F065         	movff	_nout+1,?_vfprintf+1
  5310  003D0A                     
  5311                           ; BSR set to: 1
  5312  003D0A  0012               	return		;funcret
  5313  003D0C                     __end_of_vfprintf:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _vfpfcnvrt *****************
  5317 ;; Defined at:
  5318 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5321 ;;		 -> sprintf@f(11), 
  5322 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5323 ;;		 -> vfprintf@cfmt(2), 
  5324 ;;  ap              2   67[COMRAM] PTR PTR void 
  5325 ;;		 -> sprintf@ap(2), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  llu             8   91[COMRAM] unsigned long long 
  5328 ;;  ll              8   83[COMRAM] long long 
  5329 ;;  f               4    0        long long 
  5330 ;;  vp              3    0        PTR void 
  5331 ;;  ct              3    0        unsigned char [3]
  5332 ;;  cp              3    0        PTR unsigned char 
  5333 ;;  i               2    0        int 
  5334 ;;  done            2    0        int 
  5335 ;;  c               1    0        unsigned char 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  2   63[COMRAM] int 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5345 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;Total ram usage:       36 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 5
  5352 ;; This function calls:
  5353 ;;		_dtoa
  5354 ;;		_fputc
  5355 ;;		_strncmp
  5356 ;;		_utoa
  5357 ;; This function is called by:
  5358 ;;		_vfprintf
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text26
  5363  0014F4                     __ptext26:
  5364                           	callstack 0
  5365  0014F4                     _vfpfcnvrt:
  5366                           	callstack 22
  5367  0014F4                     
  5368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5369  0014F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5370  0014F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5371  0014FC  CFDE FFF6          	movff	postinc2,tblptrl
  5372  001500  CFDD FFF7          	movff	postdec2,tblptrh
  5373  001504                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5374  001504  6AF8               	clrf	tblptru,c
  5375  001506                     	endif
  5376  001506                     	if	0	;tblptru may be non-zero
  5377  001506                     	endif
  5378  001506  0008               	tblrd		*
  5379  001508  50F5               	movf	tablat,w,c
  5380  00150A  0A25               	xorlw	37
  5381  00150C  A4D8               	btfss	status,2,c
  5382  00150E  EF8B  F00A         	goto	u3601
  5383  001512  EF8D  F00A         	goto	u3600
  5384  001516                     u3601:
  5385  001516  EF52  F00C         	goto	l4744
  5386  00151A                     u3600:
  5387  00151A                     
  5388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5389  00151A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5390  00151E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5391  001522  2ADE               	incf	postinc2,f,c
  5392  001524  0E00               	movlw	0
  5393  001526  22DD               	addwfc	postdec2,f,c
  5394  001528                     
  5395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5396  001528  0E00               	movlw	0
  5397  00152A  0100               	movlb	0	; () banked
  5398  00152C  6FE5               	movwf	(_width+1)& (0+255),b
  5399  00152E  0E00               	movlw	0
  5400  001530  6FE4               	movwf	_width& (0+255),b
  5401  001532  C0E4  F0E8         	movff	_width,_flags
  5402  001536  C0E5  F0E9         	movff	_width+1,_flags+1
  5403  00153A                     
  5404                           ; BSR set to: 0
  5405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5406  00153A  69E6               	setf	_prec& (0+255),b
  5407  00153C  69E7               	setf	(_prec+1)& (0+255),b
  5408  00153E                     
  5409                           ; BSR set to: 0
  5410                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5411  00153E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5412  001542  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5413  001546  CFDE FFF6          	movff	postinc2,tblptrl
  5414  00154A  CFDD FFF7          	movff	postdec2,tblptrh
  5415  00154E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5416  00154E  6AF8               	clrf	tblptru,c
  5417  001550                     	endif
  5418  001550                     	if	0	;tblptru may be non-zero
  5419  001550                     	endif
  5420  001550  0008               	tblrd		*
  5421  001552  50F5               	movf	tablat,w,c
  5422  001554  0A64               	xorlw	100
  5423  001556  B4D8               	btfsc	status,2,c
  5424  001558  EFB0  F00A         	goto	u3611
  5425  00155C  EFB2  F00A         	goto	u3610
  5426  001560                     u3611:
  5427  001560  EFC5  F00A         	goto	l4696
  5428  001564                     u3610:
  5429  001564                     
  5430                           ; BSR set to: 0
  5431  001564  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5432  001568  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5433  00156C  CFDE FFF6          	movff	postinc2,tblptrl
  5434  001570  CFDD FFF7          	movff	postdec2,tblptrh
  5435  001574                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5436  001574  6AF8               	clrf	tblptru,c
  5437  001576                     	endif
  5438  001576                     	if	0	;tblptru may be non-zero
  5439  001576                     	endif
  5440  001576  0008               	tblrd		*
  5441  001578  50F5               	movf	tablat,w,c
  5442  00157A  0A69               	xorlw	105
  5443  00157C  A4D8               	btfss	status,2,c
  5444  00157E  EFC3  F00A         	goto	u3621
  5445  001582  EFC5  F00A         	goto	u3620
  5446  001586                     u3621:
  5447  001586  EF05  F00B         	goto	l4702
  5448  00158A                     u3620:
  5449  00158A                     l4696:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5453  00158A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5454  00158E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5455  001592  2ADE               	incf	postinc2,f,c
  5456  001594  0E00               	movlw	0
  5457  001596  22DD               	addwfc	postdec2,f,c
  5458                           
  5459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5460  001598  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5461  00159C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5462  0015A0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5463  0015A4  0E02               	movlw	2
  5464  0015A6  26DE               	addwf	postinc2,f,c
  5465  0015A8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5466  0015AC  0E00               	movlw	0
  5467  0015AE  22DD               	addwfc	postdec2,f,c
  5468  0015B0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5469  0015B4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5470  0015B8  CFDE F054          	movff	postinc2,vfpfcnvrt@ll
  5471  0015BC  CFDD F055          	movff	postdec2,vfpfcnvrt@ll+1
  5472  0015C0  0E00               	movlw	0
  5473  0015C2  BE55               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5474  0015C4  0EFF               	movlw	-1
  5475  0015C6  6E56               	movwf	(vfpfcnvrt@ll+2)^0,c
  5476  0015C8  6E57               	movwf	(vfpfcnvrt@ll+3)^0,c
  5477  0015CA  6E58               	movwf	(vfpfcnvrt@ll+4)^0,c
  5478  0015CC  6E59               	movwf	(vfpfcnvrt@ll+5)^0,c
  5479  0015CE  6E5A               	movwf	(vfpfcnvrt@ll+6)^0,c
  5480  0015D0  6E5B               	movwf	(vfpfcnvrt@ll+7)^0,c
  5481  0015D2                     l4698:
  5482                           
  5483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5484  0015D2  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5485  0015D6  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5486  0015DA  C054  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5487  0015DE  C055  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5488  0015E2  C056  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5489  0015E6  C057  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5490  0015EA  C058  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5491  0015EE  C059  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5492  0015F2  C05A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5493  0015F6  C05B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5494  0015FA  ECE4  F00D         	call	_dtoa	;wreg free
  5495  0015FE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5496  001602  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5497  001606  EF6E  F00C         	goto	l1747
  5498  00160A                     l4702:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  5502  00160A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5503  00160E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5504  001612  CFDE F001          	movff	postinc2,strncmp@_l
  5505  001616  CFDD F002          	movff	postdec2,strncmp@_l+1
  5506  00161A  0E9F               	movlw	low STR_5
  5507  00161C  6E03               	movwf	strncmp@_r^0,c
  5508  00161E  0E10               	movlw	high STR_5
  5509  001620  6E04               	movwf	(strncmp@_r+1)^0,c
  5510  001622  0E00               	movlw	0
  5511  001624  6E06               	movwf	(strncmp@n+1)^0,c
  5512  001626  0E02               	movlw	2
  5513  001628  6E05               	movwf	strncmp@n^0,c
  5514  00162A  EC3D  F018         	call	_strncmp	;wreg free
  5515  00162E  5001               	movf	?_strncmp^0,w,c
  5516  001630  1002               	iorwf	(?_strncmp+1)^0,w,c
  5517  001632  B4D8               	btfsc	status,2,c
  5518  001634  EF1E  F00B         	goto	u3631
  5519  001638  EF20  F00B         	goto	u3630
  5520  00163C                     u3631:
  5521  00163C  EF3B  F00B         	goto	l4706
  5522  001640                     u3630:
  5523  001640  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5524  001644  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5525  001648  CFDE F001          	movff	postinc2,strncmp@_l
  5526  00164C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5527  001650  0EA2               	movlw	low STR_9
  5528  001652  6E03               	movwf	strncmp@_r^0,c
  5529  001654  0E10               	movlw	high STR_9
  5530  001656  6E04               	movwf	(strncmp@_r+1)^0,c
  5531  001658  0E00               	movlw	0
  5532  00165A  6E06               	movwf	(strncmp@n+1)^0,c
  5533  00165C  0E02               	movlw	2
  5534  00165E  6E05               	movwf	strncmp@n^0,c
  5535  001660  EC3D  F018         	call	_strncmp	;wreg free
  5536  001664  5001               	movf	?_strncmp^0,w,c
  5537  001666  1002               	iorwf	(?_strncmp+1)^0,w,c
  5538  001668  A4D8               	btfss	status,2,c
  5539  00166A  EF39  F00B         	goto	u3641
  5540  00166E  EF3B  F00B         	goto	u3640
  5541  001672                     u3641:
  5542  001672  EF7E  F00B         	goto	l4712
  5543  001676                     u3640:
  5544  001676                     l4706:
  5545                           
  5546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  5547  001676  0E02               	movlw	2
  5548  001678  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5549  00167C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5550  001680  26DE               	addwf	postinc2,f,c
  5551  001682  0E00               	movlw	0
  5552  001684  22DD               	addwfc	postdec2,f,c
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  5555  001686  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5556  00168A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5557  00168E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5558  001692  0E04               	movlw	4
  5559  001694  26DE               	addwf	postinc2,f,c
  5560  001696  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5561  00169A  0E00               	movlw	0
  5562  00169C  22DD               	addwfc	postdec2,f,c
  5563  00169E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5564  0016A2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5565  0016A6  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  5566  0016AA  CFDE F049          	movff	postinc2,??_vfpfcnvrt+3
  5567  0016AE  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+4
  5568  0016B2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+5
  5569  0016B6  C048  F04C         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5570  0016BA  C049  F04D         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5571  0016BE  C04A  F04E         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5572  0016C2  C04B  F04F         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  5573  0016C6  6A50               	clrf	(??_vfpfcnvrt+10)^0,c
  5574  0016C8  BE4F               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  5575  0016CA  6850               	setf	(??_vfpfcnvrt+10)^0,c
  5576  0016CC  C050  F051         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  5577  0016D0  C050  F052         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  5578  0016D4  C050  F053         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  5579  0016D8  C04C  F054         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  5580  0016DC  C04D  F055         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  5581  0016E0  C04E  F056         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  5582  0016E4  C04F  F057         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  5583  0016E8  C050  F058         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  5584  0016EC  C051  F059         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  5585  0016F0  C052  F05A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  5586  0016F4  C053  F05B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  5587  0016F8  EFE9  F00A         	goto	l4698
  5588  0016FC                     l4712:
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  5591  0016FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5592  001700  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5593  001704  CFDE FFF6          	movff	postinc2,tblptrl
  5594  001708  CFDD FFF7          	movff	postdec2,tblptrh
  5595  00170C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5596  00170C  6AF8               	clrf	tblptru,c
  5597  00170E                     	endif
  5598  00170E                     	if	0	;tblptru may be non-zero
  5599  00170E                     	endif
  5600  00170E  0008               	tblrd		*
  5601  001710  50F5               	movf	tablat,w,c
  5602  001712  0A75               	xorlw	117
  5603  001714  A4D8               	btfss	status,2,c
  5604  001716  EF8F  F00B         	goto	u3651
  5605  00171A  EF91  F00B         	goto	u3650
  5606  00171E                     u3651:
  5607  00171E  EFD2  F00B         	goto	l4720
  5608  001722                     u3650:
  5609  001722                     
  5610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  5611  001722  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5612  001726  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5613  00172A  2ADE               	incf	postinc2,f,c
  5614  00172C  0E00               	movlw	0
  5615  00172E  22DD               	addwfc	postdec2,f,c
  5616                           
  5617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5618  001730  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5619  001734  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5620  001738  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5621  00173C  0E02               	movlw	2
  5622  00173E  26DE               	addwf	postinc2,f,c
  5623  001740  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5624  001744  0E00               	movlw	0
  5625  001746  22DD               	addwfc	postdec2,f,c
  5626  001748  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5627  00174C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5628  001750  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  5629  001754  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  5630  001758  C048  F05C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5631  00175C  C049  F05D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5632  001760  6A5E               	clrf	(vfpfcnvrt@llu+2)^0,c
  5633  001762  6A5F               	clrf	(vfpfcnvrt@llu+3)^0,c
  5634  001764  6A60               	clrf	(vfpfcnvrt@llu+4)^0,c
  5635  001766  6A61               	clrf	(vfpfcnvrt@llu+5)^0,c
  5636  001768  6A62               	clrf	(vfpfcnvrt@llu+6)^0,c
  5637  00176A  6A63               	clrf	(vfpfcnvrt@llu+7)^0,c
  5638  00176C                     l4716:
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  5641  00176C  C040  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5642  001770  C041  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5643  001774  C05C  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5644  001778  C05D  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5645  00177C  C05E  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5646  001780  C05F  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5647  001784  C060  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5648  001788  C061  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5649  00178C  C062  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5650  001790  C063  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5651  001794  EC56  F00F         	call	_utoa	;wreg free
  5652  001798  C01C  F040         	movff	?_utoa,?_vfpfcnvrt
  5653  00179C  C01D  F041         	movff	?_utoa+1,?_vfpfcnvrt+1
  5654  0017A0  EF6E  F00C         	goto	l1747
  5655  0017A4                     l4720:
  5656                           
  5657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  5658  0017A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5659  0017A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5660  0017AC  CFDE F001          	movff	postinc2,strncmp@_l
  5661  0017B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  5662  0017B4  0E9C               	movlw	low (STR_1+1)
  5663  0017B6  6E03               	movwf	strncmp@_r^0,c
  5664  0017B8  0E10               	movlw	high (STR_1+1)
  5665  0017BA  6E04               	movwf	(strncmp@_r+1)^0,c
  5666  0017BC  0E00               	movlw	0
  5667  0017BE  6E06               	movwf	(strncmp@n+1)^0,c
  5668  0017C0  0E02               	movlw	2
  5669  0017C2  6E05               	movwf	strncmp@n^0,c
  5670  0017C4  EC3D  F018         	call	_strncmp	;wreg free
  5671  0017C8  5001               	movf	?_strncmp^0,w,c
  5672  0017CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  5673  0017CC  A4D8               	btfss	status,2,c
  5674  0017CE  EFEB  F00B         	goto	u3661
  5675  0017D2  EFED  F00B         	goto	u3660
  5676  0017D6                     u3661:
  5677  0017D6  EF1B  F00C         	goto	l4728
  5678  0017DA                     u3660:
  5679  0017DA                     
  5680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  5681  0017DA  0E02               	movlw	2
  5682  0017DC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5683  0017E0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5684  0017E4  26DE               	addwf	postinc2,f,c
  5685  0017E6  0E00               	movlw	0
  5686  0017E8  22DD               	addwfc	postdec2,f,c
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  5689  0017EA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5690  0017EE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5691  0017F2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5692  0017F6  0E04               	movlw	4
  5693  0017F8  26DE               	addwf	postinc2,f,c
  5694  0017FA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5695  0017FE  0E00               	movlw	0
  5696  001800  22DD               	addwfc	postdec2,f,c
  5697  001802  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5698  001806  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5699  00180A  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  5700  00180E  CFDE F049          	movff	postinc2,??_vfpfcnvrt+3
  5701  001812  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+4
  5702  001816  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+5
  5703  00181A  5048               	movf	(??_vfpfcnvrt+2)^0,w,c
  5704  00181C  6E5C               	movwf	vfpfcnvrt@llu^0,c
  5705  00181E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  5706  001820  6E5D               	movwf	(vfpfcnvrt@llu+1)^0,c
  5707  001822  504A               	movf	(??_vfpfcnvrt+4)^0,w,c
  5708  001824  6E5E               	movwf	(vfpfcnvrt@llu+2)^0,c
  5709  001826  504B               	movf	(??_vfpfcnvrt+5)^0,w,c
  5710  001828  6E5F               	movwf	(vfpfcnvrt@llu+3)^0,c
  5711  00182A  6A60               	clrf	(vfpfcnvrt@llu+4)^0,c
  5712  00182C  6A61               	clrf	(vfpfcnvrt@llu+5)^0,c
  5713  00182E  6A62               	clrf	(vfpfcnvrt@llu+6)^0,c
  5714  001830  6A63               	clrf	(vfpfcnvrt@llu+7)^0,c
  5715  001832  EFB6  F00B         	goto	l4716
  5716  001836                     l4728:
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5719  001836  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5720  00183A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5721  00183E  CFDE FFF6          	movff	postinc2,tblptrl
  5722  001842  CFDD FFF7          	movff	postdec2,tblptrh
  5723  001846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5724  001846  6AF8               	clrf	tblptru,c
  5725  001848                     	endif
  5726  001848                     	if	0	;tblptru may be non-zero
  5727  001848                     	endif
  5728  001848  0008               	tblrd		*
  5729  00184A  50F5               	movf	tablat,w,c
  5730  00184C  0A25               	xorlw	37
  5731  00184E  A4D8               	btfss	status,2,c
  5732  001850  EF2C  F00C         	goto	u3671
  5733  001854  EF2E  F00C         	goto	u3670
  5734  001858                     u3671:
  5735  001858  EF45  F00C         	goto	l4738
  5736  00185C                     u3670:
  5737  00185C                     
  5738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5739  00185C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5740  001860  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5741  001864  2ADE               	incf	postinc2,f,c
  5742  001866  0E00               	movlw	0
  5743  001868  22DD               	addwfc	postdec2,f,c
  5744  00186A                     
  5745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5746  00186A  0E00               	movlw	0
  5747  00186C  6E02               	movwf	(fputc@c+1)^0,c
  5748  00186E  0E25               	movlw	37
  5749  001870  6E01               	movwf	fputc@c^0,c
  5750  001872  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5751  001876  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5752  00187A  EC1A  F019         	call	_fputc	;wreg free
  5753  00187E                     l4734:
  5754                           
  5755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5756  00187E  0E00               	movlw	0
  5757  001880  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5758  001882  0E01               	movlw	1
  5759  001884  6E40               	movwf	?_vfpfcnvrt^0,c
  5760  001886  EF6E  F00C         	goto	l1747
  5761  00188A                     l4738:
  5762                           
  5763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5764  00188A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5765  00188E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5766  001892  2ADE               	incf	postinc2,f,c
  5767  001894  0E00               	movlw	0
  5768  001896  22DD               	addwfc	postdec2,f,c
  5769  001898                     
  5770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5771  001898  0E00               	movlw	0
  5772  00189A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5773  00189C  0E00               	movlw	0
  5774  00189E  6E40               	movwf	?_vfpfcnvrt^0,c
  5775  0018A0  EF6E  F00C         	goto	l1747
  5776  0018A4                     l4744:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5779  0018A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5780  0018A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5781  0018AC  CFDE FFF6          	movff	postinc2,tblptrl
  5782  0018B0  CFDD FFF7          	movff	postdec2,tblptrh
  5783  0018B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5784  0018B4  6AF8               	clrf	tblptru,c
  5785  0018B6                     	endif
  5786  0018B6                     	if	0	;tblptru may be non-zero
  5787  0018B6                     	endif
  5788  0018B6  0008               	tblrd		*
  5789  0018B8  50F5               	movf	tablat,w,c
  5790  0018BA  6E01               	movwf	fputc@c^0,c
  5791  0018BC  6A02               	clrf	(fputc@c+1)^0,c
  5792  0018BE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5793  0018C2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5794  0018C6  EC1A  F019         	call	_fputc	;wreg free
  5795  0018CA                     
  5796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5797  0018CA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5798  0018CE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5799  0018D2  2ADE               	incf	postinc2,f,c
  5800  0018D4  0E00               	movlw	0
  5801  0018D6  22DD               	addwfc	postdec2,f,c
  5802  0018D8  EF3F  F00C         	goto	l4734
  5803  0018DC                     l1747:
  5804  0018DC  0012               	return		;funcret
  5805  0018DE                     __end_of_vfpfcnvrt:
  5806                           	callstack 0
  5807                           
  5808 ;; *************** function _utoa *****************
  5809 ;; Defined at:
  5810 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5813 ;;		 -> sprintf@f(11), 
  5814 ;;  d               8   29[COMRAM] unsigned long long 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  n               8   49[COMRAM] unsigned long long 
  5817 ;;  i               2   57[COMRAM] int 
  5818 ;;  w               2   47[COMRAM] int 
  5819 ;;  p               2   45[COMRAM] int 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  2   27[COMRAM] int 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5829 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;Total ram usage:       32 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 4
  5836 ;; This function calls:
  5837 ;;		___lodiv
  5838 ;;		___lomod
  5839 ;;		_pad
  5840 ;; This function is called by:
  5841 ;;		_vfpfcnvrt
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text27
  5846  001EAC                     __ptext27:
  5847                           	callstack 0
  5848  001EAC                     _utoa:
  5849                           	callstack 22
  5850  001EAC                     
  5851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5852  001EAC  0100               	movlb	0	; () banked
  5853  001EAE  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5854  001EB0  EF5C  F00F         	goto	u3451
  5855  001EB4  EF5E  F00F         	goto	u3450
  5856  001EB8                     u3451:
  5857  001EB8  EF5F  F00F         	goto	l4606
  5858  001EBC                     u3450:
  5859  001EBC                     
  5860                           ; BSR set to: 0
  5861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5862  001EBC  93E8               	bcf	_flags& (0+255),1,b
  5863  001EBE                     l4606:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5867  001EBE  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  5868  001EC0  EF6C  F00F         	goto	u3460
  5869  001EC4  51E7               	movf	(_prec+1)& (0+255),w,b
  5870  001EC6  E106               	bnz	u3461
  5871  001EC8  05E6               	decf	_prec& (0+255),w,b
  5872  001ECA  B0D8               	btfsc	status,0,c
  5873  001ECC  EF6A  F00F         	goto	u3461
  5874  001ED0  EF6C  F00F         	goto	u3460
  5875  001ED4                     u3461:
  5876  001ED4  EF72  F00F         	goto	l1730
  5877  001ED8                     u3460:
  5878  001ED8                     
  5879                           ; BSR set to: 0
  5880  001ED8  0E00               	movlw	0
  5881  001EDA  6E2F               	movwf	(utoa@p+1)^0,c
  5882  001EDC  0E01               	movlw	1
  5883  001EDE  6E2E               	movwf	utoa@p^0,c
  5884  001EE0  EF76  F00F         	goto	l1732
  5885  001EE4                     l1730:
  5886                           
  5887                           ; BSR set to: 0
  5888  001EE4  C0E6  F02E         	movff	_prec,utoa@p
  5889  001EE8  C0E7  F02F         	movff	_prec+1,utoa@p+1
  5890  001EEC                     l1732:
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5894  001EEC  C0E4  F030         	movff	_width,utoa@w
  5895  001EF0  C0E5  F031         	movff	_width+1,utoa@w+1
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5898  001EF4  C01E  F032         	movff	utoa@d,utoa@n
  5899  001EF8  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5900  001EFC  C020  F034         	movff	utoa@d+2,utoa@n+2
  5901  001F00  C021  F035         	movff	utoa@d+3,utoa@n+3
  5902  001F04  C022  F036         	movff	utoa@d+4,utoa@n+4
  5903  001F08  C023  F037         	movff	utoa@d+5,utoa@n+5
  5904  001F0C  C024  F038         	movff	utoa@d+6,utoa@n+6
  5905  001F10  C025  F039         	movff	utoa@d+7,utoa@n+7
  5906  001F14                     
  5907                           ; BSR set to: 0
  5908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5909  001F14  0E00               	movlw	0
  5910  001F16  6E3B               	movwf	(utoa@i+1)^0,c
  5911  001F18  0E1F               	movlw	31
  5912  001F1A  6E3A               	movwf	utoa@i^0,c
  5913  001F1C                     
  5914                           ; BSR set to: 0
  5915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5916  001F1C  0E00               	movlw	0
  5917  001F1E  0101               	movlb	1	; () banked
  5918  001F20  6F95               	movwf	(_dbuf+31)& (0+255),b
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5921  001F22  EF09  F010         	goto	l4624
  5922  001F26                     l4614:
  5923                           
  5924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  5925  001F26  063A               	decf	utoa@i^0,f,c
  5926  001F28  A0D8               	btfss	status,0,c
  5927  001F2A  063B               	decf	(utoa@i+1)^0,f,c
  5928  001F2C                     
  5929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5930  001F2C  0E76               	movlw	low _dbuf
  5931  001F2E  243A               	addwf	utoa@i^0,w,c
  5932  001F30  6ED9               	movwf	fsr2l,c
  5933  001F32  0E01               	movlw	high _dbuf
  5934  001F34  203B               	addwfc	(utoa@i+1)^0,w,c
  5935  001F36  6EDA               	movwf	fsr2h,c
  5936  001F38  C032  F001         	movff	utoa@n,___lomod@dividend
  5937  001F3C  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5938  001F40  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5939  001F44  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5940  001F48  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5941  001F4C  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5942  001F50  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5943  001F54  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5944  001F58  0E0A               	movlw	10
  5945  001F5A  6E09               	movwf	___lomod@divisor^0,c
  5946  001F5C  0E00               	movlw	0
  5947  001F5E  6E0A               	movwf	(___lomod@divisor+1)^0,c
  5948  001F60  0E00               	movlw	0
  5949  001F62  6E0B               	movwf	(___lomod@divisor+2)^0,c
  5950  001F64  0E00               	movlw	0
  5951  001F66  6E0C               	movwf	(___lomod@divisor+3)^0,c
  5952  001F68  0E00               	movlw	0
  5953  001F6A  6E0D               	movwf	(___lomod@divisor+4)^0,c
  5954  001F6C  0E00               	movlw	0
  5955  001F6E  6E0E               	movwf	(___lomod@divisor+5)^0,c
  5956  001F70  0E00               	movlw	0
  5957  001F72  6E0F               	movwf	(___lomod@divisor+6)^0,c
  5958  001F74  0E00               	movlw	0
  5959  001F76  6E10               	movwf	(___lomod@divisor+7)^0,c
  5960  001F78  ECB2  F018         	call	___lomod	;wreg free
  5961  001F7C  C001  F026         	movff	?___lomod,??_utoa
  5962  001F80  C002  F027         	movff	?___lomod+1,??_utoa+1
  5963  001F84  C003  F028         	movff	?___lomod+2,??_utoa+2
  5964  001F88  C004  F029         	movff	?___lomod+3,??_utoa+3
  5965  001F8C  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5966  001F90  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5967  001F94  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5968  001F98  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5969  001F9C  5026               	movf	??_utoa^0,w,c
  5970  001F9E  0F30               	addlw	48
  5971  001FA0  6EDF               	movwf	indf2,c
  5972  001FA2                     
  5973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  5974  001FA2  062E               	decf	utoa@p^0,f,c
  5975  001FA4  A0D8               	btfss	status,0,c
  5976  001FA6  062F               	decf	(utoa@p+1)^0,f,c
  5977  001FA8                     
  5978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  5979  001FA8  0630               	decf	utoa@w^0,f,c
  5980  001FAA  A0D8               	btfss	status,0,c
  5981  001FAC  0631               	decf	(utoa@w+1)^0,f,c
  5982  001FAE                     
  5983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5984  001FAE  C032  F001         	movff	utoa@n,___lodiv@dividend
  5985  001FB2  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5986  001FB6  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5987  001FBA  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5988  001FBE  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5989  001FC2  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5990  001FC6  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5991  001FCA  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5992  001FCE  0E0A               	movlw	10
  5993  001FD0  6E09               	movwf	___lodiv@divisor^0,c
  5994  001FD2  0E00               	movlw	0
  5995  001FD4  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  5996  001FD6  0E00               	movlw	0
  5997  001FD8  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  5998  001FDA  0E00               	movlw	0
  5999  001FDC  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6000  001FDE  0E00               	movlw	0
  6001  001FE0  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6002  001FE2  0E00               	movlw	0
  6003  001FE4  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6004  001FE6  0E00               	movlw	0
  6005  001FE8  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6006  001FEA  0E00               	movlw	0
  6007  001FEC  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6008  001FEE  ECC5  F017         	call	___lodiv	;wreg free
  6009  001FF2  C001  F032         	movff	?___lodiv,utoa@n
  6010  001FF6  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6011  001FFA  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6012  001FFE  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6013  002002  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6014  002006  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6015  00200A  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6016  00200E  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6017  002012                     l4624:
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6020  002012  503A               	movf	utoa@i^0,w,c
  6021  002014  103B               	iorwf	(utoa@i+1)^0,w,c
  6022  002016  B4D8               	btfsc	status,2,c
  6023  002018  EF10  F010         	goto	u3471
  6024  00201C  EF12  F010         	goto	u3470
  6025  002020                     u3471:
  6026  002020  EF43  F010         	goto	l4634
  6027  002024                     u3470:
  6028  002024  5032               	movf	utoa@n^0,w,c
  6029  002026  1033               	iorwf	(utoa@n+1)^0,w,c
  6030  002028  1034               	iorwf	(utoa@n+2)^0,w,c
  6031  00202A  1035               	iorwf	(utoa@n+3)^0,w,c
  6032  00202C  1036               	iorwf	(utoa@n+4)^0,w,c
  6033  00202E  1037               	iorwf	(utoa@n+5)^0,w,c
  6034  002030  1038               	iorwf	(utoa@n+6)^0,w,c
  6035  002032  1039               	iorwf	(utoa@n+7)^0,w,c
  6036  002034  A4D8               	btfss	status,2,c
  6037  002036  EF1F  F010         	goto	u3481
  6038  00203A  EF21  F010         	goto	u3480
  6039  00203E                     u3481:
  6040  00203E  EF93  F00F         	goto	l4614
  6041  002042                     u3480:
  6042  002042  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6043  002044  EF2E  F010         	goto	u3490
  6044  002048  502F               	movf	(utoa@p+1)^0,w,c
  6045  00204A  E106               	bnz	u3491
  6046  00204C  042E               	decf	utoa@p^0,w,c
  6047  00204E  B0D8               	btfsc	status,0,c
  6048  002050  EF2C  F010         	goto	u3491
  6049  002054  EF2E  F010         	goto	u3490
  6050  002058                     u3491:
  6051  002058  EF93  F00F         	goto	l4614
  6052  00205C                     u3490:
  6053  00205C  BE31               	btfsc	(utoa@w+1)^0,7,c
  6054  00205E  EF39  F010         	goto	u3501
  6055  002062  5031               	movf	(utoa@w+1)^0,w,c
  6056  002064  E108               	bnz	u3500
  6057  002066  0430               	decf	utoa@w^0,w,c
  6058  002068  A0D8               	btfss	status,0,c
  6059  00206A  EF39  F010         	goto	u3501
  6060  00206E  EF3B  F010         	goto	u3500
  6061  002072                     u3501:
  6062  002072  EF43  F010         	goto	l4634
  6063  002076                     u3500:
  6064  002076  0100               	movlb	0	; () banked
  6065  002078  B3E8               	btfsc	_flags& (0+255),1,b
  6066  00207A  EF41  F010         	goto	u3511
  6067  00207E  EF43  F010         	goto	u3510
  6068  002082                     u3511:
  6069  002082  EF93  F00F         	goto	l4614
  6070  002086                     u3510:
  6071  002086                     l4634:
  6072                           
  6073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  6074  002086  C01C  F011         	movff	utoa@fp,pad@fp
  6075  00208A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6076  00208E  0E76               	movlw	low _dbuf
  6077  002090  243A               	addwf	utoa@i^0,w,c
  6078  002092  6E13               	movwf	pad@buf^0,c
  6079  002094  0E01               	movlw	high _dbuf
  6080  002096  203B               	addwfc	(utoa@i+1)^0,w,c
  6081  002098  6E14               	movwf	(pad@buf+1)^0,c
  6082  00209A  C030  F015         	movff	utoa@w,pad@p
  6083  00209E  C031  F016         	movff	utoa@w+1,pad@p+1
  6084  0020A2  EC7F  F019         	call	_pad	;wreg free
  6085  0020A6  C011  F01C         	movff	?_pad,?_utoa
  6086  0020AA  C012  F01D         	movff	?_pad+1,?_utoa+1
  6087  0020AE  0012               	return		;funcret
  6088  0020B0                     __end_of_utoa:
  6089                           	callstack 0
  6090                           
  6091 ;; *************** function ___lomod *****************
  6092 ;; Defined at:
  6093 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  dividend        8    0[COMRAM] unsigned long long 
  6096 ;;  divisor         8    8[COMRAM] unsigned long long 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  counter         1   16[COMRAM] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  8    0[COMRAM] unsigned long long 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6108 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;Total ram usage:       17 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_utoa
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text28
  6122  003164                     __ptext28:
  6123                           	callstack 0
  6124  003164                     ___lomod:
  6125                           	callstack 25
  6126  003164  5009               	movf	___lomod@divisor^0,w,c
  6127  003166  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6128  003168  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6129  00316A  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6130  00316C  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6131  00316E  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6132  003170  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6133  003172  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6134  003174  B4D8               	btfsc	status,2,c
  6135  003176  EFBF  F018         	goto	u3161
  6136  00317A  EFC1  F018         	goto	u3160
  6137  00317E                     u3161:
  6138  00317E  EF09  F019         	goto	l1420
  6139  003182                     u3160:
  6140  003182  0E01               	movlw	1
  6141  003184  6E11               	movwf	___lomod@counter^0,c
  6142  003186  EFCF  F018         	goto	l4456
  6143  00318A                     l4454:
  6144  00318A  90D8               	bcf	status,0,c
  6145  00318C  3609               	rlcf	___lomod@divisor^0,f,c
  6146  00318E  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6147  003190  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6148  003192  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6149  003194  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6150  003196  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6151  003198  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6152  00319A  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6153  00319C  2A11               	incf	___lomod@counter^0,f,c
  6154  00319E                     l4456:
  6155  00319E  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6156  0031A0  EFD4  F018         	goto	u3171
  6157  0031A4  EFD6  F018         	goto	u3170
  6158  0031A8                     u3171:
  6159  0031A8  EFC5  F018         	goto	l4454
  6160  0031AC                     u3170:
  6161  0031AC                     l4458:
  6162  0031AC  5009               	movf	___lomod@divisor^0,w,c
  6163  0031AE  5C01               	subwf	___lomod@dividend^0,w,c
  6164  0031B0  500A               	movf	(___lomod@divisor+1)^0,w,c
  6165  0031B2  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6166  0031B4  500B               	movf	(___lomod@divisor+2)^0,w,c
  6167  0031B6  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6168  0031B8  500C               	movf	(___lomod@divisor+3)^0,w,c
  6169  0031BA  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6170  0031BC  500D               	movf	(___lomod@divisor+4)^0,w,c
  6171  0031BE  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6172  0031C0  500E               	movf	(___lomod@divisor+5)^0,w,c
  6173  0031C2  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6174  0031C4  500F               	movf	(___lomod@divisor+6)^0,w,c
  6175  0031C6  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6176  0031C8  5010               	movf	(___lomod@divisor+7)^0,w,c
  6177  0031CA  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6178  0031CC  A0D8               	btfss	status,0,c
  6179  0031CE  EFEB  F018         	goto	u3181
  6180  0031D2  EFED  F018         	goto	u3180
  6181  0031D6                     u3181:
  6182  0031D6  EFFD  F018         	goto	l4462
  6183  0031DA                     u3180:
  6184  0031DA  5009               	movf	___lomod@divisor^0,w,c
  6185  0031DC  5E01               	subwf	___lomod@dividend^0,f,c
  6186  0031DE  500A               	movf	(___lomod@divisor+1)^0,w,c
  6187  0031E0  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6188  0031E2  500B               	movf	(___lomod@divisor+2)^0,w,c
  6189  0031E4  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6190  0031E6  500C               	movf	(___lomod@divisor+3)^0,w,c
  6191  0031E8  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6192  0031EA  500D               	movf	(___lomod@divisor+4)^0,w,c
  6193  0031EC  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6194  0031EE  500E               	movf	(___lomod@divisor+5)^0,w,c
  6195  0031F0  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6196  0031F2  500F               	movf	(___lomod@divisor+6)^0,w,c
  6197  0031F4  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6198  0031F6  5010               	movf	(___lomod@divisor+7)^0,w,c
  6199  0031F8  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6200  0031FA                     l4462:
  6201  0031FA  90D8               	bcf	status,0,c
  6202  0031FC  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6203  0031FE  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6204  003200  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6205  003202  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6206  003204  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6207  003206  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6208  003208  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6209  00320A  3209               	rrcf	___lomod@divisor^0,f,c
  6210  00320C  2E11               	decfsz	___lomod@counter^0,f,c
  6211  00320E  EFD6  F018         	goto	l4458
  6212  003212                     l1420:
  6213  003212  C001  F001         	movff	___lomod@dividend,?___lomod
  6214  003216  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6215  00321A  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6216  00321E  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6217  003222  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6218  003226  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6219  00322A  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6220  00322E  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6221  003232  0012               	return		;funcret
  6222  003234                     __end_of___lomod:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function ___lodiv *****************
  6226 ;; Defined at:
  6227 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  dividend        8    0[COMRAM] unsigned long long 
  6230 ;;  divisor         8    8[COMRAM] unsigned long long 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  quotient        8   16[COMRAM] unsigned long long 
  6233 ;;  counter         1   24[COMRAM] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  8    0[COMRAM] unsigned long long 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6243 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;Total ram usage:       25 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_utoa
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text29
  6257  002F8A                     __ptext29:
  6258                           	callstack 0
  6259  002F8A                     ___lodiv:
  6260                           	callstack 25
  6261  002F8A  EE20  F011         	lfsr	2,___lodiv@quotient
  6262  002F8E  0E07               	movlw	7
  6263  002F90                     u3121:
  6264  002F90  6ADE               	clrf	postinc2,c
  6265  002F92  06E8               	decf	wreg,f,c
  6266  002F94  E2FD               	bc	u3121
  6267  002F96  5009               	movf	___lodiv@divisor^0,w,c
  6268  002F98  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6269  002F9A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6270  002F9C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6271  002F9E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6272  002FA0  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6273  002FA2  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6274  002FA4  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6275  002FA6  B4D8               	btfsc	status,2,c
  6276  002FA8  EFD8  F017         	goto	u3131
  6277  002FAC  EFDA  F017         	goto	u3130
  6278  002FB0                     u3131:
  6279  002FB0  EF2C  F018         	goto	l1410
  6280  002FB4                     u3130:
  6281  002FB4  0E01               	movlw	1
  6282  002FB6  6E19               	movwf	___lodiv@counter^0,c
  6283  002FB8  EFE8  F017         	goto	l4436
  6284  002FBC                     l4434:
  6285  002FBC  90D8               	bcf	status,0,c
  6286  002FBE  3609               	rlcf	___lodiv@divisor^0,f,c
  6287  002FC0  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6288  002FC2  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6289  002FC4  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6290  002FC6  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6291  002FC8  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6292  002FCA  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6293  002FCC  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6294  002FCE  2A19               	incf	___lodiv@counter^0,f,c
  6295  002FD0                     l4436:
  6296  002FD0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6297  002FD2  EFED  F017         	goto	u3141
  6298  002FD6  EFEF  F017         	goto	u3140
  6299  002FDA                     u3141:
  6300  002FDA  EFDE  F017         	goto	l4434
  6301  002FDE                     u3140:
  6302  002FDE                     l4438:
  6303  002FDE  90D8               	bcf	status,0,c
  6304  002FE0  3611               	rlcf	___lodiv@quotient^0,f,c
  6305  002FE2  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6306  002FE4  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6307  002FE6  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6308  002FE8  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6309  002FEA  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6310  002FEC  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6311  002FEE  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6312  002FF0  5009               	movf	___lodiv@divisor^0,w,c
  6313  002FF2  5C01               	subwf	___lodiv@dividend^0,w,c
  6314  002FF4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6315  002FF6  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6316  002FF8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6317  002FFA  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6318  002FFC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6319  002FFE  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6320  003000  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6321  003002  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6322  003004  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6323  003006  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6324  003008  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6325  00300A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6326  00300C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6327  00300E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6328  003010  A0D8               	btfss	status,0,c
  6329  003012  EF0D  F018         	goto	u3151
  6330  003016  EF0F  F018         	goto	u3150
  6331  00301A                     u3151:
  6332  00301A  EF20  F018         	goto	l4446
  6333  00301E                     u3150:
  6334  00301E  5009               	movf	___lodiv@divisor^0,w,c
  6335  003020  5E01               	subwf	___lodiv@dividend^0,f,c
  6336  003022  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6337  003024  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6338  003026  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6339  003028  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6340  00302A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6341  00302C  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6342  00302E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6343  003030  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6344  003032  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6345  003034  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6346  003036  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6347  003038  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6348  00303A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6349  00303C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6350  00303E  8011               	bsf	___lodiv@quotient^0,0,c
  6351  003040                     l4446:
  6352  003040  90D8               	bcf	status,0,c
  6353  003042  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6354  003044  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6355  003046  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6356  003048  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6357  00304A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6358  00304C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6359  00304E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6360  003050  3209               	rrcf	___lodiv@divisor^0,f,c
  6361  003052  2E19               	decfsz	___lodiv@counter^0,f,c
  6362  003054  EFEF  F017         	goto	l4438
  6363  003058                     l1410:
  6364  003058  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6365  00305C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6366  003060  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6367  003064  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6368  003068  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6369  00306C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6370  003070  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6371  003074  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6372  003078  0012               	return		;funcret
  6373  00307A                     __end_of___lodiv:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function _strncmp *****************
  6377 ;; Defined at:
  6378 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6381 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  6382 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6383 ;;		 -> STR_16(3), STR_11(3), STR_7(3), 
  6384 ;;  n               2    4[COMRAM] unsigned int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6387 ;;		 -> STR_16(3), STR_11(3), STR_7(3), 
  6388 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6389 ;;		 -> STR_3(3), STR_2(3), STR_1(4), 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  2    0[COMRAM] int 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:       11 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_vfpfcnvrt
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text30
  6413  00307A                     __ptext30:
  6414                           	callstack 0
  6415  00307A                     _strncmp:
  6416                           	callstack 26
  6417  00307A  C001  F008         	movff	strncmp@_l,strncmp@l
  6418  00307E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6419  003082  C003  F00A         	movff	strncmp@_r,strncmp@r
  6420  003086  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6421  00308A  0605               	decf	strncmp@n^0,f,c
  6422  00308C  A0D8               	btfss	status,0,c
  6423  00308E  0606               	decf	(strncmp@n+1)^0,f,c
  6424  003090  2805               	incf	strncmp@n^0,w,c
  6425  003092  E106               	bnz	u3521
  6426  003094  2806               	incf	(strncmp@n+1)^0,w,c
  6427  003096  A4D8               	btfss	status,2,c
  6428  003098  EF50  F018         	goto	u3521
  6429  00309C  EF52  F018         	goto	u3520
  6430  0030A0                     u3521:
  6431  0030A0  EF5F  F018         	goto	l4646
  6432  0030A4                     u3520:
  6433  0030A4  0E00               	movlw	0
  6434  0030A6  6E02               	movwf	(?_strncmp+1)^0,c
  6435  0030A8  0E00               	movlw	0
  6436  0030AA  6E01               	movwf	?_strncmp^0,c
  6437  0030AC  EFB1  F018         	goto	l2027
  6438  0030B0                     l4644:
  6439  0030B0  4A08               	infsnz	strncmp@l^0,f,c
  6440  0030B2  2A09               	incf	(strncmp@l+1)^0,f,c
  6441  0030B4  4A0A               	infsnz	strncmp@r^0,f,c
  6442  0030B6  2A0B               	incf	(strncmp@r+1)^0,f,c
  6443  0030B8  0605               	decf	strncmp@n^0,f,c
  6444  0030BA  A0D8               	btfss	status,0,c
  6445  0030BC  0606               	decf	(strncmp@n+1)^0,f,c
  6446  0030BE                     l4646:
  6447  0030BE  C008  FFF6         	movff	strncmp@l,tblptrl
  6448  0030C2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6449  0030C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6450  0030C6  6AF8               	clrf	tblptru,c
  6451  0030C8                     	endif
  6452  0030C8                     	if	0	;tblptru may be non-zero
  6453  0030C8                     	endif
  6454  0030C8  0008               	tblrd		*
  6455  0030CA  50F5               	movf	tablat,w,c
  6456  0030CC  0900               	iorlw	0
  6457  0030CE  B4D8               	btfsc	status,2,c
  6458  0030D0  EF6C  F018         	goto	u3531
  6459  0030D4  EF6E  F018         	goto	u3530
  6460  0030D8                     u3531:
  6461  0030D8  EF9D  F018         	goto	l4654
  6462  0030DC                     u3530:
  6463  0030DC  C00A  FFF6         	movff	strncmp@r,tblptrl
  6464  0030E0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6465  0030E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6466  0030E4  6AF8               	clrf	tblptru,c
  6467  0030E6                     	endif
  6468  0030E6                     	if	0	;tblptru may be non-zero
  6469  0030E6                     	endif
  6470  0030E6  0008               	tblrd		*
  6471  0030E8  50F5               	movf	tablat,w,c
  6472  0030EA  0900               	iorlw	0
  6473  0030EC  B4D8               	btfsc	status,2,c
  6474  0030EE  EF7B  F018         	goto	u3541
  6475  0030F2  EF7D  F018         	goto	u3540
  6476  0030F6                     u3541:
  6477  0030F6  EF9D  F018         	goto	l4654
  6478  0030FA                     u3540:
  6479  0030FA  5005               	movf	strncmp@n^0,w,c
  6480  0030FC  1006               	iorwf	(strncmp@n+1)^0,w,c
  6481  0030FE  B4D8               	btfsc	status,2,c
  6482  003100  EF84  F018         	goto	u3551
  6483  003104  EF86  F018         	goto	u3550
  6484  003108                     u3551:
  6485  003108  EF9D  F018         	goto	l4654
  6486  00310C                     u3550:
  6487  00310C  C008  FFF6         	movff	strncmp@l,tblptrl
  6488  003110  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6489  003114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6490  003114  6AF8               	clrf	tblptru,c
  6491  003116                     	endif
  6492  003116                     	if	0	;tblptru may be non-zero
  6493  003116                     	endif
  6494  003116  0008               	tblrd		*
  6495  003118  CFF5 F007          	movff	tablat,??_strncmp
  6496  00311C  C00A  FFF6         	movff	strncmp@r,tblptrl
  6497  003120  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6498  003124                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6499  003124  6AF8               	clrf	tblptru,c
  6500  003126                     	endif
  6501  003126                     	if	0	;tblptru may be non-zero
  6502  003126                     	endif
  6503  003126  0008               	tblrd		*
  6504  003128  50F5               	movf	tablat,w,c
  6505  00312A  1807               	xorwf	??_strncmp^0,w,c
  6506  00312C  B4D8               	btfsc	status,2,c
  6507  00312E  EF9B  F018         	goto	u3561
  6508  003132  EF9D  F018         	goto	u3560
  6509  003136                     u3561:
  6510  003136  EF58  F018         	goto	l4644
  6511  00313A                     u3560:
  6512  00313A                     l4654:
  6513  00313A  C008  FFF6         	movff	strncmp@l,tblptrl
  6514  00313E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6515  003142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6516  003142  6AF8               	clrf	tblptru,c
  6517  003144                     	endif
  6518  003144                     	if	0	;tblptru may be non-zero
  6519  003144                     	endif
  6520  003144  0008               	tblrd		*
  6521  003146  CFF5 F007          	movff	tablat,??_strncmp
  6522  00314A  C00A  FFF6         	movff	strncmp@r,tblptrl
  6523  00314E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6524  003152                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6525  003152  6AF8               	clrf	tblptru,c
  6526  003154                     	endif
  6527  003154                     	if	0	;tblptru may be non-zero
  6528  003154                     	endif
  6529  003154  0008               	tblrd		*
  6530  003156  50F5               	movf	tablat,w,c
  6531  003158  5C07               	subwf	??_strncmp^0,w,c
  6532  00315A  6E01               	movwf	?_strncmp^0,c
  6533  00315C  6A02               	clrf	(?_strncmp+1)^0,c
  6534  00315E  A0D8               	btfss	status,0,c
  6535  003160  0602               	decf	(?_strncmp+1)^0,f,c
  6536  003162                     l2027:
  6537  003162  0012               	return		;funcret
  6538  003164                     __end_of_strncmp:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _dtoa *****************
  6542 ;; Defined at:
  6543 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6546 ;;		 -> sprintf@f(11), 
  6547 ;;  d               8   29[COMRAM] long long 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  n               8   53[COMRAM] long long 
  6550 ;;  i               2   61[COMRAM] int 
  6551 ;;  s               2   51[COMRAM] int 
  6552 ;;  w               2   49[COMRAM] int 
  6553 ;;  p               2   47[COMRAM] int 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  2   27[COMRAM] int 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6563 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;Total ram usage:       36 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 4
  6570 ;; This function calls:
  6571 ;;		___aodiv
  6572 ;;		___aomod
  6573 ;;		_abs
  6574 ;;		_pad
  6575 ;; This function is called by:
  6576 ;;		_vfpfcnvrt
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text31
  6581  001BC8                     __ptext31:
  6582                           	callstack 0
  6583  001BC8                     _dtoa:
  6584                           	callstack 22
  6585  001BC8                     
  6586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6587  001BC8  C01E  F036         	movff	dtoa@d,dtoa@n
  6588  001BCC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6589  001BD0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6590  001BD4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6591  001BD8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6592  001BDC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6593  001BE0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6594  001BE4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6595  001BE8                     
  6596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6597  001BE8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6598  001BEA  EFF9  F00D         	goto	u3301
  6599  001BEE  EFFC  F00D         	goto	u3300
  6600  001BF2                     u3301:
  6601  001BF2  0E01               	movlw	1
  6602  001BF4  EFFD  F00D         	goto	u3310
  6603  001BF8                     u3300:
  6604  001BF8  0E00               	movlw	0
  6605  001BFA                     u3310:
  6606  001BFA  6E34               	movwf	dtoa@s^0,c
  6607  001BFC  6A35               	clrf	(dtoa@s+1)^0,c
  6608                           
  6609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6610  001BFE  5034               	movf	dtoa@s^0,w,c
  6611  001C00  1035               	iorwf	(dtoa@s+1)^0,w,c
  6612  001C02  B4D8               	btfsc	status,2,c
  6613  001C04  EF06  F00E         	goto	u3321
  6614  001C08  EF08  F00E         	goto	u3320
  6615  001C0C                     u3321:
  6616  001C0C  EF18  F00E         	goto	l4546
  6617  001C10                     u3320:
  6618  001C10                     
  6619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6620  001C10  1E3D               	comf	(dtoa@n+7)^0,f,c
  6621  001C12  1E3C               	comf	(dtoa@n+6)^0,f,c
  6622  001C14  1E3B               	comf	(dtoa@n+5)^0,f,c
  6623  001C16  1E3A               	comf	(dtoa@n+4)^0,f,c
  6624  001C18  1E39               	comf	(dtoa@n+3)^0,f,c
  6625  001C1A  1E38               	comf	(dtoa@n+2)^0,f,c
  6626  001C1C  1E37               	comf	(dtoa@n+1)^0,f,c
  6627  001C1E  6C36               	negf	dtoa@n^0,c
  6628  001C20  0E00               	movlw	0
  6629  001C22  2237               	addwfc	(dtoa@n+1)^0,f,c
  6630  001C24  2238               	addwfc	(dtoa@n+2)^0,f,c
  6631  001C26  2239               	addwfc	(dtoa@n+3)^0,f,c
  6632  001C28  223A               	addwfc	(dtoa@n+4)^0,f,c
  6633  001C2A  223B               	addwfc	(dtoa@n+5)^0,f,c
  6634  001C2C  223C               	addwfc	(dtoa@n+6)^0,f,c
  6635  001C2E  223D               	addwfc	(dtoa@n+7)^0,f,c
  6636  001C30                     l4546:
  6637                           
  6638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6639  001C30  0100               	movlb	0	; () banked
  6640  001C32  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  6641  001C34  EF1E  F00E         	goto	u3331
  6642  001C38  EF20  F00E         	goto	u3330
  6643  001C3C                     u3331:
  6644  001C3C  EF21  F00E         	goto	l4550
  6645  001C40                     u3330:
  6646  001C40                     
  6647                           ; BSR set to: 0
  6648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6649  001C40  93E8               	bcf	_flags& (0+255),1,b
  6650  001C42                     l4550:
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6654  001C42  BFE7               	btfsc	(_prec+1)& (0+255),7,b
  6655  001C44  EF2E  F00E         	goto	u3340
  6656  001C48  51E7               	movf	(_prec+1)& (0+255),w,b
  6657  001C4A  E106               	bnz	u3341
  6658  001C4C  05E6               	decf	_prec& (0+255),w,b
  6659  001C4E  B0D8               	btfsc	status,0,c
  6660  001C50  EF2C  F00E         	goto	u3341
  6661  001C54  EF2E  F00E         	goto	u3340
  6662  001C58                     u3341:
  6663  001C58  EF34  F00E         	goto	l1705
  6664  001C5C                     u3340:
  6665  001C5C                     
  6666                           ; BSR set to: 0
  6667  001C5C  0E00               	movlw	0
  6668  001C5E  6E31               	movwf	(dtoa@p+1)^0,c
  6669  001C60  0E01               	movlw	1
  6670  001C62  6E30               	movwf	dtoa@p^0,c
  6671  001C64  EF38  F00E         	goto	l1707
  6672  001C68                     l1705:
  6673                           
  6674                           ; BSR set to: 0
  6675  001C68  C0E6  F030         	movff	_prec,dtoa@p
  6676  001C6C  C0E7  F031         	movff	_prec+1,dtoa@p+1
  6677  001C70                     l1707:
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6681  001C70  C0E4  F032         	movff	_width,dtoa@w
  6682  001C74  C0E5  F033         	movff	_width+1,dtoa@w+1
  6683  001C78                     
  6684                           ; BSR set to: 0
  6685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6686  001C78  5034               	movf	dtoa@s^0,w,c
  6687  001C7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6688  001C7C  A4D8               	btfss	status,2,c
  6689  001C7E  EF43  F00E         	goto	u3351
  6690  001C82  EF45  F00E         	goto	u3350
  6691  001C86                     u3351:
  6692  001C86  EF4C  F00E         	goto	l4558
  6693  001C8A                     u3350:
  6694  001C8A                     
  6695                           ; BSR set to: 0
  6696  001C8A  A5E8               	btfss	_flags& (0+255),2,b
  6697  001C8C  EF4A  F00E         	goto	u3361
  6698  001C90  EF4C  F00E         	goto	u3360
  6699  001C94                     u3361:
  6700  001C94  EF4F  F00E         	goto	l4560
  6701  001C98                     u3360:
  6702  001C98                     l4558:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  6706  001C98  0632               	decf	dtoa@w^0,f,c
  6707  001C9A  A0D8               	btfss	status,0,c
  6708  001C9C  0633               	decf	(dtoa@w+1)^0,f,c
  6709  001C9E                     l4560:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6713  001C9E  0E00               	movlw	0
  6714  001CA0  6E3F               	movwf	(dtoa@i+1)^0,c
  6715  001CA2  0E1F               	movlw	31
  6716  001CA4  6E3E               	movwf	dtoa@i^0,c
  6717  001CA6                     
  6718                           ; BSR set to: 0
  6719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6720  001CA6  0E00               	movlw	0
  6721  001CA8  0101               	movlb	1	; () banked
  6722  001CAA  6F95               	movwf	(_dbuf+31)& (0+255),b
  6723                           
  6724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6725  001CAC  EFD4  F00E         	goto	l4574
  6726  001CB0                     l4564:
  6727                           
  6728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  6729  001CB0  063E               	decf	dtoa@i^0,f,c
  6730  001CB2  A0D8               	btfss	status,0,c
  6731  001CB4  063F               	decf	(dtoa@i+1)^0,f,c
  6732  001CB6                     
  6733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6734  001CB6  0E76               	movlw	low _dbuf
  6735  001CB8  243E               	addwf	dtoa@i^0,w,c
  6736  001CBA  6ED9               	movwf	fsr2l,c
  6737  001CBC  0E01               	movlw	high _dbuf
  6738  001CBE  203F               	addwfc	(dtoa@i+1)^0,w,c
  6739  001CC0  6EDA               	movwf	fsr2h,c
  6740  001CC2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6741  001CC6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6742  001CCA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6743  001CCE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6744  001CD2  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6745  001CD6  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6746  001CDA  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6747  001CDE  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6748  001CE2  0E0A               	movlw	10
  6749  001CE4  6E09               	movwf	___aomod@divisor^0,c
  6750  001CE6  0E00               	movlw	0
  6751  001CE8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6752  001CEA  0E00               	movlw	0
  6753  001CEC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6754  001CEE  0E00               	movlw	0
  6755  001CF0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6756  001CF2  0E00               	movlw	0
  6757  001CF4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6758  001CF6  0E00               	movlw	0
  6759  001CF8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6760  001CFA  0E00               	movlw	0
  6761  001CFC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6762  001CFE  0E00               	movlw	0
  6763  001D00  6E10               	movwf	(___aomod@divisor+7)^0,c
  6764  001D02  EC96  F013         	call	___aomod	;wreg free
  6765  001D06  C001  F026         	movff	?___aomod,??_dtoa
  6766  001D0A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6767  001D0E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6768  001D12  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6769  001D16  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6770  001D1A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6771  001D1E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6772  001D22  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6773  001D26  C026  F013         	movff	??_dtoa,abs@a
  6774  001D2A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6775  001D2E  EC6A  F01F         	call	_abs	;wreg free
  6776  001D32  5013               	movf	?_abs^0,w,c
  6777  001D34  0F30               	addlw	48
  6778  001D36  6EDF               	movwf	indf2,c
  6779  001D38                     
  6780                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  6781  001D38  0630               	decf	dtoa@p^0,f,c
  6782  001D3A  A0D8               	btfss	status,0,c
  6783  001D3C  0631               	decf	(dtoa@p+1)^0,f,c
  6784  001D3E                     
  6785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  6786  001D3E  0632               	decf	dtoa@w^0,f,c
  6787  001D40  A0D8               	btfss	status,0,c
  6788  001D42  0633               	decf	(dtoa@w+1)^0,f,c
  6789  001D44                     
  6790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6791  001D44  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6792  001D48  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6793  001D4C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6794  001D50  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6795  001D54  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6796  001D58  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6797  001D5C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6798  001D60  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6799  001D64  0E0A               	movlw	10
  6800  001D66  6E09               	movwf	___aodiv@divisor^0,c
  6801  001D68  0E00               	movlw	0
  6802  001D6A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6803  001D6C  0E00               	movlw	0
  6804  001D6E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6805  001D70  0E00               	movlw	0
  6806  001D72  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6807  001D74  0E00               	movlw	0
  6808  001D76  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6809  001D78  0E00               	movlw	0
  6810  001D7A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6811  001D7C  0E00               	movlw	0
  6812  001D7E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6813  001D80  0E00               	movlw	0
  6814  001D82  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6815  001D84  EC17  F012         	call	___aodiv	;wreg free
  6816  001D88  C001  F036         	movff	?___aodiv,dtoa@n
  6817  001D8C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6818  001D90  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6819  001D94  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6820  001D98  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6821  001D9C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6822  001DA0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6823  001DA4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6824  001DA8                     l4574:
  6825                           
  6826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6827  001DA8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6828  001DAA  EFDF  F00E         	goto	u3371
  6829  001DAE  503F               	movf	(dtoa@i+1)^0,w,c
  6830  001DB0  E108               	bnz	u3370
  6831  001DB2  043E               	decf	dtoa@i^0,w,c
  6832  001DB4  A0D8               	btfss	status,0,c
  6833  001DB6  EFDF  F00E         	goto	u3371
  6834  001DBA  EFE1  F00E         	goto	u3370
  6835  001DBE                     u3371:
  6836  001DBE  EF12  F00F         	goto	l4584
  6837  001DC2                     u3370:
  6838  001DC2  5036               	movf	dtoa@n^0,w,c
  6839  001DC4  1037               	iorwf	(dtoa@n+1)^0,w,c
  6840  001DC6  1038               	iorwf	(dtoa@n+2)^0,w,c
  6841  001DC8  1039               	iorwf	(dtoa@n+3)^0,w,c
  6842  001DCA  103A               	iorwf	(dtoa@n+4)^0,w,c
  6843  001DCC  103B               	iorwf	(dtoa@n+5)^0,w,c
  6844  001DCE  103C               	iorwf	(dtoa@n+6)^0,w,c
  6845  001DD0  103D               	iorwf	(dtoa@n+7)^0,w,c
  6846  001DD2  A4D8               	btfss	status,2,c
  6847  001DD4  EFEE  F00E         	goto	u3381
  6848  001DD8  EFF0  F00E         	goto	u3380
  6849  001DDC                     u3381:
  6850  001DDC  EF58  F00E         	goto	l4564
  6851  001DE0                     u3380:
  6852  001DE0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6853  001DE2  EFFD  F00E         	goto	u3390
  6854  001DE6  5031               	movf	(dtoa@p+1)^0,w,c
  6855  001DE8  E106               	bnz	u3391
  6856  001DEA  0430               	decf	dtoa@p^0,w,c
  6857  001DEC  B0D8               	btfsc	status,0,c
  6858  001DEE  EFFB  F00E         	goto	u3391
  6859  001DF2  EFFD  F00E         	goto	u3390
  6860  001DF6                     u3391:
  6861  001DF6  EF58  F00E         	goto	l4564
  6862  001DFA                     u3390:
  6863  001DFA  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6864  001DFC  EF08  F00F         	goto	u3401
  6865  001E00  5033               	movf	(dtoa@w+1)^0,w,c
  6866  001E02  E108               	bnz	u3400
  6867  001E04  0432               	decf	dtoa@w^0,w,c
  6868  001E06  A0D8               	btfss	status,0,c
  6869  001E08  EF08  F00F         	goto	u3401
  6870  001E0C  EF0A  F00F         	goto	u3400
  6871  001E10                     u3401:
  6872  001E10  EF12  F00F         	goto	l4584
  6873  001E14                     u3400:
  6874  001E14  0100               	movlb	0	; () banked
  6875  001E16  B3E8               	btfsc	_flags& (0+255),1,b
  6876  001E18  EF10  F00F         	goto	u3411
  6877  001E1C  EF12  F00F         	goto	u3410
  6878  001E20                     u3411:
  6879  001E20  EF58  F00E         	goto	l4564
  6880  001E24                     u3410:
  6881  001E24                     l4584:
  6882                           
  6883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6884  001E24  5034               	movf	dtoa@s^0,w,c
  6885  001E26  1035               	iorwf	(dtoa@s+1)^0,w,c
  6886  001E28  A4D8               	btfss	status,2,c
  6887  001E2A  EF19  F00F         	goto	u3421
  6888  001E2E  EF1B  F00F         	goto	u3420
  6889  001E32                     u3421:
  6890  001E32  EF23  F00F         	goto	l4588
  6891  001E36                     u3420:
  6892  001E36  0100               	movlb	0	; () banked
  6893  001E38  A5E8               	btfss	_flags& (0+255),2,b
  6894  001E3A  EF21  F00F         	goto	u3431
  6895  001E3E  EF23  F00F         	goto	u3430
  6896  001E42                     u3431:
  6897  001E42  EF41  F00F         	goto	l4598
  6898  001E46                     u3430:
  6899  001E46                     l4588:
  6900                           
  6901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  6902  001E46  063E               	decf	dtoa@i^0,f,c
  6903  001E48  A0D8               	btfss	status,0,c
  6904  001E4A  063F               	decf	(dtoa@i+1)^0,f,c
  6905  001E4C                     
  6906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6907  001E4C  5034               	movf	dtoa@s^0,w,c
  6908  001E4E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6909  001E50  A4D8               	btfss	status,2,c
  6910  001E52  EF2D  F00F         	goto	u3441
  6911  001E56  EF2F  F00F         	goto	u3440
  6912  001E5A                     u3441:
  6913  001E5A  EF35  F00F         	goto	l4594
  6914  001E5E                     u3440:
  6915  001E5E  0E00               	movlw	0
  6916  001E60  6E2F               	movwf	(_dtoa$2498+1)^0,c
  6917  001E62  0E2B               	movlw	43
  6918  001E64  6E2E               	movwf	_dtoa$2498^0,c
  6919  001E66  EF39  F00F         	goto	l4596
  6920  001E6A                     l4594:
  6921  001E6A  0E00               	movlw	0
  6922  001E6C  6E2F               	movwf	(_dtoa$2498+1)^0,c
  6923  001E6E  0E2D               	movlw	45
  6924  001E70  6E2E               	movwf	_dtoa$2498^0,c
  6925  001E72                     l4596:
  6926  001E72  0E76               	movlw	low _dbuf
  6927  001E74  243E               	addwf	dtoa@i^0,w,c
  6928  001E76  6ED9               	movwf	fsr2l,c
  6929  001E78  0E01               	movlw	high _dbuf
  6930  001E7A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6931  001E7C  6EDA               	movwf	fsr2h,c
  6932  001E7E  C02E  FFDF         	movff	_dtoa$2498,indf2
  6933  001E82                     l4598:
  6934                           
  6935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6936  001E82  C01C  F011         	movff	dtoa@fp,pad@fp
  6937  001E86  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6938  001E8A  0E76               	movlw	low _dbuf
  6939  001E8C  243E               	addwf	dtoa@i^0,w,c
  6940  001E8E  6E13               	movwf	pad@buf^0,c
  6941  001E90  0E01               	movlw	high _dbuf
  6942  001E92  203F               	addwfc	(dtoa@i+1)^0,w,c
  6943  001E94  6E14               	movwf	(pad@buf+1)^0,c
  6944  001E96  C032  F015         	movff	dtoa@w,pad@p
  6945  001E9A  C033  F016         	movff	dtoa@w+1,pad@p+1
  6946  001E9E  EC7F  F019         	call	_pad	;wreg free
  6947  001EA2  C011  F01C         	movff	?_pad,?_dtoa
  6948  001EA6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6949  001EAA  0012               	return		;funcret
  6950  001EAC                     __end_of_dtoa:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _pad *****************
  6954 ;; Defined at:
  6955 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6958 ;;		 -> sprintf@f(11), 
  6959 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6960 ;;		 -> dbuf(32), 
  6961 ;;  p               2   20[COMRAM] int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  w               2   25[COMRAM] int 
  6964 ;;  i               2   23[COMRAM] int 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  2   16[COMRAM] int 
  6967 ;; Registers used:
  6968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6974 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;Total ram usage:       11 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; Hardware stack levels required when called: 3
  6981 ;; This function calls:
  6982 ;;		_fputc
  6983 ;;		_fputs
  6984 ;;		_strlen
  6985 ;; This function is called by:
  6986 ;;		_dtoa
  6987 ;;		_utoa
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text32
  6992  0032FE                     __ptext32:
  6993                           	callstack 0
  6994  0032FE                     _pad:
  6995                           	callstack 22
  6996  0032FE                     
  6997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6998  0032FE  0100               	movlb	0	; () banked
  6999  003300  A1E8               	btfss	_flags& (0+255),0,b
  7000  003302  EF85  F019         	goto	u3191
  7001  003306  EF87  F019         	goto	u3190
  7002  00330A                     u3191:
  7003  00330A  EF91  F019         	goto	l4470
  7004  00330E                     u3190:
  7005  00330E                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7008  00330E  C013  F00A         	movff	pad@buf,fputs@s
  7009  003312  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7010  003316  C011  F00C         	movff	pad@fp,fputs@fp
  7011  00331A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7012  00331E  EC48  F01F         	call	_fputs	;wreg free
  7013  003322                     l4470:
  7014                           
  7015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7016  003322  BE16               	btfsc	(pad@p+1)^0,7,c
  7017  003324  EF96  F019         	goto	u3201
  7018  003328  EF98  F019         	goto	u3200
  7019  00332C                     u3201:
  7020  00332C  EF9E  F019         	goto	l4474
  7021  003330                     u3200:
  7022  003330  C015  F01A         	movff	pad@p,pad@w
  7023  003334  C016  F01B         	movff	pad@p+1,pad@w+1
  7024  003338  EFA2  F019         	goto	l1694
  7025  00333C                     l4474:
  7026  00333C  0E00               	movlw	0
  7027  00333E  6E1B               	movwf	(pad@w+1)^0,c
  7028  003340  0E00               	movlw	0
  7029  003342  6E1A               	movwf	pad@w^0,c
  7030  003344                     l1694:
  7031                           
  7032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7033  003344  0E00               	movlw	0
  7034  003346  6E19               	movwf	(pad@i+1)^0,c
  7035  003348  0E00               	movlw	0
  7036  00334A  6E18               	movwf	pad@i^0,c
  7037                           
  7038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7039  00334C  EFB4  F019         	goto	l4480
  7040  003350                     l4476:
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7043  003350  0E00               	movlw	0
  7044  003352  6E02               	movwf	(fputc@c+1)^0,c
  7045  003354  0E20               	movlw	32
  7046  003356  6E01               	movwf	fputc@c^0,c
  7047  003358  C011  F003         	movff	pad@fp,fputc@fp
  7048  00335C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7049  003360  EC1A  F019         	call	_fputc	;wreg free
  7050  003364                     
  7051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7052  003364  4A18               	infsnz	pad@i^0,f,c
  7053  003366  2A19               	incf	(pad@i+1)^0,f,c
  7054  003368                     l4480:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7057  003368  501A               	movf	pad@w^0,w,c
  7058  00336A  5C18               	subwf	pad@i^0,w,c
  7059  00336C  5019               	movf	(pad@i+1)^0,w,c
  7060  00336E  0A80               	xorlw	128
  7061  003370  6E17               	movwf	??_pad^0,c
  7062  003372  501B               	movf	(pad@w+1)^0,w,c
  7063  003374  0A80               	xorlw	128
  7064  003376  5817               	subwfb	??_pad^0,w,c
  7065  003378  A0D8               	btfss	status,0,c
  7066  00337A  EFC1  F019         	goto	u3211
  7067  00337E  EFC3  F019         	goto	u3210
  7068  003382                     u3211:
  7069  003382  EFA8  F019         	goto	l4476
  7070  003386                     u3210:
  7071  003386                     
  7072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7073  003386  0100               	movlb	0	; () banked
  7074  003388  B1E8               	btfsc	_flags& (0+255),0,b
  7075  00338A  EFC9  F019         	goto	u3221
  7076  00338E  EFCB  F019         	goto	u3220
  7077  003392                     u3221:
  7078  003392  EFD5  F019         	goto	l4484
  7079  003396                     u3220:
  7080  003396                     
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7083  003396  C013  F00A         	movff	pad@buf,fputs@s
  7084  00339A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7085  00339E  C011  F00C         	movff	pad@fp,fputs@fp
  7086  0033A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7087  0033A6  EC48  F01F         	call	_fputs	;wreg free
  7088  0033AA                     l4484:
  7089                           
  7090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7091  0033AA  C013  F001         	movff	pad@buf,strlen@s
  7092  0033AE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7093  0033B2  ECDF  F01F         	call	_strlen	;wreg free
  7094  0033B6  501A               	movf	pad@w^0,w,c
  7095  0033B8  2401               	addwf	?_strlen^0,w,c
  7096  0033BA  6E11               	movwf	?_pad^0,c
  7097  0033BC  501B               	movf	(pad@w+1)^0,w,c
  7098  0033BE  2002               	addwfc	(?_strlen+1)^0,w,c
  7099  0033C0  6E12               	movwf	(?_pad+1)^0,c
  7100  0033C2  0012               	return		;funcret
  7101  0033C4                     __end_of_pad:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _strlen *****************
  7105 ;; Defined at:
  7106 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7109 ;;		 -> dbuf(32), arr(11), 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7112 ;;		 -> dbuf(32), arr(11), 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  2    0[COMRAM] unsigned int 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;Total ram usage:        4 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;;		_pad
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text33
  7137  003FBE                     __ptext33:
  7138                           	callstack 0
  7139  003FBE                     _strlen:
  7140                           	callstack 30
  7141  003FBE  C001  F003         	movff	strlen@s,strlen@a
  7142  003FC2  C002  F004         	movff	strlen@s+1,strlen@a+1
  7143  003FC6  EFE7  F01F         	goto	l4310
  7144  003FCA                     l4308:
  7145  003FCA  4A01               	infsnz	strlen@s^0,f,c
  7146  003FCC  2A02               	incf	(strlen@s+1)^0,f,c
  7147  003FCE                     l4310:
  7148  003FCE  C001  FFD9         	movff	strlen@s,fsr2l
  7149  003FD2  C002  FFDA         	movff	strlen@s+1,fsr2h
  7150  003FD6  50DF               	movf	indf2,w,c
  7151  003FD8  A4D8               	btfss	status,2,c
  7152  003FDA  EFF1  F01F         	goto	u2931
  7153  003FDE  EFF3  F01F         	goto	u2930
  7154  003FE2                     u2931:
  7155  003FE2  EFE5  F01F         	goto	l4308
  7156  003FE6                     u2930:
  7157  003FE6  5003               	movf	strlen@a^0,w,c
  7158  003FE8  5C01               	subwf	strlen@s^0,w,c
  7159  003FEA  6E01               	movwf	?_strlen^0,c
  7160  003FEC  5004               	movf	(strlen@a+1)^0,w,c
  7161  003FEE  5802               	subwfb	(strlen@s+1)^0,w,c
  7162  003FF0  6E02               	movwf	(?_strlen+1)^0,c
  7163  003FF2  0012               	return		;funcret
  7164  003FF4                     __end_of_strlen:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function _fputs *****************
  7168 ;; Defined at:
  7169 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7172 ;;		 -> dbuf(32), 
  7173 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7174 ;;		 -> sprintf@f(11), 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  i               2   14[COMRAM] int 
  7177 ;;  c               1   13[COMRAM] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  2    9[COMRAM] int 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;Total ram usage:        7 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 2
  7194 ;; This function calls:
  7195 ;;		_fputc
  7196 ;; This function is called by:
  7197 ;;		_pad
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text34
  7202  003E90                     __ptext34:
  7203                           	callstack 0
  7204  003E90                     _fputs:
  7205                           	callstack 22
  7206  003E90  0E00               	movlw	0
  7207  003E92  6E10               	movwf	(fputs@i+1)^0,c
  7208  003E94  0E00               	movlw	0
  7209  003E96  6E0F               	movwf	fputs@i^0,c
  7210  003E98  EF59  F01F         	goto	l4322
  7211  003E9C                     l4318:
  7212  003E9C  C00E  F001         	movff	fputs@c,fputc@c
  7213  003EA0  6A02               	clrf	(fputc@c+1)^0,c
  7214  003EA2  C00C  F003         	movff	fputs@fp,fputc@fp
  7215  003EA6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7216  003EAA  EC1A  F019         	call	_fputc	;wreg free
  7217  003EAE  4A0F               	infsnz	fputs@i^0,f,c
  7218  003EB0  2A10               	incf	(fputs@i+1)^0,f,c
  7219  003EB2                     l4322:
  7220  003EB2  500F               	movf	fputs@i^0,w,c
  7221  003EB4  240A               	addwf	fputs@s^0,w,c
  7222  003EB6  6ED9               	movwf	fsr2l,c
  7223  003EB8  5010               	movf	(fputs@i+1)^0,w,c
  7224  003EBA  200B               	addwfc	(fputs@s+1)^0,w,c
  7225  003EBC  6EDA               	movwf	fsr2h,c
  7226  003EBE  50DF               	movf	indf2,w,c
  7227  003EC0  6E0E               	movwf	fputs@c^0,c
  7228  003EC2  500E               	movf	fputs@c^0,w,c
  7229  003EC4  A4D8               	btfss	status,2,c
  7230  003EC6  EF67  F01F         	goto	u2941
  7231  003ECA  EF69  F01F         	goto	u2940
  7232  003ECE                     u2941:
  7233  003ECE  EF4E  F01F         	goto	l4318
  7234  003ED2                     u2940:
  7235  003ED2  0012               	return		;funcret
  7236  003ED4                     __end_of_fputs:
  7237                           	callstack 0
  7238                           
  7239 ;; *************** function _fputc *****************
  7240 ;; Defined at:
  7241 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  c               2    0[COMRAM] int 
  7244 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7245 ;;		 -> sprintf@f(11), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;		None
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  2    0[COMRAM] int 
  7250 ;; Registers used:
  7251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;Total ram usage:        9 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 1
  7264 ;; This function calls:
  7265 ;;		_putch
  7266 ;; This function is called by:
  7267 ;;		_pad
  7268 ;;		_vfpfcnvrt
  7269 ;;		_fputs
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text35
  7274  003234                     __ptext35:
  7275                           	callstack 0
  7276  003234                     _fputc:
  7277                           	callstack 22
  7278  003234  5003               	movf	fputc@fp^0,w,c
  7279  003236  1004               	iorwf	(fputc@fp+1)^0,w,c
  7280  003238  B4D8               	btfsc	status,2,c
  7281  00323A  EF21  F019         	goto	u2891
  7282  00323E  EF23  F019         	goto	u2890
  7283  003242                     u2891:
  7284  003242  EF2C  F019         	goto	l4296
  7285  003246                     u2890:
  7286  003246  5003               	movf	fputc@fp^0,w,c
  7287  003248  1004               	iorwf	(fputc@fp+1)^0,w,c
  7288  00324A  A4D8               	btfss	status,2,c
  7289  00324C  EF2A  F019         	goto	u2901
  7290  003250  EF2C  F019         	goto	u2900
  7291  003254                     u2901:
  7292  003254  EF31  F019         	goto	l4298
  7293  003258                     u2900:
  7294  003258                     l4296:
  7295  003258  5001               	movf	fputc@c^0,w,c
  7296  00325A  EC1E  F020         	call	_putch
  7297  00325E  EF7E  F019         	goto	l1778
  7298  003262                     l4298:
  7299  003262  EE20 F009          	lfsr	2,9
  7300  003266  5003               	movf	fputc@fp^0,w,c
  7301  003268  26D9               	addwf	fsr2l,f,c
  7302  00326A  5004               	movf	(fputc@fp+1)^0,w,c
  7303  00326C  22DA               	addwfc	fsr2h,f,c
  7304  00326E  50DE               	movf	postinc2,w,c
  7305  003270  10DE               	iorwf	postinc2,w,c
  7306  003272  B4D8               	btfsc	status,2,c
  7307  003274  EF3E  F019         	goto	u2911
  7308  003278  EF40  F019         	goto	u2910
  7309  00327C                     u2911:
  7310  00327C  EF5B  F019         	goto	l4302
  7311  003280                     u2910:
  7312  003280  EE20 F009          	lfsr	2,9
  7313  003284  5003               	movf	fputc@fp^0,w,c
  7314  003286  26D9               	addwf	fsr2l,f,c
  7315  003288  5004               	movf	(fputc@fp+1)^0,w,c
  7316  00328A  22DA               	addwfc	fsr2h,f,c
  7317  00328C  EE10 F003          	lfsr	1,3
  7318  003290  5003               	movf	fputc@fp^0,w,c
  7319  003292  26E1               	addwf	fsr1l,f,c
  7320  003294  5004               	movf	(fputc@fp+1)^0,w,c
  7321  003296  22E2               	addwfc	fsr1h,f,c
  7322  003298  50DE               	movf	postinc2,w,c
  7323  00329A  5CE6               	subwf	postinc1,w,c
  7324  00329C  50E6               	movf	postinc1,w,c
  7325  00329E  0A80               	xorlw	128
  7326  0032A0  6E09               	movwf	(??_fputc+4)^0,c
  7327  0032A2  50DE               	movf	postinc2,w,c
  7328  0032A4  0A80               	xorlw	128
  7329  0032A6  5809               	subwfb	(??_fputc+4)^0,w,c
  7330  0032A8  B0D8               	btfsc	status,0,c
  7331  0032AA  EF59  F019         	goto	u2921
  7332  0032AE  EF5B  F019         	goto	u2920
  7333  0032B2                     u2921:
  7334  0032B2  EF7E  F019         	goto	l1778
  7335  0032B6                     u2920:
  7336  0032B6                     l4302:
  7337  0032B6  EE20 F003          	lfsr	2,3
  7338  0032BA  5003               	movf	fputc@fp^0,w,c
  7339  0032BC  26D9               	addwf	fsr2l,f,c
  7340  0032BE  5004               	movf	(fputc@fp+1)^0,w,c
  7341  0032C0  22DA               	addwfc	fsr2h,f,c
  7342  0032C2  CFDE F005          	movff	postinc2,??_fputc
  7343  0032C6  CFDD F006          	movff	postdec2,??_fputc+1
  7344  0032CA  C003  FFD9         	movff	fputc@fp,fsr2l
  7345  0032CE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7346  0032D2  CFDE F007          	movff	postinc2,??_fputc+2
  7347  0032D6  CFDD F008          	movff	postdec2,??_fputc+3
  7348  0032DA  5005               	movf	??_fputc^0,w,c
  7349  0032DC  2407               	addwf	(??_fputc+2)^0,w,c
  7350  0032DE  6ED9               	movwf	fsr2l,c
  7351  0032E0  5006               	movf	(??_fputc+1)^0,w,c
  7352  0032E2  2008               	addwfc	(??_fputc+3)^0,w,c
  7353  0032E4  6EDA               	movwf	fsr2h,c
  7354  0032E6  C001  FFDF         	movff	fputc@c,indf2
  7355  0032EA  EE20 F003          	lfsr	2,3
  7356  0032EE  5003               	movf	fputc@fp^0,w,c
  7357  0032F0  26D9               	addwf	fsr2l,f,c
  7358  0032F2  5004               	movf	(fputc@fp+1)^0,w,c
  7359  0032F4  22DA               	addwfc	fsr2h,f,c
  7360  0032F6  2ADE               	incf	postinc2,f,c
  7361  0032F8  0E00               	movlw	0
  7362  0032FA  22DD               	addwfc	postdec2,f,c
  7363  0032FC                     l1778:
  7364  0032FC  0012               	return		;funcret
  7365  0032FE                     __end_of_fputc:
  7366                           	callstack 0
  7367                           
  7368 ;; *************** function _putch *****************
  7369 ;; Defined at:
  7370 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  c               1    wreg     unsigned char 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  c               1    0[COMRAM] unsigned char 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      void 
  7377 ;; Registers used:
  7378 ;;		wreg
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;Total ram usage:        0 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_fputc
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text36
  7398  00403C                     __ptext36:
  7399                           	callstack 0
  7400  00403C                     _putch:
  7401                           	callstack 22
  7402  00403C  0012               	return		;funcret
  7403  00403E                     __end_of_putch:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _abs *****************
  7407 ;; Defined at:
  7408 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  a               2   18[COMRAM] int 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  2   18[COMRAM] int 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;Total ram usage:        4 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_dtoa
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text37
  7436  003ED4                     __ptext37:
  7437                           	callstack 0
  7438  003ED4                     _abs:
  7439                           	callstack 25
  7440  003ED4  BE14               	btfsc	(abs@a+1)^0,7,c
  7441  003ED6  EF77  F01F         	goto	u3230
  7442  003EDA  5014               	movf	(abs@a+1)^0,w,c
  7443  003EDC  E106               	bnz	u3231
  7444  003EDE  0413               	decf	abs@a^0,w,c
  7445  003EE0  B0D8               	btfsc	status,0,c
  7446  003EE2  EF75  F01F         	goto	u3231
  7447  003EE6  EF77  F01F         	goto	u3230
  7448  003EEA                     u3231:
  7449  003EEA  EF85  F01F         	goto	l1763
  7450  003EEE                     u3230:
  7451  003EEE  C013  F015         	movff	abs@a,??_abs
  7452  003EF2  C014  F016         	movff	abs@a+1,??_abs+1
  7453  003EF6  1E15               	comf	??_abs^0,f,c
  7454  003EF8  1E16               	comf	(??_abs+1)^0,f,c
  7455  003EFA  4A15               	infsnz	??_abs^0,f,c
  7456  003EFC  2A16               	incf	(??_abs+1)^0,f,c
  7457  003EFE  C015  F013         	movff	??_abs,?_abs
  7458  003F02  C016  F014         	movff	??_abs+1,?_abs+1
  7459  003F06  EF89  F01F         	goto	l1766
  7460  003F0A                     l1763:
  7461  003F0A  C013  F013         	movff	abs@a,?_abs
  7462  003F0E  C014  F014         	movff	abs@a+1,?_abs+1
  7463  003F12                     l1766:
  7464  003F12  0012               	return		;funcret
  7465  003F14                     __end_of_abs:
  7466                           	callstack 0
  7467                           
  7468 ;; *************** function ___aomod *****************
  7469 ;; Defined at:
  7470 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  dividend        8    0[COMRAM] long long 
  7473 ;;  divisor         8    8[COMRAM] long long 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  sign            1   17[COMRAM] unsigned char 
  7476 ;;  counter         1   16[COMRAM] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  8    0[COMRAM] long long 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7486 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;Total ram usage:       18 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_dtoa
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text38
  7500  00272C                     __ptext38:
  7501                           	callstack 0
  7502  00272C                     ___aomod:
  7503                           	callstack 25
  7504  00272C  0E00               	movlw	0
  7505  00272E  6E12               	movwf	___aomod@sign^0,c
  7506  002730  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7507  002732  EF9F  F013         	goto	u3060
  7508  002736  EF9D  F013         	goto	u3061
  7509  00273A                     u3061:
  7510  00273A  EFB1  F013         	goto	l4400
  7511  00273E                     u3060:
  7512  00273E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7513  002740  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7514  002742  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7515  002744  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7516  002746  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7517  002748  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7518  00274A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7519  00274C  6C01               	negf	___aomod@dividend^0,c
  7520  00274E  0E00               	movlw	0
  7521  002750  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7522  002752  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7523  002754  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7524  002756  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7525  002758  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7526  00275A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7527  00275C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7528  00275E  0E01               	movlw	1
  7529  002760  6E12               	movwf	___aomod@sign^0,c
  7530  002762                     l4400:
  7531  002762  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7532  002764  EFB8  F013         	goto	u3070
  7533  002768  EFB6  F013         	goto	u3071
  7534  00276C                     u3071:
  7535  00276C  EFC8  F013         	goto	l4404
  7536  002770                     u3070:
  7537  002770  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7538  002772  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7539  002774  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7540  002776  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7541  002778  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7542  00277A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7543  00277C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7544  00277E  6C09               	negf	___aomod@divisor^0,c
  7545  002780  0E00               	movlw	0
  7546  002782  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7547  002784  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7548  002786  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7549  002788  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7550  00278A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7551  00278C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7552  00278E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7553  002790                     l4404:
  7554  002790  5009               	movf	___aomod@divisor^0,w,c
  7555  002792  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7556  002794  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7557  002796  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7558  002798  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7559  00279A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7560  00279C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7561  00279E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7562  0027A0  B4D8               	btfsc	status,2,c
  7563  0027A2  EFD5  F013         	goto	u3081
  7564  0027A6  EFD7  F013         	goto	u3080
  7565  0027AA                     u3081:
  7566  0027AA  EF1F  F014         	goto	l4420
  7567  0027AE                     u3080:
  7568  0027AE  0E01               	movlw	1
  7569  0027B0  6E11               	movwf	___aomod@counter^0,c
  7570  0027B2  EFE5  F013         	goto	l4410
  7571  0027B6                     l4408:
  7572  0027B6  90D8               	bcf	status,0,c
  7573  0027B8  3609               	rlcf	___aomod@divisor^0,f,c
  7574  0027BA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7575  0027BC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7576  0027BE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7577  0027C0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7578  0027C2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7579  0027C4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7580  0027C6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7581  0027C8  2A11               	incf	___aomod@counter^0,f,c
  7582  0027CA                     l4410:
  7583  0027CA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7584  0027CC  EFEA  F013         	goto	u3091
  7585  0027D0  EFEC  F013         	goto	u3090
  7586  0027D4                     u3091:
  7587  0027D4  EFDB  F013         	goto	l4408
  7588  0027D8                     u3090:
  7589  0027D8                     l4412:
  7590  0027D8  5009               	movf	___aomod@divisor^0,w,c
  7591  0027DA  5C01               	subwf	___aomod@dividend^0,w,c
  7592  0027DC  500A               	movf	(___aomod@divisor+1)^0,w,c
  7593  0027DE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7594  0027E0  500B               	movf	(___aomod@divisor+2)^0,w,c
  7595  0027E2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7596  0027E4  500C               	movf	(___aomod@divisor+3)^0,w,c
  7597  0027E6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7598  0027E8  500D               	movf	(___aomod@divisor+4)^0,w,c
  7599  0027EA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7600  0027EC  500E               	movf	(___aomod@divisor+5)^0,w,c
  7601  0027EE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7602  0027F0  500F               	movf	(___aomod@divisor+6)^0,w,c
  7603  0027F2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7604  0027F4  5010               	movf	(___aomod@divisor+7)^0,w,c
  7605  0027F6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7606  0027F8  A0D8               	btfss	status,0,c
  7607  0027FA  EF01  F014         	goto	u3101
  7608  0027FE  EF03  F014         	goto	u3100
  7609  002802                     u3101:
  7610  002802  EF13  F014         	goto	l4416
  7611  002806                     u3100:
  7612  002806  5009               	movf	___aomod@divisor^0,w,c
  7613  002808  5E01               	subwf	___aomod@dividend^0,f,c
  7614  00280A  500A               	movf	(___aomod@divisor+1)^0,w,c
  7615  00280C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7616  00280E  500B               	movf	(___aomod@divisor+2)^0,w,c
  7617  002810  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7618  002812  500C               	movf	(___aomod@divisor+3)^0,w,c
  7619  002814  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7620  002816  500D               	movf	(___aomod@divisor+4)^0,w,c
  7621  002818  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7622  00281A  500E               	movf	(___aomod@divisor+5)^0,w,c
  7623  00281C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7624  00281E  500F               	movf	(___aomod@divisor+6)^0,w,c
  7625  002820  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7626  002822  5010               	movf	(___aomod@divisor+7)^0,w,c
  7627  002824  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7628  002826                     l4416:
  7629  002826  90D8               	bcf	status,0,c
  7630  002828  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7631  00282A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7632  00282C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7633  00282E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7634  002830  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7635  002832  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7636  002834  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7637  002836  3209               	rrcf	___aomod@divisor^0,f,c
  7638  002838  2E11               	decfsz	___aomod@counter^0,f,c
  7639  00283A  EFEC  F013         	goto	l4412
  7640  00283E                     l4420:
  7641  00283E  5012               	movf	___aomod@sign^0,w,c
  7642  002840  B4D8               	btfsc	status,2,c
  7643  002842  EF25  F014         	goto	u3111
  7644  002846  EF27  F014         	goto	u3110
  7645  00284A                     u3111:
  7646  00284A  EF37  F014         	goto	l4424
  7647  00284E                     u3110:
  7648  00284E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7649  002850  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7650  002852  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7651  002854  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7652  002856  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7653  002858  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7654  00285A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7655  00285C  6C01               	negf	___aomod@dividend^0,c
  7656  00285E  0E00               	movlw	0
  7657  002860  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7658  002862  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7659  002864  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7660  002866  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7661  002868  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7662  00286A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7663  00286C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7664  00286E                     l4424:
  7665  00286E  C001  F001         	movff	___aomod@dividend,?___aomod
  7666  002872  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7667  002876  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7668  00287A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7669  00287E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7670  002882  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7671  002886  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7672  00288A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7673  00288E  0012               	return		;funcret
  7674  002890                     __end_of___aomod:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function ___aodiv *****************
  7678 ;; Defined at:
  7679 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  dividend        8    0[COMRAM] long long 
  7682 ;;  divisor         8    8[COMRAM] long long 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  quotient        8   18[COMRAM] long long 
  7685 ;;  sign            1   17[COMRAM] unsigned char 
  7686 ;;  counter         1   16[COMRAM] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  8    0[COMRAM] long long 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7696 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;Total ram usage:       26 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_dtoa
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text39
  7710  00242E                     __ptext39:
  7711                           	callstack 0
  7712  00242E                     ___aodiv:
  7713                           	callstack 25
  7714  00242E  0E00               	movlw	0
  7715  002430  6E12               	movwf	___aodiv@sign^0,c
  7716  002432  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7717  002434  EF20  F012         	goto	u2990
  7718  002438  EF1E  F012         	goto	u2991
  7719  00243C                     u2991:
  7720  00243C  EF32  F012         	goto	l4356
  7721  002440                     u2990:
  7722  002440  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7723  002442  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7724  002444  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7725  002446  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7726  002448  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7727  00244A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7728  00244C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7729  00244E  6C09               	negf	___aodiv@divisor^0,c
  7730  002450  0E00               	movlw	0
  7731  002452  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7732  002454  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7733  002456  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7734  002458  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7735  00245A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7736  00245C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7737  00245E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7738  002460  0E01               	movlw	1
  7739  002462  6E12               	movwf	___aodiv@sign^0,c
  7740  002464                     l4356:
  7741  002464  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7742  002466  EF39  F012         	goto	u3000
  7743  00246A  EF37  F012         	goto	u3001
  7744  00246E                     u3001:
  7745  00246E  EF4B  F012         	goto	l4362
  7746  002472                     u3000:
  7747  002472  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7748  002474  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7749  002476  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7750  002478  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7751  00247A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7752  00247C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7753  00247E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7754  002480  6C01               	negf	___aodiv@dividend^0,c
  7755  002482  0E00               	movlw	0
  7756  002484  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7757  002486  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7758  002488  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7759  00248A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7760  00248C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7761  00248E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7762  002490  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7763  002492  0E01               	movlw	1
  7764  002494  1A12               	xorwf	___aodiv@sign^0,f,c
  7765  002496                     l4362:
  7766  002496  EE20  F013         	lfsr	2,___aodiv@quotient
  7767  00249A  0E07               	movlw	7
  7768  00249C                     u3011:
  7769  00249C  6ADE               	clrf	postinc2,c
  7770  00249E  06E8               	decf	wreg,f,c
  7771  0024A0  E2FD               	bc	u3011
  7772  0024A2  5009               	movf	___aodiv@divisor^0,w,c
  7773  0024A4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7774  0024A6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7775  0024A8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7776  0024AA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7777  0024AC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7778  0024AE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7779  0024B0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7780  0024B2  B4D8               	btfsc	status,2,c
  7781  0024B4  EF5E  F012         	goto	u3021
  7782  0024B8  EF60  F012         	goto	u3020
  7783  0024BC                     u3021:
  7784  0024BC  EFB2  F012         	goto	l4384
  7785  0024C0                     u3020:
  7786  0024C0  0E01               	movlw	1
  7787  0024C2  6E11               	movwf	___aodiv@counter^0,c
  7788  0024C4  EF6E  F012         	goto	l4370
  7789  0024C8                     l4368:
  7790  0024C8  90D8               	bcf	status,0,c
  7791  0024CA  3609               	rlcf	___aodiv@divisor^0,f,c
  7792  0024CC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7793  0024CE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7794  0024D0  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7795  0024D2  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7796  0024D4  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7797  0024D6  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7798  0024D8  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7799  0024DA  2A11               	incf	___aodiv@counter^0,f,c
  7800  0024DC                     l4370:
  7801  0024DC  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7802  0024DE  EF73  F012         	goto	u3031
  7803  0024E2  EF75  F012         	goto	u3030
  7804  0024E6                     u3031:
  7805  0024E6  EF64  F012         	goto	l4368
  7806  0024EA                     u3030:
  7807  0024EA                     l4372:
  7808  0024EA  90D8               	bcf	status,0,c
  7809  0024EC  3613               	rlcf	___aodiv@quotient^0,f,c
  7810  0024EE  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7811  0024F0  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7812  0024F2  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7813  0024F4  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7814  0024F6  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7815  0024F8  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7816  0024FA  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7817  0024FC  5009               	movf	___aodiv@divisor^0,w,c
  7818  0024FE  5C01               	subwf	___aodiv@dividend^0,w,c
  7819  002500  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7820  002502  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7821  002504  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7822  002506  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7823  002508  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7824  00250A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7825  00250C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7826  00250E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7827  002510  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7828  002512  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7829  002514  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7830  002516  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7831  002518  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7832  00251A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7833  00251C  A0D8               	btfss	status,0,c
  7834  00251E  EF93  F012         	goto	u3041
  7835  002522  EF95  F012         	goto	u3040
  7836  002526                     u3041:
  7837  002526  EFA6  F012         	goto	l4380
  7838  00252A                     u3040:
  7839  00252A  5009               	movf	___aodiv@divisor^0,w,c
  7840  00252C  5E01               	subwf	___aodiv@dividend^0,f,c
  7841  00252E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7842  002530  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7843  002532  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7844  002534  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7845  002536  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7846  002538  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7847  00253A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7848  00253C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7849  00253E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7850  002540  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7851  002542  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7852  002544  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7853  002546  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7854  002548  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7855  00254A  8013               	bsf	___aodiv@quotient^0,0,c
  7856  00254C                     l4380:
  7857  00254C  90D8               	bcf	status,0,c
  7858  00254E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7859  002550  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7860  002552  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7861  002554  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7862  002556  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7863  002558  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7864  00255A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7865  00255C  3209               	rrcf	___aodiv@divisor^0,f,c
  7866  00255E  2E11               	decfsz	___aodiv@counter^0,f,c
  7867  002560  EF75  F012         	goto	l4372
  7868  002564                     l4384:
  7869  002564  5012               	movf	___aodiv@sign^0,w,c
  7870  002566  B4D8               	btfsc	status,2,c
  7871  002568  EFB8  F012         	goto	u3051
  7872  00256C  EFBA  F012         	goto	u3050
  7873  002570                     u3051:
  7874  002570  EFCA  F012         	goto	l4388
  7875  002574                     u3050:
  7876  002574  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7877  002576  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7878  002578  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7879  00257A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7880  00257C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7881  00257E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7882  002580  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7883  002582  6C13               	negf	___aodiv@quotient^0,c
  7884  002584  0E00               	movlw	0
  7885  002586  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7886  002588  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7887  00258A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7888  00258C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7889  00258E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7890  002590  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7891  002592  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7892  002594                     l4388:
  7893  002594  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7894  002598  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7895  00259C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7896  0025A0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7897  0025A4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7898  0025A8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7899  0025AC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7900  0025B0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7901  0025B4  0012               	return		;funcret
  7902  0025B6                     __end_of___aodiv:
  7903                           	callstack 0
  7904                           
  7905 ;; *************** function _memset *****************
  7906 ;; Defined at:
  7907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  dest            2    0[COMRAM] PTR void 
  7910 ;;		 -> arr(11), postfix(80), infix(100), 
  7911 ;;  c               2    2[COMRAM] int 
  7912 ;;  n               2    4[COMRAM] unsigned int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  s               2   10[COMRAM] PTR unsigned char 
  7915 ;;		 -> arr(11), postfix(80), infix(100), 
  7916 ;;  k               2    8[COMRAM] unsigned int 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2    0[COMRAM] PTR void 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7926 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;Total ram usage:       12 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_convert_uint32_to_string
  7936 ;;		_main
  7937 ;;		_convert_uint16_to_string
  7938 ;;		_convert_uint8_to_string
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text40
  7943  0025B6                     __ptext40:
  7944                           	callstack 0
  7945  0025B6                     _memset:
  7946                           	callstack 30
  7947  0025B6  C001  F00B         	movff	memset@dest,memset@s
  7948  0025BA  C002  F00C         	movff	memset@dest+1,memset@s+1
  7949  0025BE  5005               	movf	memset@n^0,w,c
  7950  0025C0  1006               	iorwf	(memset@n+1)^0,w,c
  7951  0025C2  A4D8               	btfss	status,2,c
  7952  0025C4  EFE6  F012         	goto	u3921
  7953  0025C8  EFE8  F012         	goto	u3920
  7954  0025CC                     u3921:
  7955  0025CC  EFEA  F012         	goto	l4998
  7956  0025D0                     u3920:
  7957  0025D0  EF95  F013         	goto	l1652
  7958  0025D4                     l4998:
  7959  0025D4  C00B  FFD9         	movff	memset@s,fsr2l
  7960  0025D8  C00C  FFDA         	movff	memset@s+1,fsr2h
  7961  0025DC  C003  FFDF         	movff	memset@c,indf2
  7962  0025E0  5005               	movf	memset@n^0,w,c
  7963  0025E2  240B               	addwf	memset@s^0,w,c
  7964  0025E4  6E07               	movwf	??_memset^0,c
  7965  0025E6  5006               	movf	(memset@n+1)^0,w,c
  7966  0025E8  200C               	addwfc	(memset@s+1)^0,w,c
  7967  0025EA  6E08               	movwf	(??_memset+1)^0,c
  7968  0025EC  0EFF               	movlw	255
  7969  0025EE  2407               	addwf	??_memset^0,w,c
  7970  0025F0  6ED9               	movwf	fsr2l,c
  7971  0025F2  0EFF               	movlw	255
  7972  0025F4  2008               	addwfc	(??_memset+1)^0,w,c
  7973  0025F6  6EDA               	movwf	fsr2h,c
  7974  0025F8  C003  FFDF         	movff	memset@c,indf2
  7975  0025FC  5006               	movf	(memset@n+1)^0,w,c
  7976  0025FE  E107               	bnz	u3931
  7977  002600  0E03               	movlw	3
  7978  002602  5C05               	subwf	memset@n^0,w,c
  7979  002604  B0D8               	btfsc	status,0,c
  7980  002606  EF07  F013         	goto	u3931
  7981  00260A  EF09  F013         	goto	u3930
  7982  00260E                     u3931:
  7983  00260E  EF0B  F013         	goto	l5004
  7984  002612                     u3930:
  7985  002612  EF95  F013         	goto	l1652
  7986  002616                     l5004:
  7987  002616  EE20 F001          	lfsr	2,1
  7988  00261A  500B               	movf	memset@s^0,w,c
  7989  00261C  26D9               	addwf	fsr2l,f,c
  7990  00261E  500C               	movf	(memset@s+1)^0,w,c
  7991  002620  22DA               	addwfc	fsr2h,f,c
  7992  002622  C003  FFDF         	movff	memset@c,indf2
  7993  002626  EE20 F002          	lfsr	2,2
  7994  00262A  500B               	movf	memset@s^0,w,c
  7995  00262C  26D9               	addwf	fsr2l,f,c
  7996  00262E  500C               	movf	(memset@s+1)^0,w,c
  7997  002630  22DA               	addwfc	fsr2h,f,c
  7998  002632  C003  FFDF         	movff	memset@c,indf2
  7999  002636  5005               	movf	memset@n^0,w,c
  8000  002638  240B               	addwf	memset@s^0,w,c
  8001  00263A  6E07               	movwf	??_memset^0,c
  8002  00263C  5006               	movf	(memset@n+1)^0,w,c
  8003  00263E  200C               	addwfc	(memset@s+1)^0,w,c
  8004  002640  6E08               	movwf	(??_memset+1)^0,c
  8005  002642  0EFE               	movlw	254
  8006  002644  2407               	addwf	??_memset^0,w,c
  8007  002646  6ED9               	movwf	fsr2l,c
  8008  002648  0EFF               	movlw	255
  8009  00264A  2008               	addwfc	(??_memset+1)^0,w,c
  8010  00264C  6EDA               	movwf	fsr2h,c
  8011  00264E  C003  FFDF         	movff	memset@c,indf2
  8012  002652  5005               	movf	memset@n^0,w,c
  8013  002654  240B               	addwf	memset@s^0,w,c
  8014  002656  6E07               	movwf	??_memset^0,c
  8015  002658  5006               	movf	(memset@n+1)^0,w,c
  8016  00265A  200C               	addwfc	(memset@s+1)^0,w,c
  8017  00265C  6E08               	movwf	(??_memset+1)^0,c
  8018  00265E  0EFD               	movlw	253
  8019  002660  2407               	addwf	??_memset^0,w,c
  8020  002662  6ED9               	movwf	fsr2l,c
  8021  002664  0EFF               	movlw	255
  8022  002666  2008               	addwfc	(??_memset+1)^0,w,c
  8023  002668  6EDA               	movwf	fsr2h,c
  8024  00266A  C003  FFDF         	movff	memset@c,indf2
  8025  00266E  5006               	movf	(memset@n+1)^0,w,c
  8026  002670  E107               	bnz	u3941
  8027  002672  0E07               	movlw	7
  8028  002674  5C05               	subwf	memset@n^0,w,c
  8029  002676  B0D8               	btfsc	status,0,c
  8030  002678  EF40  F013         	goto	u3941
  8031  00267C  EF42  F013         	goto	u3940
  8032  002680                     u3941:
  8033  002680  EF44  F013         	goto	l5010
  8034  002684                     u3940:
  8035  002684  EF95  F013         	goto	l1652
  8036  002688                     l5010:
  8037  002688  EE20 F003          	lfsr	2,3
  8038  00268C  500B               	movf	memset@s^0,w,c
  8039  00268E  26D9               	addwf	fsr2l,f,c
  8040  002690  500C               	movf	(memset@s+1)^0,w,c
  8041  002692  22DA               	addwfc	fsr2h,f,c
  8042  002694  C003  FFDF         	movff	memset@c,indf2
  8043  002698  5005               	movf	memset@n^0,w,c
  8044  00269A  240B               	addwf	memset@s^0,w,c
  8045  00269C  6E07               	movwf	??_memset^0,c
  8046  00269E  5006               	movf	(memset@n+1)^0,w,c
  8047  0026A0  200C               	addwfc	(memset@s+1)^0,w,c
  8048  0026A2  6E08               	movwf	(??_memset+1)^0,c
  8049  0026A4  0EFC               	movlw	252
  8050  0026A6  2407               	addwf	??_memset^0,w,c
  8051  0026A8  6ED9               	movwf	fsr2l,c
  8052  0026AA  0EFF               	movlw	255
  8053  0026AC  2008               	addwfc	(??_memset+1)^0,w,c
  8054  0026AE  6EDA               	movwf	fsr2h,c
  8055  0026B0  C003  FFDF         	movff	memset@c,indf2
  8056  0026B4  5006               	movf	(memset@n+1)^0,w,c
  8057  0026B6  E107               	bnz	u3951
  8058  0026B8  0E09               	movlw	9
  8059  0026BA  5C05               	subwf	memset@n^0,w,c
  8060  0026BC  B0D8               	btfsc	status,0,c
  8061  0026BE  EF63  F013         	goto	u3951
  8062  0026C2  EF65  F013         	goto	u3950
  8063  0026C6                     u3951:
  8064  0026C6  EF67  F013         	goto	l5016
  8065  0026CA                     u3950:
  8066  0026CA  EF95  F013         	goto	l1652
  8067  0026CE                     l5016:
  8068  0026CE  C00B  F007         	movff	memset@s,??_memset
  8069  0026D2  C00C  F008         	movff	memset@s+1,??_memset+1
  8070  0026D6  1E07               	comf	??_memset^0,f,c
  8071  0026D8  1E08               	comf	(??_memset+1)^0,f,c
  8072  0026DA  4A07               	infsnz	??_memset^0,f,c
  8073  0026DC  2A08               	incf	(??_memset+1)^0,f,c
  8074  0026DE  0E03               	movlw	3
  8075  0026E0  1407               	andwf	??_memset^0,w,c
  8076  0026E2  6E09               	movwf	memset@k^0,c
  8077  0026E4  6A0A               	clrf	(memset@k+1)^0,c
  8078  0026E6  5009               	movf	memset@k^0,w,c
  8079  0026E8  260B               	addwf	memset@s^0,f,c
  8080  0026EA  500A               	movf	(memset@k+1)^0,w,c
  8081  0026EC  220C               	addwfc	(memset@s+1)^0,f,c
  8082  0026EE  5009               	movf	memset@k^0,w,c
  8083  0026F0  5E05               	subwf	memset@n^0,f,c
  8084  0026F2  500A               	movf	(memset@k+1)^0,w,c
  8085  0026F4  5A06               	subwfb	(memset@n+1)^0,f,c
  8086  0026F6  0EFC               	movlw	252
  8087  0026F8  1605               	andwf	memset@n^0,f,c
  8088  0026FA  0EFF               	movlw	255
  8089  0026FC  1606               	andwf	(memset@n+1)^0,f,c
  8090  0026FE  EF8C  F013         	goto	l5024
  8091  002702                     l5018:
  8092  002702  C00B  FFD9         	movff	memset@s,fsr2l
  8093  002706  C00C  FFDA         	movff	memset@s+1,fsr2h
  8094  00270A  C003  FFDF         	movff	memset@c,indf2
  8095  00270E  0605               	decf	memset@n^0,f,c
  8096  002710  A0D8               	btfss	status,0,c
  8097  002712  0606               	decf	(memset@n+1)^0,f,c
  8098  002714  4A0B               	infsnz	memset@s^0,f,c
  8099  002716  2A0C               	incf	(memset@s+1)^0,f,c
  8100  002718                     l5024:
  8101  002718  5005               	movf	memset@n^0,w,c
  8102  00271A  1006               	iorwf	(memset@n+1)^0,w,c
  8103  00271C  A4D8               	btfss	status,2,c
  8104  00271E  EF93  F013         	goto	u3961
  8105  002722  EF95  F013         	goto	u3960
  8106  002726                     u3961:
  8107  002726  EF81  F013         	goto	l5018
  8108  00272A                     u3960:
  8109  00272A                     l1652:
  8110  00272A  0012               	return		;funcret
  8111  00272C                     __end_of_memset:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _application_intialize *****************
  8115 ;; Defined at:
  8116 ;;		line 119 in file "Application.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  ret             1    0        unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 5
  8137 ;; This function calls:
  8138 ;;		_ecu_layer_intialize
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text41
  8145  004036                     __ptext41:
  8146                           	callstack 0
  8147  004036                     _application_intialize:
  8148                           	callstack 25
  8149  004036                     
  8150                           ;Application.c: 121:     ecu_layer_intialize();
  8151  004036  ECFA  F01F         	call	_ecu_layer_intialize	;wreg free
  8152  00403A  0012               	return		;funcret
  8153  00403C                     __end_of_application_intialize:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function _ecu_layer_intialize *****************
  8157 ;; Defined at:
  8158 ;;		line 86 in file "ECU_layer/ecu_layer_init.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  ret             1    0        unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; Hardware stack levels required when called: 4
  8179 ;; This function calls:
  8180 ;;		_keypad_initialize
  8181 ;;		_lcd_4bit_intialize
  8182 ;;		_led_initialize
  8183 ;; This function is called by:
  8184 ;;		_application_intialize
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text42
  8189  003FF4                     __ptext42:
  8190                           	callstack 0
  8191  003FF4                     _ecu_layer_intialize:
  8192                           	callstack 25
  8193  003FF4  0EC7               	movlw	low _keypad_1
  8194  003FF6  6E0F               	movwf	keypad_initialize@_keypad_obj^0,c
  8195  003FF8  0E01               	movlw	high _keypad_1
  8196  003FFA  6E10               	movwf	(keypad_initialize@_keypad_obj+1)^0,c
  8197  003FFC  ECDB  F01B         	call	_keypad_initialize	;wreg free
  8198  004000  0EF9               	movlw	low _led_1
  8199  004002  6E0F               	movwf	led_initialize@led^0,c
  8200  004004  0E00               	movlw	high _led_1
  8201  004006  6E10               	movwf	(led_initialize@led+1)^0,c
  8202  004008  EC5A  F01C         	call	_led_initialize	;wreg free
  8203  00400C  0ED1               	movlw	low _lcd_1
  8204  00400E  6E13               	movwf	lcd_4bit_intialize@lcd^0,c
  8205  004010  0E01               	movlw	high _lcd_1
  8206  004012  6E14               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
  8207  004014  EC18  F016         	call	_lcd_4bit_intialize	;wreg free
  8208  004018  0012               	return		;funcret
  8209  00401A                     __end_of_ecu_layer_intialize:
  8210                           	callstack 0
  8211                           
  8212 ;; *************** function _led_initialize *****************
  8213 ;; Defined at:
  8214 ;;		line 17 in file "ECU_layer/LED/ecu_led.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  led             2   14[COMRAM] PTR const struct .
  8217 ;;		 -> led_1(1), 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;  pin_obj         1   18[COMRAM] struct .
  8220 ;;  ret             1   17[COMRAM] unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1    wreg      unsigned char 
  8223 ;; Registers used:
  8224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;Total ram usage:        5 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; Hardware stack levels required when called: 2
  8237 ;; This function calls:
  8238 ;;		_gpio_pin_intialize
  8239 ;; This function is called by:
  8240 ;;		_ecu_layer_intialize
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text43
  8245  0038B4                     __ptext43:
  8246                           	callstack 0
  8247  0038B4                     _led_initialize:
  8248                           	callstack 26
  8249  0038B4                     
  8250                           ;ECU_layer/LED/ecu_led.c: 19:     if(((void*)0) == led){
  8251  0038B4  500F               	movf	led_initialize@led^0,w,c
  8252  0038B6  1010               	iorwf	(led_initialize@led+1)^0,w,c
  8253  0038B8  A4D8               	btfss	status,2,c
  8254  0038BA  EF61  F01C         	goto	u3731
  8255  0038BE  EF63  F01C         	goto	u3730
  8256  0038C2                     u3731:
  8257  0038C2  EF67  F01C         	goto	l274
  8258  0038C6                     u3730:
  8259  0038C6                     
  8260                           ;ECU_layer/LED/ecu_led.c: 20:         ret = (Std_ReturnType)0x00;
  8261  0038C6  0E00               	movlw	0
  8262  0038C8  6E12               	movwf	led_initialize@ret^0,c
  8263                           
  8264                           ;ECU_layer/LED/ecu_led.c: 21:     }
  8265  0038CA  EF95  F01C         	goto	l4846
  8266  0038CE                     l274:
  8267                           
  8268                           ;ECU_layer/LED/ecu_led.c: 23:         pin_config_t pin_obj = {
  8269  0038CE  C0F6  F013         	movff	led_initialize@F3045,led_initialize@pin_obj
  8270  0038D2  C00F  FFD9         	movff	led_initialize@led,fsr2l
  8271  0038D6  C010  FFDA         	movff	led_initialize@led+1,fsr2h
  8272  0038DA  50DF               	movf	223,w,c
  8273  0038DC  0B0F               	andlw	15
  8274  0038DE  6E11               	movwf	??_led_initialize^0,c
  8275  0038E0  5013               	movf	led_initialize@pin_obj^0,w,c
  8276  0038E2  1811               	xorwf	??_led_initialize^0,w,c
  8277  0038E4  0BF8               	andlw	-8
  8278  0038E6  1811               	xorwf	??_led_initialize^0,w,c
  8279  0038E8  6E13               	movwf	led_initialize@pin_obj^0,c
  8280  0038EA  C00F  FFD9         	movff	led_initialize@led,fsr2l
  8281  0038EE  C010  FFDA         	movff	led_initialize@led+1,fsr2h
  8282  0038F2  38DF               	swapf	223,w,c
  8283  0038F4  0B07               	andlw	7
  8284  0038F6  6E11               	movwf	??_led_initialize^0,c
  8285  0038F8  4611               	rlncf	??_led_initialize^0,f,c
  8286  0038FA  4611               	rlncf	??_led_initialize^0,f,c
  8287  0038FC  4611               	rlncf	??_led_initialize^0,f,c
  8288  0038FE  5013               	movf	led_initialize@pin_obj^0,w,c
  8289  003900  1811               	xorwf	??_led_initialize^0,w,c
  8290  003902  0BC7               	andlw	-57
  8291  003904  1811               	xorwf	??_led_initialize^0,w,c
  8292  003906  6E13               	movwf	led_initialize@pin_obj^0,c
  8293  003908  9C13               	bcf	led_initialize@pin_obj^0,6,c
  8294  00390A  C00F  FFD9         	movff	led_initialize@led,fsr2l
  8295  00390E  C010  FFDA         	movff	led_initialize@led+1,fsr2h
  8296  003912  AEDF               	btfss	indf2,7,c
  8297  003914  D002               	bra	u3745
  8298  003916  8E13               	bsf	led_initialize@pin_obj^0,7,c
  8299  003918  D001               	bra	u3747
  8300  00391A                     u3745:
  8301  00391A  9E13               	bcf	led_initialize@pin_obj^0,7,c
  8302  00391C                     u3747:
  8303  00391C                     
  8304                           ;ECU_layer/LED/ecu_led.c: 29:         ret = gpio_pin_intialize(&pin_obj);
  8305  00391C  0E13               	movlw	low led_initialize@pin_obj
  8306  00391E  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  8307  003920  0E00               	movlw	high led_initialize@pin_obj
  8308  003922  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  8309  003924  ECB5  F01D         	call	_gpio_pin_intialize	;wreg free
  8310  003928  6E12               	movwf	led_initialize@ret^0,c
  8311  00392A                     l4846:
  8312                           
  8313                           ;ECU_layer/LED/ecu_led.c: 31:     return ret;
  8314  00392A  5012               	movf	led_initialize@ret^0,w,c
  8315  00392C  0012               	return		;funcret
  8316  00392E                     __end_of_led_initialize:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _lcd_4bit_intialize *****************
  8320 ;; Defined at:
  8321 ;;		line 18 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  lcd             2   18[COMRAM] PTR const struct .
  8324 ;;		 -> lcd_1(6), 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  ret             1   23[COMRAM] unsigned char 
  8327 ;;  data_bins_co    1   22[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      unsigned char 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;Total ram usage:        6 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 3
  8344 ;; This function calls:
  8345 ;;		_gpio_pin_intialize
  8346 ;;		_lcd_4bit_send_command
  8347 ;; This function is called by:
  8348 ;;		_ecu_layer_intialize
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text44
  8353  002C30                     __ptext44:
  8354                           	callstack 0
  8355  002C30                     _lcd_4bit_intialize:
  8356                           	callstack 25
  8357  002C30                     
  8358                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 20:     uint8 data_bins_counter = 0;
  8359  002C30  0E00               	movlw	0
  8360  002C32  6E17               	movwf	lcd_4bit_intialize@data_bins_counter^0,c
  8361  002C34                     
  8362                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 21:     if(((void*)0) == lcd){
  8363  002C34  5013               	movf	lcd_4bit_intialize@lcd^0,w,c
  8364  002C36  1014               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  8365  002C38  A4D8               	btfss	status,2,c
  8366  002C3A  EF21  F016         	goto	u3681
  8367  002C3E  EF23  F016         	goto	u3680
  8368  002C42                     u3681:
  8369  002C42  EF27  F016         	goto	l4758
  8370  002C46                     u3680:
  8371  002C46                     
  8372                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 22:         ret = (Std_ReturnType)0x00;
  8373  002C46  0E00               	movlw	0
  8374  002C48  6E18               	movwf	lcd_4bit_intialize@ret^0,c
  8375                           
  8376                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 23:     }
  8377  002C4A  EFAA  F016         	goto	l4794
  8378  002C4E                     l4758:
  8379                           
  8380                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 25:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
  8381  002C4E  C013  F00B         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  8382  002C52  C014  F00C         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  8383  002C56  ECB5  F01D         	call	_gpio_pin_intialize	;wreg free
  8384  002C5A  6E18               	movwf	lcd_4bit_intialize@ret^0,c
  8385                           
  8386                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 26:         ret = gpio_pin_intialize(&(lcd->lcd_en));
  8387  002C5C  0E01               	movlw	1
  8388  002C5E  2413               	addwf	lcd_4bit_intialize@lcd^0,w,c
  8389  002C60  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  8390  002C62  0E00               	movlw	0
  8391  002C64  2014               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  8392  002C66  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  8393  002C68  ECB5  F01D         	call	_gpio_pin_intialize	;wreg free
  8394  002C6C  6E18               	movwf	lcd_4bit_intialize@ret^0,c
  8395  002C6E                     
  8396                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 27:         for(data_bins_counter = 0; data_bins_count
      +                          er<4; data_bins_counter++){
  8397  002C6E  0E00               	movlw	0
  8398  002C70  6E17               	movwf	lcd_4bit_intialize@data_bins_counter^0,c
  8399  002C72                     l4766:
  8400  002C72  5017               	movf	lcd_4bit_intialize@data_bins_counter^0,w,c
  8401  002C74  2413               	addwf	lcd_4bit_intialize@lcd^0,w,c
  8402  002C76  6E15               	movwf	??_lcd_4bit_intialize^0,c
  8403  002C78  0E00               	movlw	0
  8404  002C7A  2014               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  8405  002C7C  6E16               	movwf	(??_lcd_4bit_intialize+1)^0,c
  8406  002C7E  0E02               	movlw	2
  8407  002C80  2415               	addwf	??_lcd_4bit_intialize^0,w,c
  8408  002C82  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  8409  002C84  0E00               	movlw	0
  8410  002C86  2016               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  8411  002C88  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  8412  002C8A  ECB5  F01D         	call	_gpio_pin_intialize	;wreg free
  8413  002C8E                     
  8414                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 29:         }
  8415  002C8E  2A17               	incf	lcd_4bit_intialize@data_bins_counter^0,f,c
  8416  002C90  0E03               	movlw	3
  8417  002C92  6417               	cpfsgt	lcd_4bit_intialize@data_bins_counter^0,c
  8418  002C94  EF4E  F016         	goto	u3691
  8419  002C98  EF50  F016         	goto	u3690
  8420  002C9C                     u3691:
  8421  002C9C  EF39  F016         	goto	l4766
  8422  002CA0                     u3690:
  8423  002CA0                     
  8424                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 30:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  8425  002CA0  0E34               	movlw	52
  8426  002CA2  6E15               	movwf	??_lcd_4bit_intialize^0,c
  8427  002CA4  0EF2               	movlw	242
  8428  002CA6                     u5377:
  8429  002CA6  2EE8               	decfsz	wreg,f,c
  8430  002CA8  D7FE               	bra	u5377
  8431  002CAA  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
  8432  002CAC  D7FC               	bra	u5377
  8433  002CAE  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8434  002CB2  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8435  002CB6  0E38               	movlw	56
  8436  002CB8  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8437  002CBA  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8438  002CBE                     
  8439                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 32:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  8440  002CBE  0E0D               	movlw	13
  8441  002CC0  6E15               	movwf	??_lcd_4bit_intialize^0,c
  8442  002CC2  0EFC               	movlw	252
  8443  002CC4                     u5387:
  8444  002CC4  2EE8               	decfsz	wreg,f,c
  8445  002CC6  D7FE               	bra	u5387
  8446  002CC8  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
  8447  002CCA  D7FC               	bra	u5387
  8448  002CCC  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8449  002CD0  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8450  002CD4  0E38               	movlw	56
  8451  002CD6  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8452  002CD8  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8453  002CDC                     
  8454                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 34:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  8455  002CDC  0E64               	movlw	100
  8456  002CDE                     u5397:
  8457  002CDE  2EE8               	decfsz	wreg,f,c
  8458  002CE0  D7FE               	bra	u5397
  8459  002CE2  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8460  002CE6  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8461  002CEA  0E38               	movlw	56
  8462  002CEC  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8463  002CEE  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8464  002CF2  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8465  002CF6  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8466  002CFA  0E01               	movlw	1
  8467  002CFC  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8468  002CFE  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8469  002D02  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8470  002D06  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8471  002D0A  0E02               	movlw	2
  8472  002D0C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8473  002D0E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8474  002D12  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8475  002D16  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8476  002D1A  0E06               	movlw	6
  8477  002D1C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8478  002D1E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8479  002D22  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8480  002D26  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8481  002D2A  0E0C               	movlw	12
  8482  002D2C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8483  002D2E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8484  002D32  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8485  002D36  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8486  002D3A  0E28               	movlw	40
  8487  002D3C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8488  002D3E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8489  002D42                     
  8490                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 41:         ret = lcd_4bit_send_command(lcd, 0x01);
  8491  002D42  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  8492  002D46  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  8493  002D4A  0E01               	movlw	1
  8494  002D4C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8495  002D4E  EC46  F01D         	call	_lcd_4bit_send_command	;wreg free
  8496  002D52  6E18               	movwf	lcd_4bit_intialize@ret^0,c
  8497  002D54                     l4794:
  8498                           
  8499                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 43:     return ret;
  8500  002D54  5018               	movf	lcd_4bit_intialize@ret^0,w,c
  8501  002D56  0012               	return		;funcret
  8502  002D58                     __end_of_lcd_4bit_intialize:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _lcd_4bit_send_command *****************
  8506 ;; Defined at:
  8507 ;;		line 46 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  lcd             2   14[COMRAM] PTR const struct .
  8510 ;;		 -> lcd_1(6), 
  8511 ;;  command         1   16[COMRAM] unsigned char 
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  ret             1   17[COMRAM] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      unsigned char 
  8516 ;; Registers used:
  8517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8523 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;Total ram usage:        4 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 2
  8530 ;; This function calls:
  8531 ;;		_gpio_pin_write_logic
  8532 ;;		_lcd_4bits_send_enable_signal
  8533 ;;		_lcd_send_4bits
  8534 ;; This function is called by:
  8535 ;;		_lcd_4bit_intialize
  8536 ;;		_lcd_4bits_set_cursor
  8537 ;;		_main
  8538 ;;		_lcd_4bit_send_custom_char
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text45
  8543  003A8C                     __ptext45:
  8544                           	callstack 0
  8545  003A8C                     _lcd_4bit_send_command:
  8546                           	callstack 26
  8547  003A8C                     
  8548                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 48:     if(((void*)0) == lcd){
  8549  003A8C  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  8550  003A8E  1010               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  8551  003A90  A4D8               	btfss	status,2,c
  8552  003A92  EF4D  F01D         	goto	u3591
  8553  003A96  EF4F  F01D         	goto	u3590
  8554  003A9A                     u3591:
  8555  003A9A  EF53  F01D         	goto	l4678
  8556  003A9E                     u3590:
  8557  003A9E                     
  8558                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret = (Std_ReturnType)0x00;
  8559  003A9E  0E00               	movlw	0
  8560  003AA0  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8561                           
  8562                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 50:     }
  8563  003AA2  EF7D  F01D         	goto	l4680
  8564  003AA6                     l4678:
  8565                           
  8566                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  8567  003AA6  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  8568  003AAA  C010  F002         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  8569  003AAE  0E00               	movlw	0
  8570  003AB0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8571  003AB2  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8572  003AB6  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8573                           
  8574                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret = lcd_send_4bits(lcd, command >> 4);
  8575  003AB8  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  8576  003ABC  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  8577  003AC0  3811               	swapf	lcd_4bit_send_command@command^0,w,c
  8578  003AC2  0B0F               	andlw	15
  8579  003AC4  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
  8580  003AC6  EC20  F01E         	call	_lcd_send_4bits	;wreg free
  8581  003ACA  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8582                           
  8583                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bits_send_enable_signal(lcd);
  8584  003ACC  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  8585  003AD0  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  8586  003AD4  EC8A  F01F         	call	_lcd_4bits_send_enable_signal	;wreg free
  8587  003AD8  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8588                           
  8589                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 55:         ret = lcd_send_4bits(lcd, command >> 0);
  8590  003ADA  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  8591  003ADE  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  8592  003AE2  C011  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  8593  003AE6  EC20  F01E         	call	_lcd_send_4bits	;wreg free
  8594  003AEA  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8595                           
  8596                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 56:         ret = lcd_4bits_send_enable_signal(lcd);
  8597  003AEC  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  8598  003AF0  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  8599  003AF4  EC8A  F01F         	call	_lcd_4bits_send_enable_signal	;wreg free
  8600  003AF8  6E12               	movwf	lcd_4bit_send_command@ret^0,c
  8601  003AFA                     l4680:
  8602                           
  8603                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 58:     return ret;
  8604  003AFA  5012               	movf	lcd_4bit_send_command@ret^0,w,c
  8605  003AFC  0012               	return		;funcret
  8606  003AFE                     __end_of_lcd_4bit_send_command:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _lcd_send_4bits *****************
  8610 ;; Defined at:
  8611 ;;		line 282 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  lcd             2   10[COMRAM] PTR const struct .
  8614 ;;		 -> lcd_1(6), 
  8615 ;;  _data_comman    1   12[COMRAM] unsigned char 
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;  ret             1   13[COMRAM] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8627 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;Total ram usage:        4 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 1
  8634 ;; This function calls:
  8635 ;;		_gpio_pin_write_logic
  8636 ;; This function is called by:
  8637 ;;		_lcd_4bit_send_command
  8638 ;;		_lcd_4bit_send_char_data
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text46
  8643  003C40                     __ptext46:
  8644                           	callstack 0
  8645  003C40                     _lcd_send_4bits:
  8646                           	callstack 26
  8647  003C40  0E02               	movlw	2
  8648  003C42  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  8649  003C44  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8650  003C46  0E00               	movlw	0
  8651  003C48  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  8652  003C4A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8653  003C4C  500D               	movf	lcd_send_4bits@_data_command^0,w,c
  8654  003C4E  0B01               	andlw	1
  8655  003C50  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8656  003C52  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8657  003C56  0E03               	movlw	3
  8658  003C58  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  8659  003C5A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8660  003C5C  0E00               	movlw	0
  8661  003C5E  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  8662  003C60  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8663  003C62  90D8               	bcf	status,0,c
  8664  003C64  300D               	rrcf	lcd_send_4bits@_data_command^0,w,c
  8665  003C66  0B01               	andlw	1
  8666  003C68  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8667  003C6A  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8668  003C6E  0E04               	movlw	4
  8669  003C70  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  8670  003C72  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8671  003C74  0E00               	movlw	0
  8672  003C76  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  8673  003C78  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8674  003C7A  400D               	rrncf	lcd_send_4bits@_data_command^0,w,c
  8675  003C7C  42E8               	rrncf	wreg,f,c
  8676  003C7E  0B3F               	andlw	63
  8677  003C80  0B01               	andlw	1
  8678  003C82  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8679  003C84  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8680  003C88                     
  8681                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 287:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  8682  003C88  0E05               	movlw	5
  8683  003C8A  240B               	addwf	lcd_send_4bits@lcd^0,w,c
  8684  003C8C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8685  003C8E  0E00               	movlw	0
  8686  003C90  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  8687  003C92  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8688  003C94  380D               	swapf	lcd_send_4bits@_data_command^0,w,c
  8689  003C96  46E8               	rlncf	wreg,f,c
  8690  003C98  0B1F               	andlw	31
  8691  003C9A  0B01               	andlw	1
  8692  003C9C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8693  003C9E  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8694  003CA2  6E0E               	movwf	lcd_send_4bits@ret^0,c
  8695                           
  8696                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 288:     return ret;
  8697  003CA4  500E               	movf	lcd_send_4bits@ret^0,w,c
  8698  003CA6  0012               	return		;funcret
  8699  003CA8                     __end_of_lcd_send_4bits:
  8700                           	callstack 0
  8701                           
  8702 ;; *************** function _lcd_4bits_send_enable_signal *****************
  8703 ;; Defined at:
  8704 ;;		line 291 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  lcd             2   10[COMRAM] PTR const struct .
  8707 ;;		 -> lcd_1(6), 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  ret             1   13[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;Total ram usage:        4 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; Hardware stack levels required when called: 1
  8726 ;; This function calls:
  8727 ;;		_gpio_pin_write_logic
  8728 ;; This function is called by:
  8729 ;;		_lcd_4bit_send_command
  8730 ;;		_lcd_4bit_send_char_data
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text47
  8735  003F14                     __ptext47:
  8736                           	callstack 0
  8737  003F14                     _lcd_4bits_send_enable_signal:
  8738                           	callstack 26
  8739  003F14  0E01               	movlw	1
  8740  003F16  240B               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  8741  003F18  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8742  003F1A  0E00               	movlw	0
  8743  003F1C  200C               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  8744  003F1E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8745  003F20  0E01               	movlw	1
  8746  003F22  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8747  003F24  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8748  003F28                     
  8749                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 294:     _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
  8750  003F28  0E0D               	movlw	13
  8751  003F2A  6E0D               	movwf	??_lcd_4bits_send_enable_signal^0,c
  8752  003F2C  0EFC               	movlw	252
  8753  003F2E                     u5407:
  8754  003F2E  2EE8               	decfsz	wreg,f,c
  8755  003F30  D7FE               	bra	u5407
  8756  003F32  2E0D               	decfsz	??_lcd_4bits_send_enable_signal^0,f,c
  8757  003F34  D7FC               	bra	u5407
  8758  003F36                     
  8759                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 295:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
  8760  003F36  0E01               	movlw	1
  8761  003F38  240B               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
  8762  003F3A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8763  003F3C  0E00               	movlw	0
  8764  003F3E  200C               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
  8765  003F40  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8766  003F42  0E00               	movlw	0
  8767  003F44  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8768  003F46  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8769  003F4A  6E0E               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  8770  003F4C                     
  8771                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 296:     return ret;
  8772  003F4C  500E               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  8773  003F4E  0012               	return		;funcret
  8774  003F50                     __end_of_lcd_4bits_send_enable_signal:
  8775                           	callstack 0
  8776                           
  8777 ;; *************** function _keypad_initialize *****************
  8778 ;; Defined at:
  8779 ;;		line 33 in file "ECU_layer/KeyPad/ecu_keypad.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  _keypad_obj     2   14[COMRAM] PTR const struct .
  8782 ;;		 -> keypad_1(10), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  columns_coun    1   20[COMRAM] unsigned char 
  8785 ;;  row_counter     1   19[COMRAM] unsigned char 
  8786 ;;  ret             1   18[COMRAM] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      unsigned char 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        7 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; Hardware stack levels required when called: 2
  8803 ;; This function calls:
  8804 ;;		_gpio_pin_direction_intialize
  8805 ;;		_gpio_pin_intialize
  8806 ;; This function is called by:
  8807 ;;		_ecu_layer_intialize
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text48
  8812  0037B6                     __ptext48:
  8813                           	callstack 0
  8814  0037B6                     _keypad_initialize:
  8815                           	callstack 26
  8816  0037B6  0E00               	movlw	0
  8817  0037B8  6E14               	movwf	keypad_initialize@row_counter^0,c
  8818  0037BA  0E00               	movlw	0
  8819  0037BC  6E15               	movwf	keypad_initialize@columns_counter^0,c
  8820  0037BE  500F               	movf	keypad_initialize@_keypad_obj^0,w,c
  8821  0037C0  1010               	iorwf	(keypad_initialize@_keypad_obj+1)^0,w,c
  8822  0037C2  A4D8               	btfss	status,2,c
  8823  0037C4  EFE6  F01B         	goto	u3701
  8824  0037C8  EFE8  F01B         	goto	u3700
  8825  0037CC                     u3701:
  8826  0037CC  EFEC  F01B         	goto	l4804
  8827  0037D0                     u3700:
  8828  0037D0  0E00               	movlw	0
  8829  0037D2  6E13               	movwf	keypad_initialize@ret^0,c
  8830  0037D4  EF19  F01C         	goto	l4828
  8831  0037D8                     l4804:
  8832  0037D8  0E00               	movlw	0
  8833  0037DA  6E14               	movwf	keypad_initialize@row_counter^0,c
  8834  0037DC                     l4810:
  8835  0037DC  5014               	movf	keypad_initialize@row_counter^0,w,c
  8836  0037DE  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
  8837  0037E0  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  8838  0037E2  0E00               	movlw	0
  8839  0037E4  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
  8840  0037E6  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  8841  0037E8  ECB5  F01D         	call	_gpio_pin_intialize	;wreg free
  8842  0037EC  2A14               	incf	keypad_initialize@row_counter^0,f,c
  8843  0037EE  0E03               	movlw	3
  8844  0037F0  6414               	cpfsgt	keypad_initialize@row_counter^0,c
  8845  0037F2  EFFD  F01B         	goto	u3711
  8846  0037F6  EFFF  F01B         	goto	u3710
  8847  0037FA                     u3711:
  8848  0037FA  EFEE  F01B         	goto	l4810
  8849  0037FE                     u3710:
  8850  0037FE  0E00               	movlw	0
  8851  003800  6E15               	movwf	keypad_initialize@columns_counter^0,c
  8852  003802                     l4822:
  8853  003802  5015               	movf	keypad_initialize@columns_counter^0,w,c
  8854  003804  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
  8855  003806  6E11               	movwf	??_keypad_initialize^0,c
  8856  003808  0E00               	movlw	0
  8857  00380A  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
  8858  00380C  6E12               	movwf	(??_keypad_initialize+1)^0,c
  8859  00380E  0E04               	movlw	4
  8860  003810  2411               	addwf	??_keypad_initialize^0,w,c
  8861  003812  6E01               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  8862  003814  0E00               	movlw	0
  8863  003816  2012               	addwfc	(??_keypad_initialize+1)^0,w,c
  8864  003818  6E02               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  8865  00381A  EC48  F014         	call	_gpio_pin_direction_intialize	;wreg free
  8866  00381E  6E13               	movwf	keypad_initialize@ret^0,c
  8867  003820  2A15               	incf	keypad_initialize@columns_counter^0,f,c
  8868  003822  0E05               	movlw	5
  8869  003824  6415               	cpfsgt	keypad_initialize@columns_counter^0,c
  8870  003826  EF17  F01C         	goto	u3721
  8871  00382A  EF19  F01C         	goto	u3720
  8872  00382E                     u3721:
  8873  00382E  EF01  F01C         	goto	l4822
  8874  003832                     u3720:
  8875  003832                     l4828:
  8876  003832  5013               	movf	keypad_initialize@ret^0,w,c
  8877  003834  0012               	return		;funcret
  8878  003836                     __end_of_keypad_initialize:
  8879                           	callstack 0
  8880                           
  8881 ;; *************** function _gpio_pin_intialize *****************
  8882 ;; Defined at:
  8883 ;;		line 145 in file "MCAL_layer/GPIO/hal_gpio.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  8886 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_row_pins(4), keypad_1(10), 
  8887 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  ret             1   13[COMRAM] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      unsigned char 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;Total ram usage:        4 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 1
  8906 ;; This function calls:
  8907 ;;		_gpio_pin_direction_intialize
  8908 ;;		_gpio_pin_write_logic
  8909 ;; This function is called by:
  8910 ;;		_lcd_4bit_intialize
  8911 ;;		_keypad_initialize
  8912 ;;		_led_initialize
  8913 ;;		_seven_segment_intialize
  8914 ;;		_lcd_8bit_intialize
  8915 ;;		_dc_motor_initialize
  8916 ;;		_relay_initialize
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text49
  8921  003B6A                     __ptext49:
  8922                           	callstack 0
  8923  003B6A                     _gpio_pin_intialize:
  8924                           	callstack 26
  8925  003B6A                     
  8926                           ;MCAL_layer/GPIO/hal_gpio.c: 147:     if((((void*)0) == _pin_config)||(_pin_config->pin 
      +                          > 8 -1)){
  8927  003B6A  500B               	movf	gpio_pin_intialize@_pin_config^0,w,c
  8928  003B6C  100C               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  8929  003B6E  B4D8               	btfsc	status,2,c
  8930  003B70  EFBC  F01D         	goto	u3571
  8931  003B74  EFBE  F01D         	goto	u3570
  8932  003B78                     u3571:
  8933  003B78  EFCF  F01D         	goto	l4664
  8934  003B7C                     u3570:
  8935  003B7C  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  8936  003B80  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  8937  003B84  30DF               	rrcf	223,w,c
  8938  003B86  32E8               	rrcf	wreg,f,c
  8939  003B88  32E8               	rrcf	wreg,f,c
  8940  003B8A  0B07               	andlw	7
  8941  003B8C  6E0D               	movwf	??_gpio_pin_intialize^0,c
  8942  003B8E  0E07               	movlw	7
  8943  003B90  640D               	cpfsgt	??_gpio_pin_intialize^0,c
  8944  003B92  EFCD  F01D         	goto	u3581
  8945  003B96  EFCF  F01D         	goto	u3580
  8946  003B9A                     u3581:
  8947  003B9A  EFD3  F01D         	goto	l4666
  8948  003B9E                     u3580:
  8949  003B9E                     l4664:
  8950                           
  8951                           ;MCAL_layer/GPIO/hal_gpio.c: 148:         ret = (Std_ReturnType)0x00;
  8952  003B9E  0E00               	movlw	0
  8953  003BA0  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  8954                           
  8955                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     }
  8956  003BA2  EFE9  F01D         	goto	l4668
  8957  003BA6                     l4666:
  8958                           
  8959                           ;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
  8960  003BA6  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  8961  003BAA  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  8962  003BAE  EC48  F014         	call	_gpio_pin_direction_intialize	;wreg free
  8963  003BB2  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  8964                           
  8965                           ;MCAL_layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
  8966  003BB4  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  8967  003BB8  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  8968  003BBC  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  8969  003BC0  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  8970  003BC4  0E00               	movlw	0
  8971  003BC6  BEDF               	btfsc	indf2,7,c
  8972  003BC8  0E01               	movlw	1
  8973  003BCA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8974  003BCC  EC82  F015         	call	_gpio_pin_write_logic	;wreg free
  8975  003BD0  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  8976  003BD2                     l4668:
  8977                           
  8978                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     return ret;
  8979  003BD2  500E               	movf	gpio_pin_intialize@ret^0,w,c
  8980  003BD4  0012               	return		;funcret
  8981  003BD6                     __end_of_gpio_pin_intialize:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function _gpio_pin_write_logic *****************
  8985 ;; Defined at:
  8986 ;;		line 76 in file "MCAL_layer/GPIO/hal_gpio.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  8989 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_row_pins(4), keypad_1(10), 
  8990 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  8991 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  8992 ;;  logic           1    2[COMRAM] enum E2965
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  ret             1    9[COMRAM] unsigned char 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      unsigned char 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9004 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;Total ram usage:       10 bytes
  9009 ;; Hardware stack levels used: 1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_lcd_4bit_send_command
  9014 ;;		_lcd_4bit_send_char_data
  9015 ;;		_lcd_send_4bits
  9016 ;;		_lcd_4bits_send_enable_signal
  9017 ;;		_keypad_get_value
  9018 ;;		_led_turn_on
  9019 ;;		_led_turn_off
  9020 ;;		_gpio_pin_intialize
  9021 ;;		_seven_segment_write_number
  9022 ;;		_lcd_8bit_send_command
  9023 ;;		_lcd_8bit_send_char_data
  9024 ;;		_lcd_8bits_send_enable_signal
  9025 ;;		_dc_motor_move_right
  9026 ;;		_dc_motor_move_left
  9027 ;;		_dc_motor_stop
  9028 ;;		_relay_turn_on
  9029 ;;		_relay_turn_off
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text50
  9034  002B04                     __ptext50:
  9035                           	callstack 0
  9036  002B04                     _gpio_pin_write_logic:
  9037                           	callstack 29
  9038  002B04                     
  9039                           ;MCAL_layer/GPIO/hal_gpio.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x01;
  9040  002B04  0E01               	movlw	1
  9041  002B06  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  9042  002B08                     
  9043                           ;MCAL_layer/GPIO/hal_gpio.c: 78:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1)){
  9044  002B08  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  9045  002B0A  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  9046  002B0C  B4D8               	btfsc	status,2,c
  9047  002B0E  EF8B  F015         	goto	u2951
  9048  002B12  EF8D  F015         	goto	u2950
  9049  002B16                     u2951:
  9050  002B16  EF9E  F015         	goto	l4330
  9051  002B1A                     u2950:
  9052  002B1A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  9053  002B1E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  9054  002B22  30DF               	rrcf	223,w,c
  9055  002B24  32E8               	rrcf	wreg,f,c
  9056  002B26  32E8               	rrcf	wreg,f,c
  9057  002B28  0B07               	andlw	7
  9058  002B2A  6E04               	movwf	??_gpio_pin_write_logic^0,c
  9059  002B2C  0E07               	movlw	7
  9060  002B2E  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  9061  002B30  EF9C  F015         	goto	u2961
  9062  002B34  EF9E  F015         	goto	u2960
  9063  002B38                     u2961:
  9064  002B38  EF01  F016         	goto	l4338
  9065  002B3C                     u2960:
  9066  002B3C                     l4330:
  9067                           
  9068                           ;MCAL_layer/GPIO/hal_gpio.c: 79:         ret = (Std_ReturnType)0x00;
  9069  002B3C  0E00               	movlw	0
  9070  002B3E  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  9071                           
  9072                           ;MCAL_layer/GPIO/hal_gpio.c: 80:     }
  9073  002B40  EF16  F016         	goto	l4340
  9074  002B44                     l4332:
  9075                           
  9076                           ;MCAL_layer/GPIO/hal_gpio.c: 84:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  9077  002B44  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  9078  002B48  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  9079  002B4C  30DF               	rrcf	223,w,c
  9080  002B4E  32E8               	rrcf	wreg,f,c
  9081  002B50  32E8               	rrcf	wreg,f,c
  9082  002B52  0B07               	andlw	7
  9083  002B54  6E04               	movwf	??_gpio_pin_write_logic^0,c
  9084  002B56  0E01               	movlw	1
  9085  002B58  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9086  002B5A  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  9087  002B5C  EFB2  F015         	goto	u2974
  9088  002B60                     u2975:
  9089  002B60  90D8               	bcf	status,0,c
  9090  002B62  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9091  002B64                     u2974:
  9092  002B64  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  9093  002B66  EFB0  F015         	goto	u2975
  9094  002B6A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9095  002B6C  0AFF               	xorlw	255
  9096  002B6E  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  9097  002B70  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  9098  002B74  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  9099  002B78  50DF               	movf	223,w,c
  9100  002B7A  0B07               	andlw	7
  9101  002B7C  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  9102  002B7E  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  9103  002B80  0D02               	mullw	2
  9104  002B82  0EAB               	movlw	low _lat_registers
  9105  002B84  24F3               	addwf	243,w,c
  9106  002B86  6ED9               	movwf	fsr2l,c
  9107  002B88  0E01               	movlw	high _lat_registers
  9108  002B8A  20F4               	addwfc	prodh,w,c
  9109  002B8C  6EDA               	movwf	fsr2h,c
  9110  002B8E  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  9111  002B92  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  9112  002B96  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  9113  002B9A  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  9114  002B9E  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  9115  002BA0  16DF               	andwf	indf2,f,c
  9116                           
  9117                           ;MCAL_layer/GPIO/hal_gpio.c: 85:                 break;
  9118  002BA2  EF16  F016         	goto	l4340
  9119  002BA6                     l4334:
  9120                           
  9121                           ;MCAL_layer/GPIO/hal_gpio.c: 87:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  9122  002BA6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  9123  002BAA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  9124  002BAE  30DF               	rrcf	223,w,c
  9125  002BB0  32E8               	rrcf	wreg,f,c
  9126  002BB2  32E8               	rrcf	wreg,f,c
  9127  002BB4  0B07               	andlw	7
  9128  002BB6  6E04               	movwf	??_gpio_pin_write_logic^0,c
  9129  002BB8  0E01               	movlw	1
  9130  002BBA  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9131  002BBC  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  9132  002BBE  EFE3  F015         	goto	u2984
  9133  002BC2                     u2985:
  9134  002BC2  90D8               	bcf	status,0,c
  9135  002BC4  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9136  002BC6                     u2984:
  9137  002BC6  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  9138  002BC8  EFE1  F015         	goto	u2985
  9139  002BCC  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  9140  002BD0  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  9141  002BD4  50DF               	movf	223,w,c
  9142  002BD6  0B07               	andlw	7
  9143  002BD8  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  9144  002BDA  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  9145  002BDC  0D02               	mullw	2
  9146  002BDE  0EAB               	movlw	low _lat_registers
  9147  002BE0  24F3               	addwf	243,w,c
  9148  002BE2  6ED9               	movwf	fsr2l,c
  9149  002BE4  0E01               	movlw	high _lat_registers
  9150  002BE6  20F4               	addwfc	prodh,w,c
  9151  002BE8  6EDA               	movwf	fsr2h,c
  9152  002BEA  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  9153  002BEE  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  9154  002BF2  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  9155  002BF6  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  9156  002BFA  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9157  002BFC  12DF               	iorwf	indf2,f,c
  9158                           
  9159                           ;MCAL_layer/GPIO/hal_gpio.c: 88:                 break;
  9160  002BFE  EF16  F016         	goto	l4340
  9161  002C02                     l4338:
  9162  002C02  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  9163  002C04  6E04               	movwf	??_gpio_pin_write_logic^0,c
  9164  002C06  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  9165                           
  9166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9167                           ; Switch size 1, requested type "simple"
  9168                           ; Number of cases is 1, Range of values is 0 to 0
  9169                           ; switch strategies available:
  9170                           ; Name         Instructions Cycles
  9171                           ; simple_byte            4     3 (average)
  9172                           ;	Chosen strategy is simple_byte
  9173  002C08  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9174  002C0A  0A00               	xorlw	0	; case 0
  9175  002C0C  B4D8               	btfsc	status,2,c
  9176  002C0E  EF0B  F016         	goto	l6316
  9177  002C12  EF9E  F015         	goto	l4330
  9178  002C16                     l6316:
  9179                           
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 2, Range of values is 0 to 1
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte            7     4 (average)
  9185                           ;	Chosen strategy is simple_byte
  9186  002C16  5004               	movf	??_gpio_pin_write_logic^0,w,c
  9187  002C18  0A00               	xorlw	0	; case 0
  9188  002C1A  B4D8               	btfsc	status,2,c
  9189  002C1C  EFA2  F015         	goto	l4332
  9190  002C20  0A01               	xorlw	1	; case 1
  9191  002C22  B4D8               	btfsc	status,2,c
  9192  002C24  EFD3  F015         	goto	l4334
  9193  002C28  EF9E  F015         	goto	l4330
  9194  002C2C                     l4340:
  9195                           
  9196                           ;MCAL_layer/GPIO/hal_gpio.c: 93:     return ret;
  9197  002C2C  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  9198  002C2E  0012               	return		;funcret
  9199  002C30                     __end_of_gpio_pin_write_logic:
  9200                           	callstack 0
  9201                           
  9202 ;; *************** function _gpio_pin_direction_intialize *****************
  9203 ;; Defined at:
  9204 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  9207 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_column_pins(6), keypad_1.keypad_row_pins(4), 
  9208 ;;		 -> keypad_1(10), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;  ret             1    8[COMRAM] unsigned char 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      unsigned char 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;Total ram usage:        9 bytes
  9225 ;; Hardware stack levels used: 1
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_keypad_initialize
  9230 ;;		_gpio_pin_intialize
  9231 ;;		_button_intialize
  9232 ;;		_Interrupt_INTx_Pin_Init
  9233 ;;		_Interrupt_RBx_Pin_Init
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text51
  9238  002890                     __ptext51:
  9239                           	callstack 0
  9240  002890                     _gpio_pin_direction_intialize:
  9241                           	callstack 26
  9242  002890                     
  9243                           ;MCAL_layer/GPIO/hal_gpio.c: 23:     Std_ReturnType ret = (Std_ReturnType)0x01;
  9244  002890  0E01               	movlw	1
  9245  002892  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  9246  002894                     
  9247                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1)){
  9248  002894  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  9249  002896  1002               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  9250  002898  B4D8               	btfsc	status,2,c
  9251  00289A  EF51  F014         	goto	u3241
  9252  00289E  EF53  F014         	goto	u3240
  9253  0028A2                     u3241:
  9254  0028A2  EF64  F014         	goto	l4498
  9255  0028A6                     u3240:
  9256  0028A6  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9257  0028AA  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9258  0028AE  30DF               	rrcf	223,w,c
  9259  0028B0  32E8               	rrcf	wreg,f,c
  9260  0028B2  32E8               	rrcf	wreg,f,c
  9261  0028B4  0B07               	andlw	7
  9262  0028B6  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  9263  0028B8  0E07               	movlw	7
  9264  0028BA  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  9265  0028BC  EF62  F014         	goto	u3251
  9266  0028C0  EF64  F014         	goto	u3250
  9267  0028C4                     u3251:
  9268  0028C4  EFC7  F014         	goto	l4506
  9269  0028C8                     u3250:
  9270  0028C8                     l4498:
  9271                           
  9272                           ;MCAL_layer/GPIO/hal_gpio.c: 25:         ret = (Std_ReturnType)0x00;
  9273  0028C8  0E00               	movlw	0
  9274  0028CA  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  9275                           
  9276                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     }
  9277  0028CC  EFE8  F014         	goto	l4508
  9278  0028D0                     l4500:
  9279                           
  9280                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  9281  0028D0  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9282  0028D4  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9283  0028D8  30DF               	rrcf	223,w,c
  9284  0028DA  32E8               	rrcf	wreg,f,c
  9285  0028DC  32E8               	rrcf	wreg,f,c
  9286  0028DE  0B07               	andlw	7
  9287  0028E0  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  9288  0028E2  0E01               	movlw	1
  9289  0028E4  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  9290  0028E6  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  9291  0028E8  EF78  F014         	goto	u3264
  9292  0028EC                     u3265:
  9293  0028EC  90D8               	bcf	status,0,c
  9294  0028EE  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  9295  0028F0                     u3264:
  9296  0028F0  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  9297  0028F2  EF76  F014         	goto	u3265
  9298  0028F6  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  9299  0028F8  0AFF               	xorlw	255
  9300  0028FA  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  9301  0028FC  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9302  002900  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9303  002904  50DF               	movf	223,w,c
  9304  002906  0B07               	andlw	7
  9305  002908  6E06               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  9306  00290A  5006               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  9307  00290C  0D02               	mullw	2
  9308  00290E  0EB5               	movlw	low _tris_registers
  9309  002910  24F3               	addwf	243,w,c
  9310  002912  6ED9               	movwf	fsr2l,c
  9311  002914  0E01               	movlw	high _tris_registers
  9312  002916  20F4               	addwfc	prodh,w,c
  9313  002918  6EDA               	movwf	fsr2h,c
  9314  00291A  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+4
  9315  00291E  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+5
  9316  002922  C007  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  9317  002926  C008  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  9318  00292A  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  9319  00292C  16DF               	andwf	indf2,f,c
  9320                           
  9321                           ;MCAL_layer/GPIO/hal_gpio.c: 31:                 break;
  9322  00292E  EFE8  F014         	goto	l4508
  9323  002932                     l4502:
  9324                           
  9325                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  9326  002932  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9327  002936  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9328  00293A  30DF               	rrcf	223,w,c
  9329  00293C  32E8               	rrcf	wreg,f,c
  9330  00293E  32E8               	rrcf	wreg,f,c
  9331  002940  0B07               	andlw	7
  9332  002942  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  9333  002944  0E01               	movlw	1
  9334  002946  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  9335  002948  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  9336  00294A  EFA9  F014         	goto	u3274
  9337  00294E                     u3275:
  9338  00294E  90D8               	bcf	status,0,c
  9339  002950  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  9340  002952                     u3274:
  9341  002952  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  9342  002954  EFA7  F014         	goto	u3275
  9343  002958  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9344  00295C  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9345  002960  50DF               	movf	223,w,c
  9346  002962  0B07               	andlw	7
  9347  002964  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  9348  002966  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  9349  002968  0D02               	mullw	2
  9350  00296A  0EB5               	movlw	low _tris_registers
  9351  00296C  24F3               	addwf	243,w,c
  9352  00296E  6ED9               	movwf	fsr2l,c
  9353  002970  0E01               	movlw	high _tris_registers
  9354  002972  20F4               	addwfc	prodh,w,c
  9355  002974  6EDA               	movwf	fsr2h,c
  9356  002976  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  9357  00297A  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  9358  00297E  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  9359  002982  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  9360  002986  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  9361  002988  12DF               	iorwf	indf2,f,c
  9362                           
  9363                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  9364  00298A  EFE8  F014         	goto	l4508
  9365  00298E                     l4506:
  9366  00298E  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  9367  002992  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  9368  002996  BCDF               	btfsc	indf2,6,c
  9369  002998  EFD0  F014         	goto	u3281
  9370  00299C  EFD3  F014         	goto	u3280
  9371  0029A0                     u3281:
  9372  0029A0  0E01               	movlw	1
  9373  0029A2  EFD4  F014         	goto	u3290
  9374  0029A6                     u3280:
  9375  0029A6  0E00               	movlw	0
  9376  0029A8                     u3290:
  9377  0029A8  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  9378  0029AA  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  9379                           
  9380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9381                           ; Switch size 1, requested type "simple"
  9382                           ; Number of cases is 1, Range of values is 0 to 0
  9383                           ; switch strategies available:
  9384                           ; Name         Instructions Cycles
  9385                           ; simple_byte            4     3 (average)
  9386                           ;	Chosen strategy is simple_byte
  9387  0029AC  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  9388  0029AE  0A00               	xorlw	0	; case 0
  9389  0029B0  B4D8               	btfsc	status,2,c
  9390  0029B2  EFDD  F014         	goto	l6318
  9391  0029B6  EF64  F014         	goto	l4498
  9392  0029BA                     l6318:
  9393                           
  9394                           ; Switch size 1, requested type "simple"
  9395                           ; Number of cases is 2, Range of values is 0 to 1
  9396                           ; switch strategies available:
  9397                           ; Name         Instructions Cycles
  9398                           ; simple_byte            7     4 (average)
  9399                           ;	Chosen strategy is simple_byte
  9400  0029BA  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  9401  0029BC  0A00               	xorlw	0	; case 0
  9402  0029BE  B4D8               	btfsc	status,2,c
  9403  0029C0  EF68  F014         	goto	l4500
  9404  0029C4  0A01               	xorlw	1	; case 1
  9405  0029C6  B4D8               	btfsc	status,2,c
  9406  0029C8  EF99  F014         	goto	l4502
  9407  0029CC  EF64  F014         	goto	l4498
  9408  0029D0                     l4508:
  9409                           
  9410                           ;MCAL_layer/GPIO/hal_gpio.c: 42:     return ret;
  9411  0029D0  5009               	movf	gpio_pin_direction_intialize@ret^0,w,c
  9412  0029D2  0012               	return		;funcret
  9413  0029D4                     __end_of_gpio_pin_direction_intialize:
  9414                           	callstack 0
  9415                           
  9416                           	psect	rparam
  9417  0000                     
  9418                           	psect	idloc
  9419                           
  9420                           ;Config register IDLOC0 @ 0x200000
  9421                           ;	unspecified, using default values
  9422  200000                     	org	2097152
  9423  200000  FF                 	db	255
  9424                           
  9425                           ;Config register IDLOC1 @ 0x200001
  9426                           ;	unspecified, using default values
  9427  200001                     	org	2097153
  9428  200001  FF                 	db	255
  9429                           
  9430                           ;Config register IDLOC2 @ 0x200002
  9431                           ;	unspecified, using default values
  9432  200002                     	org	2097154
  9433  200002  FF                 	db	255
  9434                           
  9435                           ;Config register IDLOC3 @ 0x200003
  9436                           ;	unspecified, using default values
  9437  200003                     	org	2097155
  9438  200003  FF                 	db	255
  9439                           
  9440                           ;Config register IDLOC4 @ 0x200004
  9441                           ;	unspecified, using default values
  9442  200004                     	org	2097156
  9443  200004  FF                 	db	255
  9444                           
  9445                           ;Config register IDLOC5 @ 0x200005
  9446                           ;	unspecified, using default values
  9447  200005                     	org	2097157
  9448  200005  FF                 	db	255
  9449                           
  9450                           ;Config register IDLOC6 @ 0x200006
  9451                           ;	unspecified, using default values
  9452  200006                     	org	2097158
  9453  200006  FF                 	db	255
  9454                           
  9455                           ;Config register IDLOC7 @ 0x200007
  9456                           ;	unspecified, using default values
  9457  200007                     	org	2097159
  9458  200007  FF                 	db	255
  9459                           
  9460                           	psect	config
  9461                           
  9462                           ; Padding undefined space
  9463  300000                     	org	3145728
  9464  300000  FF                 	db	255
  9465                           
  9466                           ;Config register CONFIG1H @ 0x300001
  9467                           ;	Oscillator Selection bits
  9468                           ;	OSC = HS, HS oscillator
  9469                           ;	Fail-Safe Clock Monitor Enable bit
  9470                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9471                           ;	Internal/External Oscillator Switchover bit
  9472                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9473  300001                     	org	3145729
  9474  300001  02                 	db	2
  9475                           
  9476                           ;Config register CONFIG2L @ 0x300002
  9477                           ;	Power-up Timer Enable bit
  9478                           ;	PWRT = OFF, PWRT disabled
  9479                           ;	Brown-out Reset Enable bits
  9480                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9481                           ;	Brown Out Reset Voltage bits
  9482                           ;	BORV = 1, 
  9483  300002                     	org	3145730
  9484  300002  09                 	db	9
  9485                           
  9486                           ;Config register CONFIG2H @ 0x300003
  9487                           ;	Watchdog Timer Enable bit
  9488                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9489                           ;	Watchdog Timer Postscale Select bits
  9490                           ;	WDTPS = 32768, 1:32768
  9491  300003                     	org	3145731
  9492  300003  1E                 	db	30
  9493                           
  9494                           ; Padding undefined space
  9495  300004                     	org	3145732
  9496  300004  FF                 	db	255
  9497                           
  9498                           ;Config register CONFIG3H @ 0x300005
  9499                           ;	CCP2 MUX bit
  9500                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9501                           ;	PORTB A/D Enable bit
  9502                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9503                           ;	Low-Power Timer1 Oscillator Enable bit
  9504                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9505                           ;	MCLR Pin Enable bit
  9506                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9507  300005                     	org	3145733
  9508  300005  81                 	db	129
  9509                           
  9510                           ;Config register CONFIG4L @ 0x300006
  9511                           ;	Stack Full/Underflow Reset Enable bit
  9512                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9513                           ;	Single-Supply ICSP Enable bit
  9514                           ;	LVP = OFF, Single-Supply ICSP disabled
  9515                           ;	Extended Instruction Set Enable bit
  9516                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9517                           ;	Background Debugger Enable bit
  9518                           ;	DEBUG = 0x1, unprogrammed default
  9519  300006                     	org	3145734
  9520  300006  81                 	db	129
  9521                           
  9522                           ; Padding undefined space
  9523  300007                     	org	3145735
  9524  300007  FF                 	db	255
  9525                           
  9526                           ;Config register CONFIG5L @ 0x300008
  9527                           ;	Code Protection bit
  9528                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9529                           ;	Code Protection bit
  9530                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9531                           ;	Code Protection bit
  9532                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9533                           ;	Code Protection bit
  9534                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9535  300008                     	org	3145736
  9536  300008  0F                 	db	15
  9537                           
  9538                           ;Config register CONFIG5H @ 0x300009
  9539                           ;	Boot Block Code Protection bit
  9540                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9541                           ;	Data EEPROM Code Protection bit
  9542                           ;	CPD = OFF, Data EEPROM not code-protected
  9543  300009                     	org	3145737
  9544  300009  C0                 	db	192
  9545                           
  9546                           ;Config register CONFIG6L @ 0x30000A
  9547                           ;	Write Protection bit
  9548                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9549                           ;	Write Protection bit
  9550                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9551                           ;	Write Protection bit
  9552                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9553                           ;	Write Protection bit
  9554                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9555  30000A                     	org	3145738
  9556  30000A  0F                 	db	15
  9557                           
  9558                           ;Config register CONFIG6H @ 0x30000B
  9559                           ;	Configuration Register Write Protection bit
  9560                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9561                           ;	Boot Block Write Protection bit
  9562                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9563                           ;	Data EEPROM Write Protection bit
  9564                           ;	WRTD = OFF, Data EEPROM not write-protected
  9565  30000B                     	org	3145739
  9566  30000B  E0                 	db	224
  9567                           
  9568                           ;Config register CONFIG7L @ 0x30000C
  9569                           ;	Table Read Protection bit
  9570                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9571                           ;	Table Read Protection bit
  9572                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9573                           ;	Table Read Protection bit
  9574                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9575                           ;	Table Read Protection bit
  9576                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9577  30000C                     	org	3145740
  9578  30000C  0F                 	db	15
  9579                           
  9580                           ;Config register CONFIG7H @ 0x30000D
  9581                           ;	Boot Block Table Read Protection bit
  9582                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9583  30000D                     	org	3145741
  9584  30000D  40                 	db	64
  9585                           tosu	equ	0xFFF
  9586                           tosh	equ	0xFFE
  9587                           tosl	equ	0xFFD
  9588                           stkptr	equ	0xFFC
  9589                           pclatu	equ	0xFFB
  9590                           pclath	equ	0xFFA
  9591                           pcl	equ	0xFF9
  9592                           tblptru	equ	0xFF8
  9593                           tblptrh	equ	0xFF7
  9594                           tblptrl	equ	0xFF6
  9595                           tablat	equ	0xFF5
  9596                           prodh	equ	0xFF4
  9597                           prodl	equ	0xFF3
  9598                           indf0	equ	0xFEF
  9599                           postinc0	equ	0xFEE
  9600                           postdec0	equ	0xFED
  9601                           preinc0	equ	0xFEC
  9602                           plusw0	equ	0xFEB
  9603                           fsr0h	equ	0xFEA
  9604                           fsr0l	equ	0xFE9
  9605                           wreg	equ	0xFE8
  9606                           indf1	equ	0xFE7
  9607                           postinc1	equ	0xFE6
  9608                           postdec1	equ	0xFE5
  9609                           preinc1	equ	0xFE4
  9610                           plusw1	equ	0xFE3
  9611                           fsr1h	equ	0xFE2
  9612                           fsr1l	equ	0xFE1
  9613                           bsr	equ	0xFE0
  9614                           indf2	equ	0xFDF
  9615                           postinc2	equ	0xFDE
  9616                           postdec2	equ	0xFDD
  9617                           preinc2	equ	0xFDC
  9618                           plusw2	equ	0xFDB
  9619                           fsr2h	equ	0xFDA
  9620                           fsr2l	equ	0xFD9
  9621                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    148
    Data        60
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128    100     128
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), STR_11(CODE[3]), STR_7(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), STR_11(CODE[3]), STR_7(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), arr(BANK1[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), arr(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2413$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2413$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 100
		 -> arr(BANK1[11]), postfix(BANK1[80]), infix(BANK2[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> arr(BANK1[11]), postfix(BANK1[80]), infix(BANK2[100]), 

    evaluate_Postfix@postfix	PTR const unsigned long  size(2) Largest target is 80
		 -> postfix(BANK1[80]), 

    infixToPostfix@postfix	PTR unsigned long  size(2) Largest target is 80
		 -> postfix(BANK1[80]), 

    infixToPostfix@infix	PTR const unsigned char  size(2) Largest target is 100
		 -> infix(BANK2[100]), 

    pop_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluate_Postfix@operandStack(BANK0[82]), infixToPostfix@operatorStack(COMRAM[82]), 

    push_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluate_Postfix@operandStack(BANK0[82]), infixToPostfix@operatorStack(COMRAM[82]), 

    initialize_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluate_Postfix@operandStack(BANK0[82]), infixToPostfix@operatorStack(COMRAM[82]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1238$InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1238$InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1229$InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), keypad_1(BANK1[10]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), button_read_state@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> keypad_1.keypad_column_pins(BANK1[6]), keypad_1(BANK1[10]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), keypad_1(BANK1[10]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_column_pins(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), 
		 -> keypad_1(BANK1[10]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> val(COMRAM[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 10
		 -> keypad_1(BANK1[10]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(2) Largest target is 10
		 -> keypad_1(BANK1[10]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> arr(BANK1[11]), postfix(BANK1[80]), infix(BANK2[100]), 

    convert_uint32_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), STR_4(CODE[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint32_to_string
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_4bits_send_enable_signal
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _infixToPostfix->_push_t
    _evaluate_Postfix->_doMath
    _push_t->_operator_type
    _doMath->___lldiv
    _Is_digit->___xxtofl
    _convert_uint32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ecu_layer_intialize->_lcd_4bit_intialize
    _led_initialize->_gpio_pin_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_4bits_send_enable_signal
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_evaluate_Postfix
    _convert_uint32_to_string->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  175930
                                            122 COMRAM     4     4      0
              _application_intialize
           _convert_uint32_to_string
                   _evaluate_Postfix
                     _infixToPostfix
                   _keypad_get_value
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    5095
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    5095
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   36787
                                             25 COMRAM     7     1      6
            _lcd_4bit_send_char_data
               _lcd_4bits_set_cursor
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   37068
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 7     3      4   19328
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16670
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     7      4    5959
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     460
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _infixToPostfix                                     100    96      4    2832
                                             13 COMRAM   100    96      4
                             ___lmul
                        _check_digit
                       _initialize_t
                      _operator_type
                              _pop_t
                         _precedence
                             _push_t
 ---------------------------------------------------------------------------------
 (2) _precedence                                           3     1      2     110
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _operator_type                                        5     1      4      88
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _check_digit                                          3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _evaluate_Postfix                                   108   104      4    5221
                                             25 COMRAM     8     4      4
                                              0 BANK0    100   100      0
                           _Is_digit
                           ___xxtofl
                             _doMath
                       _initialize_t
                              _pop_t
                             _push_t
 ---------------------------------------------------------------------------------
 (2) _push_t                                               8     2      6     522
                                              5 COMRAM     8     2      6
                      _operator_type (ARG)
 ---------------------------------------------------------------------------------
 (2) _pop_t                                                6     2      4     424
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _initialize_t                                         2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _doMath                                              12     0     12    1328
                                             13 COMRAM    12     0     12
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     993
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Is_digit                                             4     0      4    1288
                                             14 COMRAM     4     0      4
                             ___fleq
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8    1102
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _convert_uint32_to_string                             7     1      6   15746
                                            115 COMRAM     7     1      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   12711
                                            107 COMRAM     8     0      8
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   12050
                                             99 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           54    48      6   11686
                                             63 COMRAM    36    30      6
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4215
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     909
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4814
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3013
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    2771
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   40390
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   40389
                  _keypad_initialize
                 _lcd_4bit_intialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     3      2    6955
                                             14 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_intialize                                   6     4      2   25839
                                             18 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18646
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5702
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         4     2      2    5264
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    7     5      2    7591
                                             14 COMRAM     7     5      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6726
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     559
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _ecu_layer_intialize
       _keypad_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_4bit_intialize
         _gpio_pin_intialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bits_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_intialize
   _convert_uint32_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
   _evaluate_Postfix
     _Is_digit
       ___fleq
       ___xxtofl (ARG)
     ___xxtofl
     _doMath
       ___lldiv
       ___lmul
     _initialize_t
     _pop_t
     _push_t
       _operator_type (ARG)
   _infixToPostfix
     ___lmul
     _check_digit
     _initialize_t
     _operator_type
     _pop_t
     _precedence
     _push_t
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
       _lcd_send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bits_set_cursor
     _strlen (ARG)
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic
   _memset
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     64      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITBIGSFRhhhh       2A      0       0      36        0.0%
BITBIGSFRhlhhhh      C      0       0      38        0.0%
BITBIGSFRhlhl        C      0       0      40        0.0%
BITBIGSFRhhhl        B      0       0      37        0.0%
BITBIGSFRhlhhhl      7      0       0      39        0.0%
BITBIGSFRhll         6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     23A      44        0.0%
DATA                 0      0     23A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Aug 30 22:08:33 2023

                        ?_lcd_send_4bits 000B                              _SSPSTATbits 000FC7  
                                     _L1 1071                                       _L2 106D  
                                     _L3 1069                                       _L4 1065  
                                     _L5 1061                                       _L6 105D  
                                     _P1 1059                                       _P2 1055  
                                     l71 2D56                                       _P3 1051  
                                     _P4 104D                                       l81 3A8A  
                                     _P5 1049                                       l76 3AFC  
                                     l86 3E04                                       _bp 1081  
                                     _cp 1035                                       _op 00EA  
                                    l102 37B4                                      l202 35CC  
                                    l251 3834                                      l163 3D6C  
                                    l413 347A                                      l406 2C2E  
                                    l176 3CA6                                      l265 2E78  
                                    l281 3944                                      l274 38CE  
                                    l427 3BD4                                      l179 3F4E  
                                    l339 4018                                      l292 3A18  
                                    l285 39A2                                      l278 392C  
                                    l288 39BA                                      l387 29D2  
                                    l902 2B02                                      l905 2AF2  
                                    l921 3E8E                                      l914 2F88  
                                    l924 3E4A                                      l918 402E  
                                    l934 38B2                                      l928 3F86  
                                    l890 3660                                      l879 403A  
                                    l983 3C2E                                      l887 3670  
                                    l959 1BC6                                      l984 3C3E  
                                    l969 2278                                      l999 3704  
   __end_of_lcd_4bits_send_enable_signal 3F50             _lcd_4bits_send_enable_signal 3F14  
                   keypad_initialize@ret 0013                                      _lg2 1045  
                                    _abs 3ED4                                      _arr 0196  
                                    _pad 32FE                _RB5_InterruptHandler_HIGH 011A  
                                    _val 007F                                      _pos 00FB  
                                    _ovt 1039                      led_initialize@F3045 00F6  
                                    prod 000FF3                                      wreg 000FE8  
                  relay_initialize@F3039 00F2                             ?_led_turn_on 000B  
            lcd_send_4bits@_data_command 000D                ?_convert_uint32_to_string 0074  
                                   l1006 3714                                     ?_abs 0013  
                                   l2023 3FF2                                     l1231 3524  
                                   l1410 3058                                     l2027 3162  
                                   l1420 3212                                     l1086 25B4  
                                   l1417 3078                                     l1099 288E  
                                   l1427 3232                                     l1630 242C  
                             Is_digit@op 000F                                     l5000 25E0  
                                   l1705 1C68                                     l1641 23C4  
                                   l5010 2688                                     l1730 1EE4  
                                   l1634 2368                                     l1707 1C70  
                                   l1627 22D0                                     l5020 270E  
                                   l5012 26B4                                     l5004 2616  
                                   l1652 272A                                     l4300 3280  
                                   l1740 20AE                                     l1732 1EEC  
                                   l1725 1EAA                                     l5022 2714  
                                   l5006 266E                                     l4302 32B6  
                                   l4310 3FCE                                     l5030 3D88  
                                   l5102 2AB8                                     l5040 3FF4  
                                   l5024 2718                                     l5016 26CE  
                                   l4400 2762                                     l4320 3EAE  
                                   l4312 3FE6                                     l5032 3D90  
                                   l5120 2F42                                     l5112 2E7A  
                                   l5200 23A6                                     l5104 2AD6  
                                   l1665 3DBE                                     l4330 2B3C  
                                   l5042 4000                                     l5018 2702  
                                   l4410 27CA                                     l4402 2770  
                                   l4322 3EB2                                     l4306 3FBE  
                                   l5034 3DAC                                     l5026 3D6E  
                                   l5114 2EAC                                     l5122 2F74  
                                   l5210 23FC                                     l5202 23B4  
                                   l1763 3F0A                                     l1747 18DC  
                                   l4500 28D0                                     l4332 2B44  
                                   l4340 2C2C                                     l4324 2B04  
                                   l5044 400C                                     l4412 27D8  
                                   l4420 283E                                     l4404 2790  
                                   l4316 3E90                                     l4308 3FCA  
                                   l5028 3D80                                     l5116 2EDE  
                                   l5212 240C                                     l5204 23D2  
                                   l5108 2AF2                                     l5132 401A  
                                   l5140 3F52                                     l5060 3614  
                                   l5052 35EE                                     l5220 3DC0  
                                   l6100 1128                                     l4502 2932  
                                   l4334 2BA6                                     l4326 2B08  
                                   l5038 3FF4                                     l4350 2432  
                                   l4422 284E                                     l4414 2806  
                                   l4406 27AE                                     l1766 3F12  
                                   l4318 3E9C                                     l1694 3344  
                                   l4430 2F96                                     l1758 3D02  
                                   l5118 2F10                                     l5214 241A  
                                   l5206 23D4                                     l5134 3E4C  
                                   l5142 3F62                                     l5070 364C  
                                   l5062 3626                                     l5054 3600  
                                   l5046 35D0                                     l5310 2D94  
                                   l5302 2D58                                     l5222 3DC0  
                                   l6110 1168                                     l6102 1138  
                                   l1759 3D0A                                     l4328 2B1A  
                                   l4520 3C56                                     l4360 2492  
                                   l4352 2440                                     l4424 286E  
                                   l4416 2826                                     l4408 27B6  
                                   l4440 2FF0                                     l4432 2FB4  
                                   l5128 2F80                                     l5216 241C  
                                   l5208 23D8                                     l5080 29F2  
                                   l5136 3E06                                     l5144 3F72  
                                   l5048 35E2                                     l5160 3868  
                                   l5152 3838                                     l5304 2D68  
                                   l5224 3DD2                                     l5240 374A  
                                   l5232 3716                                     l6200 13F2  
                                   l6112 1174                                     l6104 1140  
                                   l1697 3386                                     l4506 298E  
                                   l4338 2C02                                     l4530 3F14  
                                   l4522 3C6E                                     l4370 24DC  
                                   l4362 2496                                     l4354 2460  
                                   l4418 2838                                     l1778 32FC  
                                   l1786 3ED2                                     l4442 301E  
                                   l4434 2FBC                                     l4450 3164  
                                   l4610 1F14                                     l4602 1EAC  
                                   l5074 3660                                     l5170 38AA  
                                   l5162 387A                                     l5154 384A  
                                   l5330 2DD6                                     l5322 2D9C  
                                   l5306 2D7A                                     l5226 3DDA  
                                   l5242 377C                                     l5234 3716  
                                   l6210 1494                                     l6202 140A  
                                   l6130 120E                                     l6114 1184  
                                   l6106 1152                                     l1699 33C2  
                                   l4508 29D0                                     l4532 3F28  
                                   l4524 3C88                                     l4516 3C40  
                                   l4380 254C                                     l4372 24EA  
                                   l4364 24A2                                     l4356 2464  
                                   l4348 242E                                     l4292 3234  
                                   l4540 1BC8                                     l4444 303E  
                                   l4436 2FD0                                     l4428 2F8A  
                                   l4460 31DA                                     l4452 3182  
                                   l4620 1FA8                                     l4612 1F1C  
                                   l4604 1EBC                                     l5180 22E0  
                                   l5500 212E                                     l5148 3F7E  
                                   l5068 363A                                     l5164 388C  
                                   l5156 385C                                     l5340 2E0E  
                                   l5332 2DE4                                     l5324 2DB0  
                                   l5316 2D98                                     l5308 2D8C  
                                   l5228 3E02                                     l5244 3780  
                                   l5236 3728                                     l6220 14E8  
                                   l6212 14B0                                     l6204 141E  
                                   l6140 1262                                     l6132 1212  
                                   l6124 11E6                                     l6116 11A0  
                                   l6108 1164                                     l4534 3F36  
                                   l4518 3C40                                     l4382 255E  
                                   l4374 24FC                                     l4366 24C0  
                                   l4358 2472                                     l1974 403C  
                                   l4294 3246                                     l4470 3322  
                                   l4550 1C42                                     l4542 1BE8  
                                   l4446 3040                                     l4438 2FDE  
                                   l4462 31FA                                     l4454 318A  
                                   l4630 205C                                     l4622 1FAE  
                                   l4614 1F26                                     l4606 1EBE  
                                   l4702 160A                                     l5190 231E  
                                   l5182 22F6                                     l5174 227C  
                                   l5094 2A80                                     l5086 2A2A  
                                   l5078 29D4                                     l5510 21CA  
                                   l5502 2164                                     l5166 389E  
                                   l5430 18EA                                     l5350 2E66  
                                   l5342 2E1E                                     l5326 2DB2  
                                   l5246 37B2                                     l5238 3730  
                                   l6206 144E                                     l6214 14CC  
                                   l6150 12C0                                     l6142 1272  
                                   l6134 122E                                     l6126 1204  
                                   l6118 11DE                                     ?_pad 0011  
                                   l4800 37BE                                     l4536 3F4C  
                                   l4528 3F14                                     l5424 4036  
                                   l4376 252A                                     l4368 24C8  
                                   l4384 2564                                     l4392 272C  
                                   l4296 3258                                     l4480 3368  
                                   l4472 3330                                     l4560 1C9E  
                                   l4552 1C5C                                     l4544 1C10  
                                   l4640 30A4                                     l4448 3052  
                                   l4464 320C                                     l4456 319E  
                                   l4632 2076                                     l4616 1F2C  
                                   l4624 2012                                     l4608 1ED8  
                                   l4720 17A4                                     l4712 16FC  
                                   l4704 1640                                     l5192 2350  
                                   l5176 228C                                     l5096 2A9C  
                                   l5088 2A48                                     l5512 220E  
                                   l5504 216E                                     l5440 1930  
                                   l5432 18FA                                     l5344 2E52  
                                   l5328 2DC2                                     l5352 2E76  
                                   l5360 3940                                     l6216 14D0  
                                   l6208 146A                                     l6312 13C4  
                                   l6160 1304                                     l6152 12D2  
                                   l6144 1282                                     l6136 1240  
                                   l4810 37DC                                     l4802 37D0  
                                   l5426 4036                                     l4386 2574  
                                   l4378 254A                                     l4394 2730  
                                   l4490 3EEE                                     l4298 3262  
                                   l4482 3396                                     l4474 333C  
                                   l4466 32FE                                     l4570 1D3E  
                                   l4562 1CA6                                     l4554 1C78  
                                   l4546 1C30                                     l4650 30FA  
                                   l4458 31AC                                     l4626 2024  
                                   l4634 2086                                     l4618 1FA2  
                                   l4730 185C                                     l4722 17DA  
                                   l4714 1722                                     l4706 1676  
                                   l5290 3D10                                     l5194 2352  
                                   l5186 230A                                     l5178 229A  
                                   l5450 19C8                                     l5442 1938  
                                   l5434 1902                                     l5346 2E54  
                                   l5338 2DE8                                     l6314 35A4  
                                   l5362 3948                                     l6170 1332  
                                   l6218 14E2                                     l6162 1308  
                                   l6154 12D8                                     l6146 129E  
                                   l6138 1250                                     l6090 10D4  
                                   l6082 10AA                                     l4492 2890  
                                   l6316 2C16                                     l4660 3B6A  
                                   l4812 37EC                                     l4804 37D8  
                                   l4388 2594                                     l4396 273E  
                                   l4484 33AA                                     l4476 3350  
                                   l4468 330E                                     l4580 1DFA  
                                   l4572 1D44                                     l4564 1CB0  
                                   l4556 1C8A                                     l4548 1C40  
                                   l4652 310C                                     l4644 30B0  
                                   l4628 2042                                     l4740 1898  
                                   l4732 186A                                     l4716 176C  
                                   l4900 3CB0                                     l5292 3D22  
                                   l5196 235E                                     l5188 2312  
                                   l5508 2192                                     l5516 222E  
                                   l5460 1A46                                     l5452 19EC  
                                   l5444 1950                                     l5436 190E  
                                   l5428 18DE                                     l5348 2E64  
                                   l5380 39F4                                     l5372 39A4  
                                   l5364 397E                                     l5356 392E  
                                   l6172 1336                                     l6148 12BA  
                                   l6156 12DC                                     l6164 130E  
                                   l6092 10E6                                     l6084 10AA  
                                   l6318 29BA                                     l4494 2894  
                                   l4662 3B7C                                     l4822 3802  
                                   l4814 37EE                                     l4398 275E  
                                   l4478 3364                                     l4590 1E4C  
                                   l4582 1E14                                     l4566 1CB6  
                                   l4574 1DA8                                     l4558 1C98  
                                   l4654 313A                                     l4646 30BE  
                                   l4638 307A                                     l4734 187E  
                                   l4902 3CBE                                     l5294 3D2A  
                                   l5198 239A                                     l5518 225C  
                                   l5470 1AC2                                     l5462 1A6E  
                                   l5454 1A0A                                     l5446 1966  
                                   l5438 191E                                     l4910 33DA  
                                   l5382 39F6                                     l5374 39A4  
                                   l5366 3980                                     l5358 392E  
                                   l6190 1380                                     l6182 1364  
                                   l6174 1346                                     l6166 131E  
                                   l6158 12EC                                     l6094 10F2  
                                   l6086 10AE                                     l4496 28A6  
                                   l4664 3B9E                                     l4824 3820  
                                   l4816 37FE                                     l4680 3AFA  
                                   l4672 3A8C                                     l4760 2C6E  
                                   l4752 2C30                                     l4840 3908  
                                   l4832 38B4                                     l4488 3ED4  
                                   l4592 1E5E                                     l4576 1DC2  
                                   l4584 1E24                                     l4568 1D38  
                                   l4648 30DC                                     l4728 1836  
                                   l4744 18A4                                     l4904 3CE4  
                                   l5296 3D46                                     l5288 3D0C  
                                   l5480 1B8E                                     l5472 1B14  
                                   l5464 1A76                                     l5456 1A32  
                                   l5448 19C4                                     l4912 33EC  
                                   l5384 3A08                                     l5376 39B6  
                                   l5368 3992                                     l6184 1368  
                                   l6176 134C                                     l6096 10F6  
                                   l6088 10C2                                     l4498 28C8  
                                   l4666 3BA6                                     l4658 3B6A  
                                   l4826 3822                                     l4674 3A8C  
                                   l4770 2C90                                     l4754 2C34  
                                   l4842 390A                                     l4834 38B4  
                                   l4594 1E6A                                     l4586 1E36  
                                   l4578 1DE0                                     l4746 18CA  
                                   l4738 188A                                     l4690 153A  
                                   l5298 3D6A                                     l4850 3BD6  
                                   l5490 20BC                                     l5482 1B92  
                                   l5466 1AAA                                     l5458 1A36  
                                   l4914 340E                                     l4906 33C4  
                                   l4930 3A88                                     l4922 3A1A  
                                   l5378 39BE                                     l6194 1394  
                                   l6178 1350                                     l6098 1112  
                                   l4668 3BD2                                     l4828 3832  
                                   l4676 3A9E                                     l4780 2CE2  
                                   l4772 2CA0                                     l4756 2C46  
                                   l4844 391C                                     l4836 38C6  
                                   l4596 1E72                                     l4588 1E46  
                                   l4692 153E                                     l4684 14F4  
                                   l4860 3672                                     l4852 3BE6  
                                   l5492 20BC                                     l5484 1BA6  
                                   l5468 1AAE                                     l5476 1B3A  
                                   l4916 3416                                     l4908 33C8  
                                   l4924 3A1A                                     l4940 3548  
                                   l6196 139C                                     l6188 137C  
                                   l4678 3AA6                                     l4790 2D32  
                                   l4782 2CF2                                     l4774 2CAE  
                                   l4766 2C72                                     l4758 2C4E  
                                   l4838 38D2                                     l4846 392A  
                                   l4598 1E82                                     l4694 1564  
                                   l4686 151A                                     l4870 36BA  
                                   l4862 3682                                     l4854 3BF4  
                                   l5494 20BC                                     l5486 20B0  
                                   l5478 1B5A                                     l4918 3478  
                                   l4926 3A2C                                     l4942 3560  
                                   l4934 3526                                     l6198 13B0  
                                   l4792 2D42                                     l4784 2D02  
                                   l4776 2CBE                                     l4768 2C8E  
                                   l4696 158A                                     l4688 1528  
                                   l4880 36FE                                     l4872 36C4  
                                   l4864 3698                                     l4856 3C04  
                                   l5496 20CA                                     l5488 20BC  
                                   l4928 3A34                                     l4944 3578  
                                   l4936 352A                                     l4786 2D12  
                                   l4778 2CDC                                     l4794 2D54  
                                   l4698 15D2                                     l4890 34F8  
                                   l4882 347C                                     l4874 36E2  
                                   l4866 36A0                                     l4858 3C0E  
                                   l5498 20F2                                     l4938 3530  
                                   l4946 3590                                     l4788 2D22  
                                   l4892 351C                                     l4884 34AA  
                                   l4876 36F2                                     l4868 36AC  
                                   l4948 35CA                                     l4798 37B6  
                                   l4894 3522                                     l4886 34BA  
                                   l4878 36F4                                     l4888 34E8  
                                   l4994 25B6                                     l4898 3CA8  
                                   l4998 25D4                                     STR_1 109B  
                                   STR_2 10A5                                     STR_4 1095  
                                   STR_5 109F                                     STR_7 109F  
                                   STR_9 10A2                                     u3000 2472  
                                   u3001 246E                                     u3011 249C  
                                   u3020 24C0                                     u3100 2806  
                                   u3021 24BC                                     u3101 2802  
                                   _LATA 000F89                                     u3030 24EA  
                                   u3110 284E                                     _LATB 000F8A  
                                   u3031 24E6                                     u3111 284A  
                                   _LATC 000F8B                                     u3040 252A  
                                   u3200 3330                                     u4000 364C  
                                   _LATD 000F8C                                     u3041 2526  
                                   u3201 332C                                     u3121 2F90  
                                   u4001 3648                                     _LATE 000F8D  
                                   u3050 2574                                     u3210 3386  
                                   u3130 2FB4                                     u4010 29F2  
                                   u3051 2570                                     u3211 3382  
                                   u3131 2FB0                                     u4011 29EE  
                                   u3060 273E                                     u3220 3396  
                                   u3300 1BF8                                     u3140 2FDE  
                                   u4020 2A48                                     u4100 3F62  
                                   u3061 273A                                     u3221 3392  
                                   u3301 1BF2                                     u3141 2FDA  
                                   u4021 2A44                                     u4101 3F5E  
                                   u3070 2770                                     u3230 3EEE  
                                   u3310 1BFA                                     u3150 301E  
                                   u4030 2A9C                                     u4110 3F72  
                                   u3071 276C                                     u3231 3EEA  
                                   u3151 301A                                     u4031 2A98  
                                   u4111 3F6E                                     u3240 28A6  
                                   u3080 27AE                                     u3400 1E14  
                                   u3320 1C10                                     u3160 3182  
                                   u4200 234C                                     u4040 2AD6  
                                   u4120 384A                                     u3241 28A2  
                                   u3081 27AA                                     u3401 1E10  
                                   u3321 1C0C                                     u3161 317E  
                                   u4201 2348                                     u4041 2AD2  
                                   u4121 3846                                     u3250 28C8  
                                   u3090 27D8                                     u3410 1E24  
                                   u3330 1C40                                     u3170 31AC  
                                   u4050 2EAC                                     u4210 2396  
                                   u4130 385C                                     u3251 28C4  
                                   u3091 27D4                                     u3411 1E20  
                                   u3331 1C3C                                     u3171 31A8  
                                   u4051 2EA8                                     u4211 2392  
                                   u4131 3858                                     u3420 1E36  
                                   u3340 1C5C                                     u3180 31DA  
                                   u3500 2076                                     u4060 2EDE  
                                   u4220 23B4                                     u4140 387A  
                                   u4300 37A2                                     u3421 1E32  
                                   u3341 1C58                                     u3181 31D6  
                                   u3501 2072                                     u4061 2EDA  
                                   u4221 23B0                                     u4141 3876  
                                   u3190 330E                                     u3430 1E46  
                                   u3350 1C8A                                     u3510 2086  
                                   u4070 2F10                                     u4230 23C4  
                                   u4150 388C                                     u4310 37B2  
                                   u3191 330A                                     u3431 1E42  
                                   u3351 1C86                                     u3511 2082  
                                   u4071 2F0C                                     u4231 23C0  
                                   u4151 3888                                     u4311 37AE  
                                   u3280 29A6                                     u3264 28F0  
                                   u3440 1E5E                                     u3360 1C98  
                                   u3520 30A4                                     u3600 151A  
                                   u4080 2F42                                     u4240 23D2  
                                   u4160 389E                                     u4400 2E1E  
                                   u3281 29A0                                     u3265 28EC  
                                   u3441 1E5A                                     u3361 1C94  
                                   u3521 30A0                                     u3601 1516  
                                   u4081 2F3E                                     u4241 23CE  
                                   u4161 389A                                     u4401 2E1A  
                                   u3290 29A8                                     u3274 2952  
                                   u3370 1DC2                                     u3530 30DC  
                                   u3450 1EBC                                     u3610 1564  
                                   u4090 2F74                                     u4250 240C  
                                   u4170 228C                                     u4410 2E64  
                                   u3275 294E                                     u3371 1DBE  
                                   u3531 30D8                                     u3451 1EB8  
                                   u3611 1560                                     u4091 2F70  
                                   u4251 2408                                     u4171 2288  
                                   u4411 2E60                                     u4307 3798  
                                   u3700 37D0                                     u2900 3258  
                                   u3380 1DE0                                     u3540 30FA  
                                   u3460 1ED8                                     u3620 158A  
                                   u4260 241A                                     u4180 229A  
                                   u4500 1930                                     u4420 2E76  
                                   u5300 1262                                     u5220 10D4  
                                   u3701 37CC                                     u2901 3254  
                                   u3381 1DDC                                     u3541 30F6  
                                   u3461 1ED4                                     u3621 1586  
                                   u4261 2416                                     u4181 2296  
                                   u4501 192C                                     u4421 2E72  
                                   u5301 125E                                     u5221 10D0  
                                   u3710 37FE                                     u2910 3280  
                                   u3390 1DFA                                     u3550 310C  
                                   u3470 2024                                     u3630 1640  
                                   u4190 22F6                                     u4510 1950  
                                   u4270 3DD2                                     u4430 3940  
                                   u5310 1272                                     u5230 10E6  
                                   u3711 37FA                                     u2911 327C  
                                   u3391 1DF6                                     u3551 3108  
                                   u3471 2020                                     u3631 163C  
                                   u4191 22F2                                     u4511 194C  
                                   u4271 3DCE                                     u4431 393C  
                                   u5311 126E                                     u5231 10E2  
                                   u3720 3832                                     u2920 32B6  
                                   u3560 313A                                     u3480 2042  
                                   u3640 1676                                     u4360 3D22  
                                   u3800 34AA                                     u4600 218E  
                                   u4520 1962                                     u4280 3728  
                                   u5320 131E                                     u5240 1152  
                                   u3721 382E                                     u2921 32B2  
                                   u3561 3136                                     u3481 203E  
                                   u3641 1672                                     u4361 3D1E  
                                   u3801 34A6                                     u4601 218A  
                                   u4521 195E                                     u4281 3724  
                                   u5321 131A                                     u5241 114E  
                                   u3570 3B7C                                     u3730 38C6  
                                   u2930 3FE6                                     u3490 205C  
                                   u3650 1722                                     u3810 34E8  
                                   u4610 225C                                     u4530 19EC  
                                   u4370 2D7A                                     u4290 3774  
                                   u4450 39B6                                     u5330 132E  
                                   u5250 1164                                     u3571 3B78  
                                   u3731 38C2                                     u2931 3FE2  
                                   u3491 2058                                     u3651 171E  
                                   u3811 34E4                                     u4611 2258  
                                   u4531 19E8                                     u4371 2D76  
                                   u4451 39B2                                     u5331 132A  
                                   u5251 1160                                     u3580 3B9E  
                                   u2940 3ED2                                     u3660 17DA  
                                   u3820 351C                                     u4540 1A0A  
                                   u4380 2D8C                                     u5340 141E  
                                   u5260 1204                                     u3581 3B9A  
                                   u2941 3ECE                                     u3661 17D6  
                                   u3821 3518                                     u4541 1A06  
                                   u4381 2D88                                     u4445 3990  
                                   u5341 141A                                     u5261 1200  
                                   u2950 2B1A                                     u3590 3A9E  
                                   u3670 185C                                     u3830 3D02  
                                   u3750 3BF4                                     u4550 1AC2  
                                   u4390 2DC2                                     u5270 122E  
                                   u2951 2B16                                     u5407 3F2E  
                                   u3591 3A9A                                     u3671 1858  
                                   u3831 3CFE                                     u3751 3BF0  
                                   u4551 1ABE                                     u4391 2DBE  
                                   u4447 3992                                     u5271 122A  
                                   u2960 2B3C                                     u3680 2C46  
                                   u3920 25D0                                     u3760 3C2E  
                                   u4560 1B14                                     u3840 33DA  
                                   u5280 1240                                     u2961 2B38  
                                   u3681 2C42                                     u3745 391A  
                                   u3921 25CC                                     u3761 3C2A  
                                   u4561 1B10                                     u3841 33D6  
                                   u4297 376A                                     u4465 3A06  
                                   u5281 123C                                     u3690 2CA0  
                                   u3930 2612                                     u2890 3246  
                                   u3770 3698                                     u4570 1B56  
                                   u3850 33EC                                     u5290 1250  
                                   u3691 2C9C                                     u3747 391C  
                                   u3931 260E                                     u2891 3242  
                                   u3771 3694                                     u4571 1B52  
                                   u3851 33E8                                     u4467 3A08  
                                   u5291 124C                                     u3940 2684  
                                   u3780 36BA                                     u4580 1BA6  
                                   u3860 340E                                     u3941 2680  
                                   u3781 36B6                                     u4581 1BA2  
                                   u3861 340A                                     u5357 111C  
                                   u2974 2B64                                     u3950 26CA  
                                   u2990 2440                                     u3790 36E2  
                                   u4590 212E                                     u2975 2B60  
                                   u3951 26C6                                     u2991 243C  
                                   u3791 36DE                                     u4591 212A  
                                   u5367 2DDC                                     u2984 2BC6  
                                   u3960 272A                                     u3880 3A2C  
                                   u2985 2BC2                                     u5377 2CA6  
                                   u3961 2726                                     u3881 3A28  
                                   u3970 35E2                                     u3874 3464  
                                   u5387 2CC4                                     u3971 35DE  
                                   u3875 3460                                     u3980 3600  
                                   u5397 2CDE                                     u3981 35FC  
                                   u3990 3626                                     u3991 3622  
                ??_application_intialize 0019                 _RB4_InterruptHandler_LOW 011C  
                                   abs@a 0013                                     _dbuf 0176  
         gpio_pin_read_logic@_pin_config 0001                                     _cp_h 1091  
                                   _cp_l 108D                                     _dp_h 1021  
                                   _flag 00EE                                     _dp_l 1019  
                                   _main 10AA                                     _dtoa 1BC8  
                                   _huge 1079                                     _prec 00E6  
                                   _nout 010E                 _RB7_InterruptHandler_LOW 0110  
                                   pad@i 0018                                     pad@p 0015  
                                   fsr0h 000FEA                                     _tiny 1075  
                                   fsr1h 000FE2                                     indf0 000FEF  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   pad@w 001A                                     fsr2l 000FD9  
                 __end_of_led_initialize 392E                                     _utoa 1EAC  
      lcd_4bit_send_char_data_pos@column 001D                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
                          ?_led_turn_off 000B                             ___param_bank 000000  
                      initialize_t@stack 0001                    _lcd_4bit_send_command 3A8C  
                                  ??_abs 0015                     _gpio_pin_write_logic 2B04  
         lcd_4bit_send_string_pos@column 001D                                    ??_pad 0017  
                  lcd_4bit_intialize@lcd 0013                    lcd_4bit_intialize@ret 0018  
                        __end_of___aodiv 25B6                                    ?_main 0001  
                                  ?_dtoa 001C                          __end_of___aomod 2890  
                                  STR_11 10A2                                    STR_16 109C  
                        __end_of___lldiv 3716                                    ?_utoa 001C  
                        __end_of___lodiv 307A                          __end_of___lomod 3234  
                                  _RCREG 000FAE                      relay_turn_off@F3049 00F0  
                           vfpfcnvrt@fmt 0042                             vfpfcnvrt@llu 005C  
                                  _SPBRG 000FAF                                    _PORTA 000F80  
                                  _PORTB 000F81                                    _PORTC 000F82  
                                  _PORTD 000F83                                    _PORTE 000F84  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                                    _TXREG 000FAD  
          ?_lcd_4bits_send_enable_signal 000B                      ___lmul@multiplicand 0005  
               __end_of_keypad_get_value 2E7A                                    _lg2_h 1041  
                                  _lg2_l 103D                                    _lcd_1 01D1  
                                  _led_1 00F9                                    _flags 00E8  
                                  _infix 0200                                    _errno 010C  
                                  _ivln2 1031                                    _fputc 3234  
                                  _fputs 3E90                          __end_of_ivln2_h 108D  
                                  _num_1 0104                          __end_of_ivln2_l 1031  
                                  _two24 107D                                    _pop_t 3E06  
                                  pad@fp 0011                                    _width 00E4  
                                  _putch 403C                                    main@i 007D  
                                  dtoa@d 001E                                    dtoa@i 003E  
                                  dtoa@n 0036                                    dtoa@p 0030  
                                  dtoa@s 0034                                    dtoa@w 0032  
                                  tablat 000FF5                                    utoa@d 001E  
                                  utoa@i 003A                                    utoa@n 0032  
                                  utoa@p 002E                                    utoa@w 0030  
                                  status 000FD8                          __end_of_sprintf 3DC0  
                        __end_of_strncmp 3164                          ?_led_initialize 000F  
                       ___lodiv@dividend 0001            keypad_get_value@l_row_counter 0014  
                         ??_led_turn_off 000D        keypad_get_value@l_columns_counter 0015  
                        __initialization 3AFE                        evaluate_Postfix@i 0090  
                    keypad_get_value@ret 0011                             __end_of_cp_h 1095  
                           __end_of_cp_l 1091                             __end_of_dp_h 1029  
                           __end_of_dp_l 1021                             __end_of_main 14F4  
                           __end_of_dtoa 1EAC                             __end_of_huge 107D  
                           __end_of_tiny 1079                    ?_gpio_pin_write_logic 0001  
                           __end_of_utoa 20B0                         __end_of_Is_digit 2F8A  
               gpio_pin_read_logic@logic 0003                            _lat_registers 01AB  
                                 ??_main 007B                                   ??_dtoa 0026  
                                 ??_utoa 0026                            __activetblptr 000003  
                       led_turn_on@F3050 00F5                         ___lodiv@quotient 0011  
                                 ?_fputc 0001                                   ?_fputs 000A  
                                 ?_pop_t 0001                                   ?_putch 0001  
                                 _SPBRGH 000FB0                                   _SSPADD 000FC8  
                                 _SSPBUF 000FC9                keypad_get_value@l_counter 0013  
                       __end_of___xxtofl 242E         __end_of_lcd_4bit_send_string_pos 37B6  
                          ?_initialize_t 0001                   ?_lcd_4bit_send_command 000F  
                           vfprintf@cfmt 006A                                   ___fleq 347C  
                                 ___lmul 3BD6                                ??___aodiv 0011  
                              ??___aomod 0011                                   _doMath 29D4  
                              ??___lldiv 0009                                ??___lodiv 0011  
                              ??___lomod 0011                                   _memset 25B6  
                                 clear_0 3B44                                   clear_1 3B50  
                                 clear_2 3B5C                    led_initialize@pin_obj 0013  
                                 isa$std 000001                                   _result 0108  
                                 pad@buf 0013                                   _push_t 3E4C  
                                 dtoa@fp 001C                                   _strlen 3FBE  
gpio_pin_direction_intialize@_pin_config 0001                      infixToPostfix@infix 000E  
                                 fputc@c 0001                                   fputs@c 000E  
                    infixToPostfix@num_1 0017                                   fputs@i 000F  
                                 fputs@s 000A                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                                   putch@c 0001  
                       __end_of_vfprintf 3D0C                                   utoa@fp 001C  
                       _tiny@sqrtf$F2689 1029                                ??_sprintf 0074  
                              ??_strncmp 0007                             ___xxtofl@arg 000B  
                           ___xxtofl@exp 000A                             ___xxtofl@val 0001  
                             ___fleq@ff1 0001                               ___fleq@ff2 0005  
                             __accesstop 0080                  __end_of__initialization 3B64  
             lcd_4bits_set_cursor@column 0016                            ___rparam_used 000001  
                       ??_lcd_send_4bits 000E                           ??_initialize_t 0003  
                      led_initialize@led 000F                        led_initialize@ret 0012  
                _lcd_4bit_send_char_data 3A1A                    __end_of_operator_type 3672  
                 ??_gpio_pin_write_logic 0004                 evaluate_Postfix@operand1 0080  
               evaluate_Postfix@operand2 0084                           __pcstackCOMRAM 0001  
                           __pidataBANK0 4030                             __pidataBANK1 3F88  
                          __end_of_lg2_h 1045                            __end_of_lg2_l 1041  
                          __end_of_ivln2 1035                            __end_of_fputc 32FE  
                          __end_of_fputs 3ED4                            __end_of_two24 1081  
                          __end_of_pop_t 3E4C                            __end_of_putch 403E  
                             __end_of_L1 1075                               __end_of_L2 1071  
                             __end_of_L3 106D                               __end_of_L4 1069  
                             __end_of_L5 1065                               __end_of_L6 1061  
                             __end_of_P1 105D                               __end_of_P2 1059  
                             __end_of_P3 1055                               __end_of_P4 1051  
                             __end_of_P5 104D                 lcd_4bit_send_command@lcd 000F  
               lcd_4bit_send_command@ret 0012                               __end_of_bp 1089  
                             __end_of_cp 1039                     __end_of_led_turn_off 3A1A  
           keypad_initialize@row_counter 0014             ?_lcd_4bit_send_char_data_pos 001A  
                                ??_fputc 0005                                  ??_fputs 000E  
                                ??_pop_t 0005                                  ??_putch 0001  
                             __pbssBANK0 00E4                               __pbssBANK1 0100  
                             __pbssBANK2 0200                                ?_Is_digit 000F  
                 evaluate_Postfix@result 0088                    _INT0_InterruptHandler 0124  
        lcd_4bits_send_enable_signal@lcd 000B             __end_of_lcd_4bits_set_cursor 35CE  
        lcd_4bits_send_enable_signal@ret 000E            __end_of_application_intialize 403C  
                                ?___fleq 0001                                  ?___lmul 0001  
                                ?_doMath 000E                        led_turn_off@F3055 00F4  
            convert_uint32_to_string@ret 007A              convert_uint32_to_string@str 0078  
                                ?_memset 0001                           ___lmul@product 0009  
                                ?_push_t 0006                                  ?_strlen 0001  
                              ?___xxtofl 0001                ?_lcd_4bit_send_string_pos 001A  
              _RB6_InterruptHandler_HIGH 0116                     led_turn_toggle@F3060 00F3  
                      ?_keypad_get_value 000B                         ??_led_initialize 0011  
                       ___lomod@dividend 0001                       ??_keypad_get_value 000F  
                             _btn_values 1001                               ??_Is_digit 0013  
                         _tris_registers 01B5                 _RB6_InterruptHandler_LOW 0114  
              ??_lcd_4bit_send_char_data 0012                                  __Hparam 0000  
                                __Lparam 0000                      _ecu_layer_intialize 3FF4  
                             _equal_flag 00EC                                  ___aodiv 242E  
                                ___aomod 272C                      _gpio_pin_read_logic 33C4  
                                ___lldiv 3672                                  ___lodiv 2F8A  
                                ___lomod 3164                                ?_vfprintf 0064  
       keypad_initialize@columns_counter 0015                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 3BD6                                  __pcinit 3AFE  
                                __ramtop 1000                                  __ptext0 10AA  
                                __ptext1 392E                                  __ptext2 39A4  
                                __ptext3 3716                                  __ptext4 3DC0  
                                __ptext5 3526                                  __ptext6 3A1A  
                                __ptext7 2D58                                  __ptext8 33C4  
                                __ptext9 18DE                                _T0CONbits 000FD5  
                          ??_check_digit 0003                                  _counter 00EF  
               _convert_uint32_to_string 3D0C                                  _ivln2_h 1089  
                                _ivln2_l 102D                               ??___xxtofl 0005  
                   ?_ecu_layer_intialize 0001                     __end_of_initialize_t 4030  
                lcd_4bits_set_cursor@lcd 0013                  lcd_4bits_set_cursor@ret 0019  
                lcd_4bits_set_cursor@row 0015                           _infixToPostfix 18DE  
                                _postfix 0126                     ?_gpio_pin_read_logic 0001  
                                _sprintf 3D6E                                  _sup_pos 00FA  
                                _strncmp 307A                     end_of_initialization 3B64  
                      lcd_send_4bits@lcd 000B                        lcd_send_4bits@ret 000E  
                                fputc@fp 0003                                  memset@c 0003  
                                memset@k 0009                                  memset@n 0005  
                                memset@s 000B                                  fputs@fp 000C  
             __end_of_lcd_4bit_intialize 2D58                         _evaluate_Postfix 20B0  
                ??_lcd_4bit_send_command 0012                          ___lldiv@divisor 0005  
                  gpio_pin_intialize@ret 000E                          ___lldiv@counter 000D  
                             _precedence 3836                      led_turn_off@pin_obj 000E  
                      __end_of_vfpfcnvrt 18DE                                _RCSTAbits 000FAB  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                 __end_of_tiny@sqrtf$F2689 102D  
                                push_t@c 0008                               _motor_pin1 00F8  
                             _motor_pin2 00F7                               ??_vfprintf 006A  
                                strlen@a 0003                                  strlen@s 0001  
        __end_of_lcd_4bit_send_char_data 3A8C                    _INT1_InterruptHandler 0122  
          gpio_pin_intialize@_pin_config 000B                     _lcd_4bits_set_cursor 3526  
           keypad_get_value@column_logic 0012               lcd_4bit_send_char_data@lcd 000F  
                  ??_ecu_layer_intialize 0019               lcd_4bit_send_char_data@ret 0012  
                 __end_of_infixToPostfix 1BC8     __end_of_gpio_pin_direction_intialize 29D4  
           _gpio_pin_direction_intialize 2890                            ___xxtofl@sign 0009  
                              _TRISCbits 000F94                    ??_gpio_pin_read_logic 0005  
                    __end_of_check_digit 3F88          lcd_4bit_send_char_data_pos@data 001E  
                              _TXSTAbits 000FAC                             _led_turn_off 39A4  
                     relay_turn_on@F3044 00F1              lcd_4bit_send_string_pos@lcd 001A  
            lcd_4bit_send_string_pos@ret 0020              lcd_4bit_send_string_pos@row 001C  
            lcd_4bit_send_string_pos@str 001E                    keypad_get_value@value 000D  
                         __end_of___fleq 3526                           __end_of___lmul 3C40  
                            vfpfcnvrt@ap 0044                              vfpfcnvrt@fp 0040  
                            vfpfcnvrt@ll 0054                           __end_of_doMath 2B04  
                            _BAUDCONbits 000FB8                           __end_of_memset 272C  
                  ?_lcd_4bits_set_cursor 0013                           __end_of_push_t 3E90  
                         __end_of_strlen 3FF4                          ?_infixToPostfix 000E  
                    start_initialization 3AFE                          ___lodiv@divisor 0009  
                          ??_led_turn_on 000D                          ___lodiv@counter 0019  
          convert_uint32_to_string@value 0074                              __end_of_lg2 1049  
                            __end_of_abs 3F14                              __end_of_pad 33C4  
          ?_gpio_pin_direction_intialize 0001                              __end_of_ovt 103D  
                        led_turn_off@led 000B                              ?_precedence 0001  
                            vfprintf@fmt 0066                              push_t@stack 0006  
                               ??___fleq 0009                                 ??___lmul 0009  
                               ??_doMath 001A                              __pdataBANK0 00FA  
                            __pdataBANK1 01A1                                 ??_memset 0007  
                             memset@dest 0001             lcd_4bit_send_command@command 0011  
                               ??_push_t 000C                                 ??_strlen 0003  
                            _check_digit 3F50                  evaluate_Postfix@current 008C  
                            __pbssCOMRAM 007F                            __pcstackBANK0 0080  
                       ___aodiv@dividend 0001                  evaluate_Postfix@postfix 001A  
                           check_digit@c 0003                      __end_of_led_turn_on 39A4  
                  _INT2_InterruptHandler 0120           ??_lcd_4bits_send_enable_signal 000D  
        gpio_pin_direction_intialize@ret 0009                    _application_intialize 4036  
                              _dtoa$2498 002E                             _initialize_t 401A  
             ??_convert_uint32_to_string 007A                                 ?___aodiv 0001  
                               ?___aomod 0001          gpio_pin_write_logic@_pin_config 0001  
                       ___aodiv@quotient 0013                                 ?___lldiv 0001  
                               ?___lodiv 0001                                 ?___lomod 0001  
              gpio_pin_write_logic@logic 0003                   ??_lcd_4bits_set_cursor 0017  
               __end_of_evaluate_Postfix 227A                          ___lomod@divisor 0009  
                              fabsf@F465 0100                              __smallconst 1000  
              _RB4_InterruptHandler_HIGH 011E                          ___lomod@counter 0011  
                              doMath@op1 0012                                doMath@op2 0016  
              _RB7_InterruptHandler_HIGH 0112              infixToPostfix@operatorStack 0020  
                               ?_sprintf 006C                       _gpio_pin_intialize 3B6A  
                               ?_strncmp 0001           ??_gpio_pin_direction_intialize 0003  
               _RB5_InterruptHandler_LOW 0118                                 _RB4_Flag 00FF  
                               _RB5_Flag 00FE                                 _RB6_Flag 00FD  
                               _RB7_Flag 00FC                      ?_gpio_pin_intialize 000B  
                               _PIE1bits 000F9D                               pop_t@stack 0001  
          __end_of_lcd_4bit_send_command 3AFE                                 _PIR1bits 000F9E  
                     led_turn_on@pin_obj 000E                                _operators 01BF  
                          _operator_type 35CE                       _lcd_4bit_intialize 2C30  
                              _vfpfcnvrt 14F4                 _lcd_4bit_send_string_pos 3716  
                     operator_type@input 0005                     ??_gpio_pin_intialize 000D  
         lcd_4bit_send_char_data_pos@lcd 001A           lcd_4bit_send_char_data_pos@ret 001F  
         lcd_4bit_send_char_data_pos@row 001C                      ?_lcd_4bit_intialize 0013  
                            _led_turn_on 392E      __end_of_lcd_4bit_send_char_data_pos 3E06  
            _lcd_4bit_send_char_data_pos 3DC0                  gpio_pin_write_logic@ret 000A  
                      ___lmul@multiplier 0001                 ?_lcd_4bit_send_char_data 000F  
                              copy_data0 3B12                                copy_data1 3B32  
                      _keypad_initialize 37B6                                 _Is_digit 2E7A  
                     ?_keypad_initialize 000F                   gpio_pin_read_logic@ret 000A  
          ??_lcd_4bit_send_char_data_pos 001F                   ?_application_intialize 0001  
                   ??_lcd_4bit_intialize 0015                           led_turn_on@led 000B  
                               __Hrparam 0000                           ?_operator_type 0001  
                             vfprintf@ap 0068                                 __Lrparam 0000  
                             vfprintf@fp 0064                      ??_keypad_initialize 0011  
            __end_of_ecu_layer_intialize 401A                               ?_vfpfcnvrt 0040  
                       ??_infixToPostfix 0012                          ___aodiv@divisor 0009  
                     __end_of_btn_values 1019                          ___aodiv@counter 0011  
            __end_of_gpio_pin_read_logic 347C              keypad_get_value@_keypad_obj 000B  
                             sprintf@fmt 006E                          infixToPostfix@i 001C  
                        infixToPostfix@j 001E                                 ___xxtofl 227A  
              __end_of_keypad_initialize 3836                                 __ptext10 3836  
                               __ptext11 35CE                                 __ptext20 227A  
                               __ptext12 3F50                                 __ptext21 2E7A  
                               __ptext13 20B0                                 __ptext30 307A  
                               __ptext22 347C                                 __ptext14 3E4C  
                               __ptext31 1BC8                                 __ptext23 3D0C  
                               __ptext15 3E06                                 __ptext40 25B6  
                               __ptext32 32FE                                 __ptext24 3D6E  
                               __ptext16 401A                                 __ptext41 4036  
                               __ptext33 3FBE                                 __ptext25 3CA8  
                               __ptext17 29D4                                 __ptext50 2B04  
                               __ptext42 3FF4                                 __ptext34 3E90  
                               __ptext26 14F4                                 __ptext18 3BD6  
                               __ptext51 2890                                 __ptext43 38B4  
                               __ptext35 3234                                 __ptext27 1EAC  
                               __ptext19 3672                                 __ptext44 2C30  
                               __ptext36 403C                                 __ptext28 3164  
                               __ptext45 3A8C                                 __ptext37 3ED4  
                               __ptext29 2F8A                                 __ptext46 3C40  
                               __ptext38 272C                                 __ptext47 3F14  
                               __ptext39 242E                                 __ptext48 37B6  
                               __ptext49 3B6A                             precedence@op 0003  
                               doMath@op 000E                                 _keypad_1 01C7  
                           ??_precedence 0003                         _keypad_get_value 2D58  
       __end_of_convert_uint32_to_string 3D6E                                 isa$xinst 000000  
                               _vfprintf 3CA8      lcd_4bit_intialize@data_bins_counter 0017  
                         _lcd_send_4bits 3C40                         ___aomod@dividend 0001  
                           ?_check_digit 0001                    infixToPostfix@current 001B  
           __end_of_gpio_pin_write_logic 2C30                       __end_of_precedence 38B4  
                            _res_counter 00ED                                sprintf@ap 0080  
                  infixToPostfix@postfix 0010                         ___lldiv@dividend 0001  
           keypad_initialize@_keypad_obj 000F                          ??_operator_type 0005  
                              strncmp@_l 0001                                strncmp@_r 0003  
                 __end_of_lcd_send_4bits 3CA8                          ___aomod@divisor 0009  
                            ??_vfpfcnvrt 0046                          ___aomod@counter 0011  
                               sprintf@f 0082                                 sprintf@s 006C  
                      ?_evaluate_Postfix 001A                         ___lldiv@quotient 0009  
                         _port_registers 01A1                                 strncmp@l 0008  
                               strncmp@n 0005                                 strncmp@r 000A  
                     ??_evaluate_Postfix 001E             evaluate_Postfix@operandStack 0092  
                            _SSPCON1bits 000FC6                              _SSPCON2bits 000FC5  
                           ___aodiv@sign 0012              lcd_4bit_send_char_data@data 0011  
                           ___aomod@sign 0012               ??_lcd_4bit_send_string_pos 0020  
                         _led_initialize 38B4  

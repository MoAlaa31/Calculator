

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Aug 31 03:59:34 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.40
    87                           ; Generated 17/11/2021 GMT
    88                           ; 
    89                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F4620 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataBANK0
   123  0060B2                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _pos
   127  0060B2  01                 	db	1
   128                           
   129                           	psect	idataBANK1
   130  005EE6                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for _port_registers
   134  005EE6  80                 	db	128
   135  005EE7  0F                 	db	15
   136  005EE8  81                 	db	129
   137  005EE9  0F                 	db	15
   138  005EEA  82                 	db	130
   139  005EEB  0F                 	db	15
   140  005EEC  83                 	db	131
   141  005EED  0F                 	db	15
   142  005EEE  84                 	db	132
   143  005EEF  0F                 	db	15
   144                           
   145                           ;initializer for _lat_registers
   146  005EF0  89                 	db	137
   147  005EF1  0F                 	db	15
   148  005EF2  8A                 	db	138
   149  005EF3  0F                 	db	15
   150  005EF4  8B                 	db	139
   151  005EF5  0F                 	db	15
   152  005EF6  8C                 	db	140
   153  005EF7  0F                 	db	15
   154  005EF8  8D                 	db	141
   155  005EF9  0F                 	db	15
   156                           
   157                           ;initializer for _tris_registers
   158  005EFA  92                 	db	146
   159  005EFB  0F                 	db	15
   160  005EFC  93                 	db	147
   161  005EFD  0F                 	db	15
   162  005EFE  94                 	db	148
   163  005EFF  0F                 	db	15
   164  005F00  95                 	db	149
   165  005F01  0F                 	db	15
   166  005F02  96                 	db	150
   167  005F03  0F                 	db	15
   168                           
   169                           ;initializer for _operators
   170  005F04  2F                 	db	47
   171  005F05  45                 	db	69
   172  005F06  2A                 	db	42
   173  005F07  2D                 	db	45
   174  005F08  2B                 	db	43
   175  005F09  3D                 	db	61
   176  005F0A  44                 	db	68
   177  005F0B  43                 	db	67
   178                           
   179                           ;initializer for _sup_pos
   180  005F0C  01                 	db	1
   181                           
   182                           ;initializer for _RB7_Flag
   183  005F0D  01                 	db	1
   184                           
   185                           ;initializer for _RB6_Flag
   186  005F0E  01                 	db	1
   187                           
   188                           ;initializer for _RB5_Flag
   189  005F0F  01                 	db	1
   190                           
   191                           ;initializer for _RB4_Flag
   192  005F10  01                 	db	1
   193                           
   194                           ;initializer for _keypad_1
   195  005F11  02                 	db	2
   196  005F12  0A                 	db	10
   197  005F13  12                 	db	18
   198  005F14  1A                 	db	26
   199  005F15  62                 	db	98
   200  005F16  6A                 	db	106
   201  005F17  72                 	db	114
   202  005F18  7A                 	db	122
   203  005F19  43                 	db	67
   204  005F1A  4B                 	db	75
   205                           
   206                           ;initializer for _lcd_1
   207  005F1B  13                 	db	19
   208  005F1C  1B                 	db	27
   209  005F1D  23                 	db	35
   210  005F1E  2B                 	db	43
   211  005F1F  33                 	db	51
   212  005F20  3B                 	db	59
   213                           
   214                           	psect	smallconst
   215  001000                     __psmallconst:
   216                           	callstack 0
   217  001000  00                 	db	0
   218  001001                     _btn_values:
   219                           	callstack 0
   220  001001  41                 	db	65
   221  001002  37                 	db	55
   222  001003  38                 	db	56
   223  001004  39                 	db	57
   224  001005  2F                 	db	47
   225  001006  45                 	db	69
   226  001007  42                 	db	66
   227  001008  34                 	db	52
   228  001009  35                 	db	53
   229  00100A  36                 	db	54
   230  00100B  2A                 	db	42
   231  00100C  46                 	db	70
   232  00100D  43                 	db	67
   233  00100E  31                 	db	49
   234  00100F  32                 	db	50
   235  001010  33                 	db	51
   236  001011  2D                 	db	45
   237  001012  46                 	db	70
   238  001013  44                 	db	68
   239  001014  30                 	db	48
   240  001015  2E                 	db	46
   241  001016  3D                 	db	61
   242  001017  2B                 	db	43
   243  001018  47                 	db	71
   244  001019                     __end_of_btn_values:
   245                           	callstack 0
   246  0000                     _TXREG	set	4013
   247  0000                     _TXSTAbits	set	4012
   248  0000                     _RCREG	set	4014
   249  0000                     _SSPSTATbits	set	4039
   250  0000                     _SSPADD	set	4040
   251  0000                     _TRISCbits	set	3988
   252  0000                     _PORTE	set	3972
   253  0000                     _PORTD	set	3971
   254  0000                     _PORTC	set	3970
   255  0000                     _PORTB	set	3969
   256  0000                     _PORTA	set	3968
   257  0000                     _LATA	set	3977
   258  0000                     _TRISA	set	3986
   259  0000                     _PIE1bits	set	3997
   260  0000                     _PIR1bits	set	3998
   261  0000                     _SSPCON2bits	set	4037
   262  0000                     _SSPCON1bits	set	4038
   263  0000                     _TRISE	set	3990
   264  0000                     _TRISD	set	3989
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISB	set	3987
   267  0000                     _LATE	set	3981
   268  0000                     _LATD	set	3980
   269  0000                     _LATC	set	3979
   270  0000                     _LATB	set	3978
   271  0000                     _T0CONbits	set	4053
   272  0000                     _SSPBUF	set	4041
   273  0000                     _RCSTAbits	set	4011
   274  0000                     _SPBRGH	set	4016
   275  0000                     _SPBRG	set	4015
   276  0000                     _BAUDCONbits	set	4024
   277  001019                     STR_4:
   278  001019  43                 	db	67	;'C'
   279  00101A  41                 	db	65	;'A'
   280  00101B  53                 	db	83	;'S'
   281  00101C  49                 	db	73	;'I'
   282  00101D  4F                 	db	79	;'O'
   283  00101E  00                 	db	0
   284  00101F                     STR_6:
   285  00101F  49                 	db	73	;'I'
   286  001020  4E                 	db	78	;'N'
   287  001021  46                 	db	70	;'F'
   288  001022  00                 	db	0
   289  001023                     STR_10:
   290  001023  4E                 	db	78	;'N'
   291  001024  41                 	db	65	;'A'
   292  001025  4E                 	db	78	;'N'
   293  001026  00                 	db	0
   294  001027                     STR_7:
   295  001027  69                 	db	105	;'i'
   296  001028  6E                 	db	110	;'n'
   297  001029  66                 	db	102	;'f'
   298  00102A  00                 	db	0
   299  00102B                     STR_11:
   300  00102B  6E                 	db	110	;'n'
   301  00102C  61                 	db	97	;'a'
   302  00102D  6E                 	db	110	;'n'
   303  00102E  00                 	db	0
   304  00102F                     STR_1:
   305  00102F  25                 	db	37
   306  001030  6C                 	db	108	;'l'
   307  001031  75                 	db	117	;'u'
   308  001032  00                 	db	0
   309  001033                     STR_14:
   310  001033  6C                 	db	108	;'l'
   311  001034  64                 	db	100	;'d'
   312  001035  00                 	db	0
   313  001036                     STR_23:
   314  001036  6C                 	db	108	;'l'
   315  001037  66                 	db	102	;'f'
   316  001038  00                 	db	0
   317  001039                     STR_18:
   318  001039  6C                 	db	108	;'l'
   319  00103A  69                 	db	105	;'i'
   320  00103B  00                 	db	0
   321  00103C                     STR_5:
   322  00103C  25                 	db	37
   323  00103D  66                 	db	102	;'f'
   324  00103E  00                 	db	0
   325  00103F                     STR_2:
   326  00103F  25                 	db	37
   327  001040  69                 	db	105	;'i'
   328  001041  00                 	db	0
   329  001042  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  005C1C                     __pcinit:
   335                           	callstack 0
   336  005C1C                     start_initialization:
   337                           	callstack 0
   338  005C1C                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK1 (59 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343  005C1C  0EE6               	movlw	low __pidataBANK1
   344  005C1E  6EF6               	movwf	tblptrl,c
   345  005C20  0E5E               	movlw	high __pidataBANK1
   346  005C22  6EF7               	movwf	tblptrh,c
   347  005C24  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348  005C26  6EF8               	movwf	tblptru,c
   349  005C28  EE01  F086         	lfsr	0,__pdataBANK1
   350  005C2C  EE10 F03B          	lfsr	1,59
   351  005C30                     copy_data0:
   352  005C30  0009               	tblrd		*+
   353  005C32  CFF5 FFEE          	movff	tablat,postinc0
   354  005C36  50E5               	movf	postdec1,w,c
   355  005C38  50E1               	movf	fsr1l,w,c
   356  005C3A  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360  005C3C  0EB2               	movlw	low __pidataBANK0
   361  005C3E  6EF6               	movwf	tblptrl,c
   362  005C40  0E60               	movlw	high __pidataBANK0
   363  005C42  6EF7               	movwf	tblptrh,c
   364  005C44  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365  005C46  6EF8               	movwf	tblptru,c
   366  005C48  0009               	tblrd		*+	;fetch initializer
   367  005C4A  CFF5 F0FF          	movff	tablat,__pdataBANK0
   368                           
   369                           ; Clear objects allocated to BANK2 (200 bytes)
   370  005C4E  EE02  F000         	lfsr	0,__pbssBANK2
   371  005C52  0EC8               	movlw	200
   372  005C54                     clear_0:
   373  005C54  6AEE               	clrf	postinc0,c
   374  005C56  06E8               	decf	wreg,f,c
   375  005C58  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK1 (134 bytes)
   378  005C5A  EE01  F000         	lfsr	0,__pbssBANK1
   379  005C5E  0E86               	movlw	134
   380  005C60                     clear_1:
   381  005C60  6AEE               	clrf	postinc0,c
   382  005C62  06E8               	decf	wreg,f,c
   383  005C64  E1FD               	bnz	clear_1
   384                           
   385                           ; Clear objects allocated to BANK0 (20 bytes)
   386  005C66  EE00  F0EB         	lfsr	0,__pbssBANK0
   387  005C6A  0E14               	movlw	20
   388  005C6C                     clear_2:
   389  005C6C  6AEE               	clrf	postinc0,c
   390  005C6E  06E8               	decf	wreg,f,c
   391  005C70  E1FD               	bnz	clear_2
   392  005C72                     end_of_initialization:
   393                           	callstack 0
   394  005C72                     __end_of__initialization:
   395                           	callstack 0
   396  005C72  0100               	movlb	0
   397  005C74  EF9D  F013         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400  0000EB                     __pbssBANK0:
   401                           	callstack 0
   402  0000EB                     _width:
   403                           	callstack 0
   404  0000EB                     	ds	2
   405  0000ED                     _prec:
   406                           	callstack 0
   407  0000ED                     	ds	2
   408  0000EF                     _flags:
   409                           	callstack 0
   410  0000EF                     	ds	2
   411  0000F1                     _equal_flag:
   412                           	callstack 0
   413  0000F1                     	ds	1
   414  0000F2                     _res_counter:
   415                           	callstack 0
   416  0000F2                     	ds	1
   417  0000F3                     _flag:
   418                           	callstack 0
   419  0000F3                     	ds	1
   420  0000F4                     _counter:
   421                           	callstack 0
   422  0000F4                     	ds	1
   423  0000F5                     relay_turn_off@F3049:
   424                           	callstack 0
   425  0000F5                     	ds	1
   426  0000F6                     relay_turn_on@F3044:
   427                           	callstack 0
   428  0000F6                     	ds	1
   429  0000F7                     relay_initialize@F3039:
   430                           	callstack 0
   431  0000F7                     	ds	1
   432  0000F8                     led_turn_toggle@F3060:
   433                           	callstack 0
   434  0000F8                     	ds	1
   435  0000F9                     led_turn_off@F3055:
   436                           	callstack 0
   437  0000F9                     	ds	1
   438  0000FA                     led_turn_on@F3050:
   439                           	callstack 0
   440  0000FA                     	ds	1
   441  0000FB                     led_initialize@F3045:
   442                           	callstack 0
   443  0000FB                     	ds	1
   444  0000FC                     	ds	1
   445  0000FD                     _val:
   446                           	callstack 0
   447  0000FD                     	ds	1
   448  0000FE                     _led_1:
   449                           	callstack 0
   450  0000FE                     	ds	1
   451                           
   452                           	psect	dataBANK0
   453  0000FF                     __pdataBANK0:
   454                           	callstack 0
   455  0000FF                     _pos:
   456                           	callstack 0
   457  0000FF                     	ds	1
   458                           
   459                           	psect	bssBANK1
   460  000100                     __pbssBANK1:
   461                           	callstack 0
   462  000100                     floorf@F526:
   463                           	callstack 0
   464  000100                     	ds	4
   465  000104                     ___fpclassifyf@F465:
   466                           	callstack 0
   467  000104                     	ds	4
   468  000108                     _num_1:
   469                           	callstack 0
   470  000108                     	ds	4
   471  00010C                     _nout:
   472                           	callstack 0
   473  00010C                     	ds	2
   474  00010E                     _op:
   475                           	callstack 0
   476  00010E                     	ds	2
   477  000110                     	ds	2
   478  000112                     	ds	2
   479  000114                     	ds	2
   480  000116                     	ds	2
   481  000118                     	ds	2
   482  00011A                     	ds	2
   483  00011C                     	ds	2
   484  00011E                     	ds	2
   485  000120                     _INT2_InterruptHandler:
   486                           	callstack 0
   487  000120                     	ds	2
   488  000122                     _INT1_InterruptHandler:
   489                           	callstack 0
   490  000122                     	ds	2
   491  000124                     _INT0_InterruptHandler:
   492                           	callstack 0
   493  000124                     	ds	2
   494  000126                     	ds	1
   495  000127                     _dbuf:
   496                           	callstack 0
   497  000127                     	ds	80
   498  000177                     _arr:
   499                           	callstack 0
   500  000177                     	ds	11
   501  000182                     _result:
   502                           	callstack 0
   503  000182                     	ds	4
   504                           
   505                           	psect	dataBANK1
   506  000186                     __pdataBANK1:
   507                           	callstack 0
   508  000186                     _port_registers:
   509                           	callstack 0
   510  000186                     	ds	10
   511  000190                     _lat_registers:
   512                           	callstack 0
   513  000190                     	ds	10
   514  00019A                     _tris_registers:
   515                           	callstack 0
   516  00019A                     	ds	10
   517  0001A4                     _operators:
   518                           	callstack 0
   519  0001A4                     	ds	8
   520  0001AC                     _sup_pos:
   521                           	callstack 0
   522  0001AC                     	ds	1
   523  0001AD                     _RB7_Flag:
   524                           	callstack 0
   525  0001AD                     	ds	1
   526  0001AE                     _RB6_Flag:
   527                           	callstack 0
   528  0001AE                     	ds	1
   529  0001AF                     _RB5_Flag:
   530                           	callstack 0
   531  0001AF                     	ds	1
   532  0001B0                     _RB4_Flag:
   533                           	callstack 0
   534  0001B0                     	ds	1
   535  0001B1                     _keypad_1:
   536                           	callstack 0
   537  0001B1                     	ds	10
   538  0001BB                     _lcd_1:
   539                           	callstack 0
   540  0001BB                     	ds	6
   541                           
   542                           	psect	bssBANK2
   543  000200                     __pbssBANK2:
   544                           	callstack 0
   545  000200                     _postfix:
   546                           	callstack 0
   547  000200                     	ds	100
   548  000264                     _infix:
   549                           	callstack 0
   550  000264                     	ds	100
   551                           
   552                           	psect	cstackBANK0
   553  000080                     __pcstackBANK0:
   554                           	callstack 0
   555  000080                     ?_vfpfcnvrt:
   556                           	callstack 0
   557  000080                     vfpfcnvrt@fp:
   558                           	callstack 0
   559  000080                     evaluatePostfix@operand2:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x0
   563  000080                     	ds	2
   564  000082                     vfpfcnvrt@fmt:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x2
   568  000082                     	ds	2
   569  000084                     vfpfcnvrt@ap:
   570                           	callstack 0
   571  000084                     evaluatePostfix@operand1:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x4
   575  000084                     	ds	2
   576  000086                     ??_vfpfcnvrt:
   577                           
   578                           ; 1 bytes @ 0x6
   579  000086                     	ds	2
   580  000088                     evaluatePostfix@isFractional:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x8
   584  000088                     	ds	2
   585  00008A                     evaluatePostfix@fractionalMultiplier:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0xA
   589  00008A                     	ds	4
   590  00008E                     evaluatePostfix@num:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0xE
   594  00008E                     	ds	4
   595  000092                     evaluatePostfix@current:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x12
   599  000092                     	ds	1
   600  000093                     evaluatePostfix@operandStack:
   601                           	callstack 0
   602                           
   603                           ; 82 bytes @ 0x13
   604  000093                     	ds	1
   605  000094                     vfpfcnvrt@ll:
   606                           	callstack 0
   607                           
   608                           ; 8 bytes @ 0x14
   609  000094                     	ds	8
   610  00009C                     vfpfcnvrt@llu:
   611                           	callstack 0
   612                           
   613                           ; 8 bytes @ 0x1C
   614  00009C                     	ds	8
   615  0000A4                     vfpfcnvrt@f:
   616                           	callstack 0
   617                           
   618                           ; 4 bytes @ 0x24
   619  0000A4                     	ds	4
   620  0000A8                     vfpfcnvrt@ct:
   621                           	callstack 0
   622                           
   623                           ; 3 bytes @ 0x28
   624  0000A8                     	ds	3
   625  0000AB                     vfpfcnvrt@c:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x2B
   629  0000AB                     	ds	1
   630  0000AC                     ?_vfprintf:
   631                           	callstack 0
   632  0000AC                     vfprintf@fp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2C
   636  0000AC                     	ds	2
   637  0000AE                     vfprintf@fmt:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x2E
   641  0000AE                     	ds	2
   642  0000B0                     vfprintf@ap:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x30
   646  0000B0                     	ds	2
   647  0000B2                     ?_sprintf:
   648                           	callstack 0
   649  0000B2                     sprintf@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x32
   653  0000B2                     	ds	2
   654  0000B4                     sprintf@fmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x34
   658  0000B4                     	ds	6
   659  0000BA                     sprintf@ap:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x3A
   663  0000BA                     	ds	2
   664  0000BC                     sprintf@f:
   665                           	callstack 0
   666                           
   667                           ; 11 bytes @ 0x3C
   668  0000BC                     	ds	41
   669  0000E5                     evaluatePostfix@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x65
   673  0000E5                     	ds	2
   674  0000E7                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x67
   677  0000E7                     	ds	2
   678  0000E9                     main@i:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x69
   682  0000E9                     	ds	2
   683                           
   684                           	psect	cstackCOMRAM
   685  000001                     __pcstackCOMRAM:
   686                           	callstack 0
   687  000001                     ?_strlen:
   688                           	callstack 0
   689  000001                     ?___fpclassifyf:
   690                           	callstack 0
   691  000001                     ?_isupper:
   692                           	callstack 0
   693  000001                     ?_strncmp:
   694                           	callstack 0
   695  000001                     ?_check_digit:
   696                           	callstack 0
   697  000001                     ?_precedence:
   698                           	callstack 0
   699  000001                     ?___awdiv:
   700                           	callstack 0
   701  000001                     ?___awmod:
   702                           	callstack 0
   703  000001                     ?___fldiv:
   704                           	callstack 0
   705  000001                     ?_pop_t:
   706                           	callstack 0
   707  000001                     ?___flneg:
   708                           	callstack 0
   709  000001                     ?___fltol:
   710                           	callstack 0
   711  000001                     ?___xxtofl:
   712                           	callstack 0
   713  000001                     ?___aodiv:
   714                           	callstack 0
   715  000001                     ?___aomod:
   716                           	callstack 0
   717  000001                     ?___lodiv:
   718                           	callstack 0
   719  000001                     ?___lomod:
   720                           	callstack 0
   721  000001                     gpio_pin_direction_intialize@_pin_config:
   722                           	callstack 0
   723  000001                     gpio_pin_write_logic@_pin_config:
   724                           	callstack 0
   725  000001                     gpio_pin_read_logic@_pin_config:
   726                           	callstack 0
   727  000001                     initialize_t@stack:
   728                           	callstack 0
   729  000001                     pop_t@stack:
   730                           	callstack 0
   731  000001                     initialize@stack:
   732                           	callstack 0
   733  000001                     push@stack:
   734                           	callstack 0
   735  000001                     pop@stack:
   736                           	callstack 0
   737  000001                     ___awdiv@dividend:
   738                           	callstack 0
   739  000001                     ___awmod@dividend:
   740                           	callstack 0
   741  000001                     memset@dest:
   742                           	callstack 0
   743  000001                     isupper@c:
   744                           	callstack 0
   745  000001                     fputc@c:
   746                           	callstack 0
   747  000001                     strcpy@dest:
   748                           	callstack 0
   749  000001                     strlen@s:
   750                           	callstack 0
   751  000001                     strncmp@_l:
   752                           	callstack 0
   753  000001                     ___fleq@ff1:
   754                           	callstack 0
   755  000001                     ___flneg@f1:
   756                           	callstack 0
   757  000001                     ___fltol@f1:
   758                           	callstack 0
   759  000001                     ___fldiv@b:
   760                           	callstack 0
   761  000001                     ___xxtofl@val:
   762                           	callstack 0
   763  000001                     ___fpclassifyf@x:
   764                           	callstack 0
   765  000001                     ___aodiv@dividend:
   766                           	callstack 0
   767  000001                     ___aomod@dividend:
   768                           	callstack 0
   769  000001                     ___lodiv@dividend:
   770                           	callstack 0
   771  000001                     ___lomod@dividend:
   772                           	callstack 0
   773                           
   774                           ; 8 bytes @ 0x0
   775  000001                     	ds	2
   776  000003                     ??_gpio_pin_direction_intialize:
   777  000003                     ??_isupper:
   778  000003                     ??_pop:
   779  000003                     gpio_pin_write_logic@logic:
   780                           	callstack 0
   781  000003                     push@c:
   782                           	callstack 0
   783  000003                     check_digit@c:
   784                           	callstack 0
   785  000003                     precedence@op:
   786                           	callstack 0
   787  000003                     gpio_pin_read_logic@logic:
   788                           	callstack 0
   789  000003                     ___awdiv@divisor:
   790                           	callstack 0
   791  000003                     ___awmod@divisor:
   792                           	callstack 0
   793  000003                     memset@c:
   794                           	callstack 0
   795  000003                     fputc@fp:
   796                           	callstack 0
   797  000003                     strcpy@src:
   798                           	callstack 0
   799  000003                     strlen@a:
   800                           	callstack 0
   801  000003                     strncmp@_r:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x2
   805  000003                     	ds	1
   806  000004                     ??_gpio_pin_write_logic:
   807  000004                     ??_push:
   808                           
   809                           ; 1 bytes @ 0x3
   810  000004                     	ds	1
   811  000005                     ??_gpio_pin_read_logic:
   812  000005                     ??_fputc:
   813  000005                     ??___fpclassifyf:
   814  000005                     ??_strcpy:
   815  000005                     ??_pop_t:
   816  000005                     ??___fltol:
   817  000005                     ??___xxtofl:
   818  000005                     ___awdiv@counter:
   819                           	callstack 0
   820  000005                     ___awmod@counter:
   821                           	callstack 0
   822  000005                     memset@n:
   823                           	callstack 0
   824  000005                     strncmp@n:
   825                           	callstack 0
   826  000005                     ___fleq@ff2:
   827                           	callstack 0
   828  000005                     ___fldiv@a:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x4
   832  000005                     	ds	1
   833  000006                     ___awdiv@sign:
   834                           	callstack 0
   835  000006                     ___awmod@sign:
   836                           	callstack 0
   837  000006                     infixToPostfix@infix:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x5
   841  000006                     	ds	1
   842  000007                     ??_memset:
   843  000007                     ??_strncmp:
   844  000007                     ?_tolower:
   845                           	callstack 0
   846  000007                     ___awdiv@quotient:
   847                           	callstack 0
   848  000007                     strcpy@s:
   849                           	callstack 0
   850  000007                     tolower@c:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x6
   854  000007                     	ds	1
   855  000008                     infixToPostfix@postfix:
   856                           	callstack 0
   857  000008                     strncmp@l:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x7
   861  000008                     	ds	1
   862  000009                     ??___fldiv:
   863  000009                     ??_tolower:
   864  000009                     ??___fleq:
   865  000009                     gpio_pin_direction_intialize@ret:
   866                           	callstack 0
   867  000009                     ___fltol@sign1:
   868                           	callstack 0
   869  000009                     ___xxtofl@sign:
   870                           	callstack 0
   871  000009                     memset@k:
   872                           	callstack 0
   873  000009                     ___fpclassifyf@e:
   874                           	callstack 0
   875  000009                     strcpy@d:
   876                           	callstack 0
   877  000009                     ___aodiv@divisor:
   878                           	callstack 0
   879  000009                     ___aomod@divisor:
   880                           	callstack 0
   881  000009                     ___lodiv@divisor:
   882                           	callstack 0
   883  000009                     ___lomod@divisor:
   884                           	callstack 0
   885                           
   886                           ; 8 bytes @ 0x8
   887  000009                     	ds	1
   888  00000A                     ??_infixToPostfix:
   889  00000A                     gpio_pin_write_logic@ret:
   890                           	callstack 0
   891  00000A                     gpio_pin_read_logic@ret:
   892                           	callstack 0
   893  00000A                     ___fltol@exp1:
   894                           	callstack 0
   895  00000A                     ___xxtofl@exp:
   896                           	callstack 0
   897  00000A                     fputs@s:
   898                           	callstack 0
   899  00000A                     strncmp@r:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x9
   903  00000A                     	ds	1
   904  00000B                     lcd_send_4bits@lcd:
   905                           	callstack 0
   906  00000B                     lcd_4bits_send_enable_signal@lcd:
   907                           	callstack 0
   908  00000B                     keypad_get_value@_keypad_obj:
   909                           	callstack 0
   910  00000B                     led_turn_on@led:
   911                           	callstack 0
   912  00000B                     led_turn_off@led:
   913                           	callstack 0
   914  00000B                     gpio_pin_intialize@_pin_config:
   915                           	callstack 0
   916  00000B                     memset@s:
   917                           	callstack 0
   918  00000B                     ___xxtofl@arg:
   919                           	callstack 0
   920  00000B                     ___fpclassifyf@u:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0xA
   924  00000B                     	ds	1
   925  00000C                     fputs@fp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0xB
   929  00000C                     	ds	1
   930  00000D                     ??_gpio_pin_intialize:
   931  00000D                     ??_lcd_4bits_send_enable_signal:
   932  00000D                     ??_led_turn_on:
   933  00000D                     ??_led_turn_off:
   934  00000D                     lcd_send_4bits@_data_command:
   935                           	callstack 0
   936  00000D                     infixToPostfix@current:
   937                           	callstack 0
   938  00000D                     keypad_get_value@value:
   939                           	callstack 0
   940  00000D                     ___fldiv@rem:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0xC
   944  00000D                     	ds	1
   945  00000E                     lcd_send_4bits@ret:
   946                           	callstack 0
   947  00000E                     lcd_4bits_send_enable_signal@ret:
   948                           	callstack 0
   949  00000E                     led_turn_on@pin_obj:
   950                           	callstack 0
   951  00000E                     led_turn_off@pin_obj:
   952                           	callstack 0
   953  00000E                     gpio_pin_intialize@ret:
   954                           	callstack 0
   955  00000E                     fputs@c:
   956                           	callstack 0
   957  00000E                     infixToPostfix@i:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0xD
   961  00000E                     	ds	1
   962  00000F                     ??_keypad_get_value:
   963  00000F                     ?___flmul:
   964                           	callstack 0
   965  00000F                     lcd_4bit_send_command@lcd:
   966                           	callstack 0
   967  00000F                     lcd_4bit_send_char_data@lcd:
   968                           	callstack 0
   969  00000F                     keypad_initialize@_keypad_obj:
   970                           	callstack 0
   971  00000F                     led_initialize@led:
   972                           	callstack 0
   973  00000F                     fputs@i:
   974                           	callstack 0
   975  00000F                     ___flmul@b:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0xE
   979  00000F                     	ds	1
   980  000010                     infixToPostfix@j:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0xF
   984  000010                     	ds	1
   985  000011                     ??_keypad_initialize:
   986  000011                     ??_led_initialize:
   987  000011                     ?_pad:
   988                           	callstack 0
   989  000011                     lcd_4bit_send_command@command:
   990                           	callstack 0
   991  000011                     lcd_4bit_send_char_data@data:
   992                           	callstack 0
   993  000011                     keypad_get_value@ret:
   994                           	callstack 0
   995  000011                     ___aodiv@counter:
   996                           	callstack 0
   997  000011                     ___aomod@counter:
   998                           	callstack 0
   999  000011                     ___lomod@counter:
  1000                           	callstack 0
  1001  000011                     ___fldiv@sign:
  1002                           	callstack 0
  1003  000011                     pad@fp:
  1004                           	callstack 0
  1005  000011                     ___lodiv@quotient:
  1006                           	callstack 0
  1007                           
  1008                           ; 8 bytes @ 0x10
  1009  000011                     	ds	1
  1010  000012                     lcd_4bit_send_command@ret:
  1011                           	callstack 0
  1012  000012                     lcd_4bit_send_char_data@ret:
  1013                           	callstack 0
  1014  000012                     keypad_get_value@column_logic:
  1015                           	callstack 0
  1016  000012                     led_initialize@ret:
  1017                           	callstack 0
  1018  000012                     ___aodiv@sign:
  1019                           	callstack 0
  1020  000012                     ___aomod@sign:
  1021                           	callstack 0
  1022  000012                     ___fldiv@new_exp:
  1023                           	callstack 0
  1024  000012                     infixToPostfix@operatorStack:
  1025                           	callstack 0
  1026                           
  1027                           ; 102 bytes @ 0x11
  1028  000012                     	ds	1
  1029  000013                     ?_abs:
  1030                           	callstack 0
  1031  000013                     keypad_initialize@ret:
  1032                           	callstack 0
  1033  000013                     keypad_get_value@l_counter:
  1034                           	callstack 0
  1035  000013                     led_initialize@pin_obj:
  1036                           	callstack 0
  1037  000013                     lcd_4bit_intialize@lcd:
  1038                           	callstack 0
  1039  000013                     lcd_4bits_set_cursor@lcd:
  1040                           	callstack 0
  1041  000013                     pad@buf:
  1042                           	callstack 0
  1043  000013                     abs@a:
  1044                           	callstack 0
  1045  000013                     ___flmul@a:
  1046                           	callstack 0
  1047  000013                     ___aodiv@quotient:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x12
  1051  000013                     	ds	1
  1052  000014                     keypad_initialize@row_counter:
  1053                           	callstack 0
  1054  000014                     keypad_get_value@l_row_counter:
  1055                           	callstack 0
  1056  000014                     ___fldiv@grs:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x13
  1060  000014                     	ds	1
  1061  000015                     ??_abs:
  1062  000015                     ??_lcd_4bit_intialize:
  1063  000015                     lcd_4bits_set_cursor@row:
  1064                           	callstack 0
  1065  000015                     keypad_initialize@columns_counter:
  1066                           	callstack 0
  1067  000015                     keypad_get_value@l_columns_counter:
  1068                           	callstack 0
  1069  000015                     pad@p:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x14
  1073  000015                     	ds	1
  1074  000016                     lcd_4bits_set_cursor@column:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x15
  1078  000016                     	ds	1
  1079  000017                     ??_lcd_4bits_set_cursor:
  1080  000017                     ??___flmul:
  1081  000017                     ??_pad:
  1082  000017                     lcd_4bit_intialize@data_bins_counter:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x16
  1086  000017                     	ds	1
  1087  000018                     lcd_4bit_intialize@ret:
  1088                           	callstack 0
  1089  000018                     ___fldiv@bexp:
  1090                           	callstack 0
  1091  000018                     pad@i:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x17
  1095  000018                     	ds	1
  1096  000019                     lcd_4bits_set_cursor@ret:
  1097                           	callstack 0
  1098  000019                     ___lodiv@counter:
  1099                           	callstack 0
  1100  000019                     ___fldiv@aexp:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x18
  1104  000019                     	ds	1
  1105  00001A                     ?_floorf:
  1106                           	callstack 0
  1107  00001A                     lcd_4bit_send_char_data_pos@lcd:
  1108                           	callstack 0
  1109  00001A                     lcd_4bit_send_string_pos@lcd:
  1110                           	callstack 0
  1111  00001A                     pad@w:
  1112                           	callstack 0
  1113  00001A                     floorf@x:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x19
  1117  00001A                     	ds	1
  1118  00001B                     ___flmul@sign:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x1A
  1122  00001B                     	ds	1
  1123  00001C                     ?_dtoa:
  1124                           	callstack 0
  1125  00001C                     ?_utoa:
  1126                           	callstack 0
  1127  00001C                     lcd_4bit_send_char_data_pos@row:
  1128                           	callstack 0
  1129  00001C                     lcd_4bit_send_string_pos@row:
  1130                           	callstack 0
  1131  00001C                     dtoa@fp:
  1132                           	callstack 0
  1133  00001C                     utoa@fp:
  1134                           	callstack 0
  1135  00001C                     ___flmul@grs:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x1B
  1139  00001C                     	ds	1
  1140  00001D                     lcd_4bit_send_char_data_pos@column:
  1141                           	callstack 0
  1142  00001D                     lcd_4bit_send_string_pos@column:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x1C
  1146  00001D                     	ds	1
  1147  00001E                     ??_floorf:
  1148  00001E                     lcd_4bit_send_char_data_pos@data:
  1149                           	callstack 0
  1150  00001E                     lcd_4bit_send_string_pos@str:
  1151                           	callstack 0
  1152  00001E                     dtoa@d:
  1153                           	callstack 0
  1154  00001E                     utoa@d:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x1D
  1158  00001E                     	ds	1
  1159  00001F                     lcd_4bit_send_char_data_pos@ret:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x1E
  1163  00001F                     	ds	1
  1164  000020                     lcd_4bit_send_string_pos@ret:
  1165                           	callstack 0
  1166  000020                     ___flmul@aexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x1F
  1170  000020                     	ds	1
  1171  000021                     ___flmul@bexp:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x20
  1175  000021                     	ds	1
  1176  000022                     ___flmul@prod:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x21
  1180  000022                     	ds	2
  1181  000024                     floorf@m:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x23
  1185  000024                     	ds	2
  1186  000026                     ??_dtoa:
  1187  000026                     ??_utoa:
  1188  000026                     ___flmul@temp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x25
  1192  000026                     	ds	2
  1193  000028                     ?___fladd:
  1194                           	callstack 0
  1195  000028                     floorf@e:
  1196                           	callstack 0
  1197  000028                     ___flge@ff1:
  1198                           	callstack 0
  1199  000028                     ___fladd@b:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x27
  1203  000028                     	ds	2
  1204  00002A                     floorf@u:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x29
  1208  00002A                     	ds	2
  1209  00002C                     ___flge@ff2:
  1210                           	callstack 0
  1211  00002C                     ___fladd@a:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x2B
  1215  00002C                     	ds	2
  1216  00002E                     _dtoa$2514:
  1217                           	callstack 0
  1218  00002E                     utoa@p:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x2D
  1222  00002E                     	ds	2
  1223  000030                     ??___fladd:
  1224  000030                     ??___flge:
  1225  000030                     dtoa@p:
  1226                           	callstack 0
  1227  000030                     utoa@w:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2F
  1231  000030                     	ds	2
  1232  000032                     dtoa@w:
  1233                           	callstack 0
  1234  000032                     utoa@n:
  1235                           	callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x31
  1238  000032                     	ds	2
  1239  000034                     ___fladd@signs:
  1240                           	callstack 0
  1241  000034                     dtoa@s:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x33
  1245  000034                     	ds	1
  1246  000035                     ___fladd@aexp:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x34
  1250  000035                     	ds	1
  1251  000036                     ___fladd@bexp:
  1252                           	callstack 0
  1253  000036                     dtoa@n:
  1254                           	callstack 0
  1255                           
  1256                           ; 8 bytes @ 0x35
  1257  000036                     	ds	1
  1258  000037                     ___fladd@grs:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x36
  1262  000037                     	ds	1
  1263  000038                     ?___flsub:
  1264                           	callstack 0
  1265  000038                     ___flsub@b:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x37
  1269  000038                     	ds	2
  1270  00003A                     utoa@i:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x39
  1274  00003A                     	ds	2
  1275  00003C                     ___flsub@a:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x3B
  1279  00003C                     	ds	2
  1280  00003E                     dtoa@i:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x3D
  1284  00003E                     	ds	2
  1285  000040                     ?_efgtoa:
  1286                           	callstack 0
  1287  000040                     ?_doMath:
  1288                           	callstack 0
  1289  000040                     efgtoa@fp:
  1290                           	callstack 0
  1291  000040                     doMath@op1:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x3F
  1295  000040                     	ds	2
  1296  000042                     efgtoa@f:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x41
  1300  000042                     	ds	2
  1301  000044                     doMath@op2:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x43
  1305  000044                     	ds	2
  1306  000046                     efgtoa@c:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x45
  1310  000046                     	ds	1
  1311  000047                     ??_efgtoa:
  1312                           
  1313                           ; 1 bytes @ 0x46
  1314  000047                     	ds	1
  1315  000048                     doMath@op:
  1316                           	callstack 0
  1317                           
  1318                           ; 1 bytes @ 0x47
  1319  000048                     	ds	1
  1320  000049                     push_t@stack:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x48
  1324  000049                     	ds	2
  1325  00004B                     push_t@c:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x4A
  1329  00004B                     	ds	1
  1330  00004C                     _efgtoa$2538:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x4B
  1334  00004C                     	ds	2
  1335  00004E                     _efgtoa$2545:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x4D
  1339  00004E                     	ds	1
  1340  00004F                     ??_push_t:
  1341                           
  1342                           ; 1 bytes @ 0x4E
  1343  00004F                     	ds	1
  1344  000050                     _efgtoa$2546:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x4F
  1348  000050                     	ds	1
  1349  000051                     evaluatePostfix@postfix:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x50
  1353  000051                     	ds	1
  1354  000052                     efgtoa@t:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x51
  1358  000052                     	ds	1
  1359  000053                     evaluatePostfix@result:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x52
  1363  000053                     	ds	1
  1364  000054                     efgtoa@pp:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x53
  1368  000054                     	ds	1
  1369  000055                     ??_evaluatePostfix:
  1370                           
  1371                           ; 1 bytes @ 0x54
  1372  000055                     	ds	1
  1373  000056                     efgtoa@ne:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x55
  1377  000056                     	ds	2
  1378  000058                     efgtoa@m:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x57
  1382  000058                     	ds	2
  1383  00005A                     efgtoa@ou:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x59
  1387  00005A                     	ds	4
  1388  00005E                     efgtoa@d:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x5D
  1392  00005E                     	ds	2
  1393  000060                     efgtoa@sign:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x5F
  1397  000060                     	ds	2
  1398  000062                     efgtoa@p:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x61
  1402  000062                     	ds	2
  1403  000064                     efgtoa@w:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x63
  1407  000064                     	ds	2
  1408  000066                     efgtoa@nmode:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x65
  1412  000066                     	ds	1
  1413  000067                     efgtoa@mode:
  1414                           	callstack 0
  1415                           
  1416                           ; 1 bytes @ 0x66
  1417  000067                     	ds	1
  1418  000068                     efgtoa@h:
  1419                           	callstack 0
  1420                           
  1421                           ; 4 bytes @ 0x67
  1422  000068                     	ds	4
  1423  00006C                     efgtoa@l:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x6B
  1427  00006C                     	ds	4
  1428  000070                     efgtoa@i:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x6F
  1432  000070                     	ds	2
  1433  000072                     efgtoa@g:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x71
  1437  000072                     	ds	4
  1438  000076                     efgtoa@e:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x75
  1442  000076                     	ds	2
  1443  000078                     efgtoa@n:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x77
  1447  000078                     	ds	2
  1448  00007A                     efgtoa@u:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x79
  1452  00007A                     	ds	4
  1453  00007E                     vfprintf@cfmt:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x7D
  1457  00007E                     	ds	2
  1458  000080                     
  1459                           ; 1 bytes @ 0x7F
  1460 ;;
  1461 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1462 ;;
  1463 ;; *************** function _main *****************
  1464 ;; Defined at:
  1465 ;;		line 20 in file "Application.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  i               2  105[BANK0 ] int 
  1470 ;;  ret             1    0        unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  2  851[None  ] int 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        4 bytes
  1485 ;; Hardware stack levels required when called: 8
  1486 ;; This function calls:
  1487 ;;		_application_intialize
  1488 ;;		_evaluatePostfix
  1489 ;;		_infixToPostfix
  1490 ;;		_keypad_get_value
  1491 ;;		_lcd_4bit_send_char_data_pos
  1492 ;;		_lcd_4bit_send_command
  1493 ;;		_lcd_4bit_send_string_pos
  1494 ;;		_led_turn_off
  1495 ;;		_led_turn_on
  1496 ;;		_memset
  1497 ;;		_sprintf
  1498 ;;		_strlen
  1499 ;; This function is called by:
  1500 ;;		Startup code after reset
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text0
  1505  00273A                     __ptext0:
  1506                           	callstack 0
  1507  00273A                     _main:
  1508                           	callstack 23
  1509  00273A                     
  1510                           ;Application.c: 22:     application_intialize();
  1511  00273A  EC55  F030         	call	_application_intialize	;wreg free
  1512  00273E                     l7944:
  1513  00273E  0EB1               	movlw	low _keypad_1
  1514  002740  6E0B               	movwf	keypad_get_value@_keypad_obj^0,c
  1515  002742  0E01               	movlw	high _keypad_1
  1516  002744  6E0C               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
  1517  002746  0EFD               	movlw	low _val
  1518  002748  6E0D               	movwf	keypad_get_value@value^0,c
  1519  00274A  0E00               	movlw	high _val
  1520  00274C  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  1521  00274E  ECD8  F025         	call	_keypad_get_value	;wreg free
  1522  002752                     
  1523                           ;Application.c: 26:         if((val == 'A')&&(counter == 0)){
  1524  002752  0E41               	movlw	65
  1525  002754  0100               	movlb	0	; () banked
  1526  002756  19FD               	xorwf	_val& (0+255),w,b
  1527  002758  A4D8               	btfss	status,2,c
  1528  00275A  EFB1  F013         	goto	u8681
  1529  00275E  EFB3  F013         	goto	u8680
  1530  002762                     u8681:
  1531  002762  EFEB  F013         	goto	l7962
  1532  002766                     u8680:
  1533  002766                     
  1534                           ; BSR set to: 0
  1535  002766  51F4               	movf	_counter& (0+255),w,b
  1536  002768  A4D8               	btfss	status,2,c
  1537  00276A  EFB9  F013         	goto	u8691
  1538  00276E  EFBB  F013         	goto	u8690
  1539  002772                     u8691:
  1540  002772  EFEB  F013         	goto	l7962
  1541  002776                     u8690:
  1542  002776                     
  1543                           ; BSR set to: 0
  1544                           ;Application.c: 27:             led_turn_on(&led_1);
  1545  002776  0EFE               	movlw	low _led_1
  1546  002778  6E0B               	movwf	led_turn_on@led^0,c
  1547  00277A  0E00               	movlw	high _led_1
  1548  00277C  6E0C               	movwf	(led_turn_on@led+1)^0,c
  1549  00277E  EC21  F02C         	call	_led_turn_on	;wreg free
  1550  002782                     
  1551                           ;Application.c: 28:             val = '#';
  1552  002782  0E23               	movlw	35
  1553  002784  0100               	movlb	0	; () banked
  1554  002786  6FFD               	movwf	_val& (0+255),b
  1555  002788                     
  1556                           ; BSR set to: 0
  1557  002788  0EBB               	movlw	low _lcd_1
  1558  00278A  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1559  00278C  0E01               	movlw	high _lcd_1
  1560  00278E  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  1561  002790  0E01               	movlw	1
  1562  002792  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1563  002794  0E01               	movlw	1
  1564  002796  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  1565  002798  0E19               	movlw	low STR_4
  1566  00279A  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1567  00279C  0E10               	movlw	high STR_4
  1568  00279E  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1569  0027A0  EC54  F02B         	call	_lcd_4bit_send_string_pos	;wreg free
  1570  0027A4                     
  1571                           ;Application.c: 31:             _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1572  0027A4  0E06               	movlw	6
  1573  0027A6  0100               	movlb	0	; () banked
  1574  0027A8  6FE8               	movwf	(??_main+1)& (0+255),b
  1575  0027AA  0E13               	movlw	19
  1576  0027AC  6FE7               	movwf	??_main& (0+255),b
  1577  0027AE  0EAD               	movlw	173
  1578  0027B0                     u8817:
  1579  0027B0  2EE8               	decfsz	wreg,f,c
  1580  0027B2  D7FE               	bra	u8817
  1581  0027B4  2FE7               	decfsz	??_main& (0+255),f,b
  1582  0027B6  D7FC               	bra	u8817
  1583  0027B8  2FE8               	decfsz	(??_main+1)& (0+255),f,b
  1584  0027BA  D7FA               	bra	u8817
  1585  0027BC  D000               	nop2	
  1586  0027BE  0EBB               	movlw	low _lcd_1
  1587  0027C0  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1588  0027C2  0E01               	movlw	high _lcd_1
  1589  0027C4  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1590  0027C6  0E01               	movlw	1
  1591  0027C8  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1592  0027CA  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  1593  0027CE                     
  1594                           ;Application.c: 33:             counter++;
  1595  0027CE  0100               	movlb	0	; () banked
  1596  0027D0  2BF4               	incf	_counter& (0+255),f,b
  1597                           
  1598                           ;Application.c: 34:         }
  1599  0027D2  EF39  F014         	goto	l7976
  1600  0027D6                     l7962:
  1601                           
  1602                           ; BSR set to: 0
  1603  0027D6  0E41               	movlw	65
  1604  0027D8  19FD               	xorwf	_val& (0+255),w,b
  1605  0027DA  A4D8               	btfss	status,2,c
  1606  0027DC  EFF2  F013         	goto	u8701
  1607  0027E0  EFF4  F013         	goto	u8700
  1608  0027E4                     u8701:
  1609  0027E4  EF39  F014         	goto	l7976
  1610  0027E8                     u8700:
  1611  0027E8                     
  1612                           ; BSR set to: 0
  1613  0027E8  05F4               	decf	_counter& (0+255),w,b
  1614  0027EA  A4D8               	btfss	status,2,c
  1615  0027EC  EFFA  F013         	goto	u8711
  1616  0027F0  EFFC  F013         	goto	u8710
  1617  0027F4                     u8711:
  1618  0027F4  EF39  F014         	goto	l7976
  1619  0027F8                     u8710:
  1620  0027F8                     
  1621                           ; BSR set to: 0
  1622                           ;Application.c: 36:             counter = 0;
  1623  0027F8  0E00               	movlw	0
  1624  0027FA  6FF4               	movwf	_counter& (0+255),b
  1625  0027FC                     
  1626                           ; BSR set to: 0
  1627                           ;Application.c: 37:             led_turn_off(&led_1);
  1628  0027FC  0EFE               	movlw	low _led_1
  1629  0027FE  6E0B               	movwf	led_turn_off@led^0,c
  1630  002800  0E00               	movlw	high _led_1
  1631  002802  6E0C               	movwf	(led_turn_off@led+1)^0,c
  1632  002804  EC5C  F02C         	call	_led_turn_off	;wreg free
  1633  002808  0EBB               	movlw	low _lcd_1
  1634  00280A  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1635  00280C  0E01               	movlw	high _lcd_1
  1636  00280E  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1637  002810  0E01               	movlw	1
  1638  002812  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1639  002814  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  1640  002818                     
  1641                           ;Application.c: 39:             memset(infix, '\0', 100);
  1642  002818  0E64               	movlw	low _infix
  1643  00281A  6E01               	movwf	memset@dest^0,c
  1644  00281C  0E02               	movlw	high _infix
  1645  00281E  6E02               	movwf	(memset@dest+1)^0,c
  1646  002820  0E00               	movlw	0
  1647  002822  6E04               	movwf	(memset@c+1)^0,c
  1648  002824  0E00               	movlw	0
  1649  002826  6E03               	movwf	memset@c^0,c
  1650  002828  0E00               	movlw	0
  1651  00282A  6E06               	movwf	(memset@n+1)^0,c
  1652  00282C  0E64               	movlw	100
  1653  00282E  6E05               	movwf	memset@n^0,c
  1654  002830  EC6E  F021         	call	_memset	;wreg free
  1655  002834                     
  1656                           ;Application.c: 40:             memset(postfix, '\0', 100);
  1657  002834  0E00               	movlw	low _postfix
  1658  002836  6E01               	movwf	memset@dest^0,c
  1659  002838  0E02               	movlw	high _postfix
  1660  00283A  6E02               	movwf	(memset@dest+1)^0,c
  1661  00283C  0E00               	movlw	0
  1662  00283E  6E04               	movwf	(memset@c+1)^0,c
  1663  002840  0E00               	movlw	0
  1664  002842  6E03               	movwf	memset@c^0,c
  1665  002844  0E00               	movlw	0
  1666  002846  6E06               	movwf	(memset@n+1)^0,c
  1667  002848  0E64               	movlw	100
  1668  00284A  6E05               	movwf	memset@n^0,c
  1669  00284C  EC6E  F021         	call	_memset	;wreg free
  1670                           
  1671                           ;Application.c: 41:             res_counter = 0;
  1672  002850  0E00               	movlw	0
  1673  002852  0100               	movlb	0	; () banked
  1674  002854  6FF2               	movwf	_res_counter& (0+255),b
  1675                           
  1676                           ;Application.c: 42:             num_1 = 0;
  1677  002856  0E00               	movlw	0
  1678  002858  0101               	movlb	1	; () banked
  1679  00285A  6F08               	movwf	_num_1& (0+255),b
  1680  00285C  0E00               	movlw	0
  1681  00285E  6F09               	movwf	(_num_1+1)& (0+255),b
  1682  002860  0E00               	movlw	0
  1683  002862  6F0A               	movwf	(_num_1+2)& (0+255),b
  1684  002864  0E00               	movlw	0
  1685  002866  6F0B               	movwf	(_num_1+3)& (0+255),b
  1686                           
  1687                           ;Application.c: 43:             pos = 1;
  1688  002868  0E01               	movlw	1
  1689  00286A  0100               	movlb	0	; () banked
  1690  00286C  6FFF               	movwf	_pos& (0+255),b
  1691                           
  1692                           ;Application.c: 44:             equal_flag = 0;
  1693  00286E  0E00               	movlw	0
  1694  002870  6FF1               	movwf	_equal_flag& (0+255),b
  1695  002872                     l7976:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;Application.c: 49:         for(int i = 0; i<7; i++){
  1699  002872  0E00               	movlw	0
  1700  002874  6FEA               	movwf	(main@i+1)& (0+255),b
  1701  002876  0E00               	movlw	0
  1702  002878  6FE9               	movwf	main@i& (0+255),b
  1703  00287A                     l7982:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;Application.c: 50:             if(val == operators[i]){
  1707  00287A  0EA4               	movlw	low _operators
  1708  00287C  25E9               	addwf	main@i& (0+255),w,b
  1709  00287E  6ED9               	movwf	fsr2l,c
  1710  002880  0E01               	movlw	high _operators
  1711  002882  21EA               	addwfc	(main@i+1)& (0+255),w,b
  1712  002884  6EDA               	movwf	fsr2h,c
  1713  002886  51FD               	movf	_val& (0+255),w,b
  1714  002888  18DE               	xorwf	postinc2,w,c
  1715  00288A  A4D8               	btfss	status,2,c
  1716  00288C  EF4A  F014         	goto	u8721
  1717  002890  EF4C  F014         	goto	u8720
  1718  002894                     u8721:
  1719  002894  EF50  F014         	goto	l7988
  1720  002898                     u8720:
  1721  002898                     
  1722                           ; BSR set to: 0
  1723                           ;Application.c: 51:                 flag = 1;
  1724  002898  0E01               	movlw	1
  1725  00289A  6FF3               	movwf	_flag& (0+255),b
  1726                           
  1727                           ;Application.c: 52:                 break;
  1728  00289C  EF60  F014         	goto	l7992
  1729  0028A0                     l7988:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;Application.c: 55:         }
  1733  0028A0  4BE9               	infsnz	main@i& (0+255),f,b
  1734  0028A2  2BEA               	incf	(main@i+1)& (0+255),f,b
  1735  0028A4                     
  1736                           ; BSR set to: 0
  1737  0028A4  BFEA               	btfsc	(main@i+1)& (0+255),7,b
  1738  0028A6  EF5E  F014         	goto	u8731
  1739  0028AA  51EA               	movf	(main@i+1)& (0+255),w,b
  1740  0028AC  E109               	bnz	u8730
  1741  0028AE  0E07               	movlw	7
  1742  0028B0  5DE9               	subwf	main@i& (0+255),w,b
  1743  0028B2  A0D8               	btfss	status,0,c
  1744  0028B4  EF5E  F014         	goto	u8731
  1745  0028B8  EF60  F014         	goto	u8730
  1746  0028BC                     u8731:
  1747  0028BC  EF3D  F014         	goto	l7982
  1748  0028C0                     u8730:
  1749  0028C0                     l7992:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;Application.c: 56:         if((flag != 1)&&(counter == 1)&&(val != '#')){
  1753  0028C0  05F3               	decf	_flag& (0+255),w,b
  1754  0028C2  B4D8               	btfsc	status,2,c
  1755  0028C4  EF66  F014         	goto	u8741
  1756  0028C8  EF68  F014         	goto	u8740
  1757  0028CC                     u8741:
  1758  0028CC  EFCF  F014         	goto	l8022
  1759  0028D0                     u8740:
  1760  0028D0                     
  1761                           ; BSR set to: 0
  1762  0028D0  05F4               	decf	_counter& (0+255),w,b
  1763  0028D2  A4D8               	btfss	status,2,c
  1764  0028D4  EF6E  F014         	goto	u8751
  1765  0028D8  EF70  F014         	goto	u8750
  1766  0028DC                     u8751:
  1767  0028DC  EFCF  F014         	goto	l8022
  1768  0028E0                     u8750:
  1769  0028E0                     
  1770                           ; BSR set to: 0
  1771  0028E0  0E23               	movlw	35
  1772  0028E2  19FD               	xorwf	_val& (0+255),w,b
  1773  0028E4  B4D8               	btfsc	status,2,c
  1774  0028E6  EF77  F014         	goto	u8761
  1775  0028EA  EF79  F014         	goto	u8760
  1776  0028EE                     u8761:
  1777  0028EE  EFCF  F014         	goto	l8022
  1778  0028F2                     u8760:
  1779  0028F2                     
  1780                           ; BSR set to: 0
  1781                           ;Application.c: 57:             if(equal_flag == 1){
  1782  0028F2  05F1               	decf	_equal_flag& (0+255),w,b
  1783  0028F4  A4D8               	btfss	status,2,c
  1784  0028F6  EF7F  F014         	goto	u8771
  1785  0028FA  EF81  F014         	goto	u8770
  1786  0028FE                     u8771:
  1787  0028FE  EFB6  F014         	goto	l8014
  1788  002902                     u8770:
  1789  002902                     
  1790                           ; BSR set to: 0
  1791  002902  0EBB               	movlw	low _lcd_1
  1792  002904  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1793  002906  0E01               	movlw	high _lcd_1
  1794  002908  6E10               	movwf	(lcd_4bit_send_command@lcd+1)^0,c
  1795  00290A  0E01               	movlw	1
  1796  00290C  6E11               	movwf	lcd_4bit_send_command@command^0,c
  1797  00290E  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  1798  002912                     
  1799                           ;Application.c: 59:                 memset(infix, '\0', 100);
  1800  002912  0E64               	movlw	low _infix
  1801  002914  6E01               	movwf	memset@dest^0,c
  1802  002916  0E02               	movlw	high _infix
  1803  002918  6E02               	movwf	(memset@dest+1)^0,c
  1804  00291A  0E00               	movlw	0
  1805  00291C  6E04               	movwf	(memset@c+1)^0,c
  1806  00291E  0E00               	movlw	0
  1807  002920  6E03               	movwf	memset@c^0,c
  1808  002922  0E00               	movlw	0
  1809  002924  6E06               	movwf	(memset@n+1)^0,c
  1810  002926  0E64               	movlw	100
  1811  002928  6E05               	movwf	memset@n^0,c
  1812  00292A  EC6E  F021         	call	_memset	;wreg free
  1813  00292E                     
  1814                           ;Application.c: 60:                 memset(postfix, '\0', 100);
  1815  00292E  0E00               	movlw	low _postfix
  1816  002930  6E01               	movwf	memset@dest^0,c
  1817  002932  0E02               	movlw	high _postfix
  1818  002934  6E02               	movwf	(memset@dest+1)^0,c
  1819  002936  0E00               	movlw	0
  1820  002938  6E04               	movwf	(memset@c+1)^0,c
  1821  00293A  0E00               	movlw	0
  1822  00293C  6E03               	movwf	memset@c^0,c
  1823  00293E  0E00               	movlw	0
  1824  002940  6E06               	movwf	(memset@n+1)^0,c
  1825  002942  0E64               	movlw	100
  1826  002944  6E05               	movwf	memset@n^0,c
  1827  002946  EC6E  F021         	call	_memset	;wreg free
  1828  00294A                     
  1829                           ;Application.c: 61:                 res_counter = 0;
  1830  00294A  0E00               	movlw	0
  1831  00294C  0100               	movlb	0	; () banked
  1832  00294E  6FF2               	movwf	_res_counter& (0+255),b
  1833  002950                     
  1834                           ; BSR set to: 0
  1835                           ;Application.c: 62:                 num_1 = 0;
  1836  002950  0E00               	movlw	0
  1837  002952  0101               	movlb	1	; () banked
  1838  002954  6F08               	movwf	_num_1& (0+255),b
  1839  002956  0E00               	movlw	0
  1840  002958  6F09               	movwf	(_num_1+1)& (0+255),b
  1841  00295A  0E00               	movlw	0
  1842  00295C  6F0A               	movwf	(_num_1+2)& (0+255),b
  1843  00295E  0E00               	movlw	0
  1844  002960  6F0B               	movwf	(_num_1+3)& (0+255),b
  1845  002962                     
  1846                           ; BSR set to: 1
  1847                           ;Application.c: 63:                 pos = 1;
  1848  002962  0E01               	movlw	1
  1849  002964  0100               	movlb	0	; () banked
  1850  002966  6FFF               	movwf	_pos& (0+255),b
  1851  002968                     
  1852                           ; BSR set to: 0
  1853                           ;Application.c: 64:                 equal_flag = 0;
  1854  002968  0E00               	movlw	0
  1855  00296A  6FF1               	movwf	_equal_flag& (0+255),b
  1856  00296C                     l8014:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;Application.c: 66:             infix[res_counter] = val;
  1860  00296C  0E64               	movlw	low _infix
  1861  00296E  25F2               	addwf	_res_counter& (0+255),w,b
  1862  002970  6ED9               	movwf	fsr2l,c
  1863  002972  6ADA               	clrf	fsr2h,c
  1864  002974  0E02               	movlw	high _infix
  1865  002976  22DA               	addwfc	fsr2h,f,c
  1866  002978  C0FD  FFDF         	movff	_val,indf2
  1867  00297C                     
  1868                           ; BSR set to: 0
  1869  00297C  0EBB               	movlw	low _lcd_1
  1870  00297E  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1871  002980  0E01               	movlw	high _lcd_1
  1872  002982  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  1873  002984  0E01               	movlw	1
  1874  002986  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1875  002988  C0FF  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  1876  00298C  C0FD  F01E         	movff	_val,lcd_4bit_send_char_data_pos@data
  1877  002990  EC88  F02E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1878  002994                     
  1879                           ;Application.c: 68:             res_counter++;
  1880  002994  0100               	movlb	0	; () banked
  1881  002996  2BF2               	incf	_res_counter& (0+255),f,b
  1882  002998                     
  1883                           ; BSR set to: 0
  1884                           ;Application.c: 69:             pos++;
  1885  002998  2BFF               	incf	_pos& (0+255),f,b
  1886                           
  1887                           ;Application.c: 70:         }
  1888  00299A  EFC4  F015         	goto	l8078
  1889  00299E                     l8022:
  1890                           
  1891                           ; BSR set to: 0
  1892  00299E  05F3               	decf	_flag& (0+255),w,b
  1893  0029A0  A4D8               	btfss	status,2,c
  1894  0029A2  EFD5  F014         	goto	u8781
  1895  0029A6  EFD7  F014         	goto	u8780
  1896  0029AA                     u8781:
  1897  0029AA  EFC4  F015         	goto	l8078
  1898  0029AE                     u8780:
  1899  0029AE                     
  1900                           ; BSR set to: 0
  1901  0029AE  05F4               	decf	_counter& (0+255),w,b
  1902  0029B0  A4D8               	btfss	status,2,c
  1903  0029B2  EFDD  F014         	goto	u8791
  1904  0029B6  EFDF  F014         	goto	u8790
  1905  0029BA                     u8791:
  1906  0029BA  EFC4  F015         	goto	l8078
  1907  0029BE                     u8790:
  1908  0029BE  EF2A  F015         	goto	l8056
  1909  0029C2                     l8028:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;Application.c: 74:                     op[0] = '*';
  1913  0029C2  0E2A               	movlw	42
  1914  0029C4  0101               	movlb	1	; () banked
  1915  0029C6  6F0E               	movwf	_op& (0+255),b
  1916  0029C8                     
  1917                           ; BSR set to: 1
  1918                           ;Application.c: 75:                     infix[res_counter] = '*';
  1919  0029C8  0E64               	movlw	low _infix
  1920  0029CA  0100               	movlb	0	; () banked
  1921  0029CC  25F2               	addwf	_res_counter& (0+255),w,b
  1922  0029CE  6ED9               	movwf	fsr2l,c
  1923  0029D0  6ADA               	clrf	fsr2h,c
  1924  0029D2  0E02               	movlw	high _infix
  1925  0029D4  22DA               	addwfc	fsr2h,f,c
  1926  0029D6  0E2A               	movlw	42
  1927  0029D8  6EDF               	movwf	indf2,c
  1928  0029DA                     l8032:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;Application.c: 76:                     res_counter++;
  1932  0029DA  2BF2               	incf	_res_counter& (0+255),f,b
  1933                           
  1934                           ;Application.c: 77:                     break;
  1935  0029DC  EF4B  F015         	goto	l8058
  1936  0029E0                     l8034:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;Application.c: 79:                     op[0] = '/';
  1940  0029E0  0E2F               	movlw	47
  1941  0029E2  0101               	movlb	1	; () banked
  1942  0029E4  6F0E               	movwf	_op& (0+255),b
  1943  0029E6                     
  1944                           ; BSR set to: 1
  1945                           ;Application.c: 80:                     infix[res_counter] = '/';
  1946  0029E6  0E64               	movlw	low _infix
  1947  0029E8  0100               	movlb	0	; () banked
  1948  0029EA  25F2               	addwf	_res_counter& (0+255),w,b
  1949  0029EC  6ED9               	movwf	fsr2l,c
  1950  0029EE  6ADA               	clrf	fsr2h,c
  1951  0029F0  0E02               	movlw	high _infix
  1952  0029F2  22DA               	addwfc	fsr2h,f,c
  1953  0029F4  0E2F               	movlw	47
  1954  0029F6  6EDF               	movwf	indf2,c
  1955  0029F8  EFED  F014         	goto	l8032
  1956  0029FC                     l8040:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;Application.c: 84:                     op[0] = '-';
  1960  0029FC  0E2D               	movlw	45
  1961  0029FE  0101               	movlb	1	; () banked
  1962  002A00  6F0E               	movwf	_op& (0+255),b
  1963  002A02                     
  1964                           ; BSR set to: 1
  1965                           ;Application.c: 85:                     infix[res_counter] = '-';
  1966  002A02  0E64               	movlw	low _infix
  1967  002A04  0100               	movlb	0	; () banked
  1968  002A06  25F2               	addwf	_res_counter& (0+255),w,b
  1969  002A08  6ED9               	movwf	fsr2l,c
  1970  002A0A  6ADA               	clrf	fsr2h,c
  1971  002A0C  0E02               	movlw	high _infix
  1972  002A0E  22DA               	addwfc	fsr2h,f,c
  1973  002A10  0E2D               	movlw	45
  1974  002A12  6EDF               	movwf	indf2,c
  1975  002A14  EFED  F014         	goto	l8032
  1976  002A18                     l8046:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;Application.c: 89:                     op[0] = '+';
  1980  002A18  0E2B               	movlw	43
  1981  002A1A  0101               	movlb	1	; () banked
  1982  002A1C  6F0E               	movwf	_op& (0+255),b
  1983  002A1E                     
  1984                           ; BSR set to: 1
  1985                           ;Application.c: 90:                     infix[res_counter] = '+';
  1986  002A1E  0E64               	movlw	low _infix
  1987  002A20  0100               	movlb	0	; () banked
  1988  002A22  25F2               	addwf	_res_counter& (0+255),w,b
  1989  002A24  6ED9               	movwf	fsr2l,c
  1990  002A26  6ADA               	clrf	fsr2h,c
  1991  002A28  0E02               	movlw	high _infix
  1992  002A2A  22DA               	addwfc	fsr2h,f,c
  1993  002A2C  0E2B               	movlw	43
  1994  002A2E  6EDF               	movwf	indf2,c
  1995  002A30  EFED  F014         	goto	l8032
  1996  002A34                     l8052:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;Application.c: 94:                     op[0] = '=';
  2000  002A34  0E3D               	movlw	61
  2001  002A36  0101               	movlb	1	; () banked
  2002  002A38  6F0E               	movwf	_op& (0+255),b
  2003                           
  2004                           ;Application.c: 95:                     equal_flag = 1;
  2005  002A3A  0E01               	movlw	1
  2006  002A3C  0100               	movlb	0	; () banked
  2007  002A3E  6FF1               	movwf	_equal_flag& (0+255),b
  2008  002A40                     
  2009                           ; BSR set to: 0
  2010                           ;Application.c: 96:                     infix[res_counter] = '\0';
  2011  002A40  0E64               	movlw	low _infix
  2012  002A42  25F2               	addwf	_res_counter& (0+255),w,b
  2013  002A44  6ED9               	movwf	fsr2l,c
  2014  002A46  6ADA               	clrf	fsr2h,c
  2015  002A48  0E02               	movlw	high _infix
  2016  002A4A  22DA               	addwfc	fsr2h,f,c
  2017  002A4C  0E00               	movlw	0
  2018  002A4E  6EDF               	movwf	indf2,c
  2019                           
  2020                           ;Application.c: 97:                     break;
  2021  002A50  EF4B  F015         	goto	l8058
  2022  002A54                     l8056:
  2023                           
  2024                           ; BSR set to: 0
  2025  002A54  51FD               	movf	_val& (0+255),w,b
  2026  002A56  6FE7               	movwf	??_main& (0+255),b
  2027  002A58  6BE8               	clrf	(??_main+1)& (0+255),b
  2028                           
  2029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2030                           ; Switch size 1, requested type "simple"
  2031                           ; Number of cases is 1, Range of values is 0 to 0
  2032                           ; switch strategies available:
  2033                           ; Name         Instructions Cycles
  2034                           ; simple_byte            4     3 (average)
  2035                           ;	Chosen strategy is simple_byte
  2036  002A5A  51E8               	movf	(??_main+1)& (0+255),w,b
  2037  002A5C  0A00               	xorlw	0	; case 0
  2038  002A5E  B4D8               	btfsc	status,2,c
  2039  002A60  EF34  F015         	goto	l8166
  2040  002A64  EF4B  F015         	goto	l8058
  2041  002A68                     l8166:
  2042                           
  2043                           ; BSR set to: 0
  2044                           ; Switch size 1, requested type "simple"
  2045                           ; Number of cases is 5, Range of values is 42 to 69
  2046                           ; switch strategies available:
  2047                           ; Name         Instructions Cycles
  2048                           ; simple_byte           16     9 (average)
  2049                           ;	Chosen strategy is simple_byte
  2050  002A68  51E7               	movf	??_main& (0+255),w,b
  2051  002A6A  0A2A               	xorlw	42	; case 42
  2052  002A6C  B4D8               	btfsc	status,2,c
  2053  002A6E  EFFE  F014         	goto	l8040
  2054  002A72  0A01               	xorlw	1	; case 43
  2055  002A74  B4D8               	btfsc	status,2,c
  2056  002A76  EF0C  F015         	goto	l8046
  2057  002A7A  0A04               	xorlw	4	; case 47
  2058  002A7C  B4D8               	btfsc	status,2,c
  2059  002A7E  EFE1  F014         	goto	l8028
  2060  002A82  0A12               	xorlw	18	; case 61
  2061  002A84  B4D8               	btfsc	status,2,c
  2062  002A86  EF1A  F015         	goto	l8052
  2063  002A8A  0A78               	xorlw	120	; case 69
  2064  002A8C  B4D8               	btfsc	status,2,c
  2065  002A8E  EFF0  F014         	goto	l8034
  2066  002A92  EF4B  F015         	goto	l8058
  2067  002A96                     l8058:
  2068                           
  2069                           ; BSR set to: 0
  2070  002A96  0EBB               	movlw	low _lcd_1
  2071  002A98  6E1A               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2072  002A9A  0E01               	movlw	high _lcd_1
  2073  002A9C  6E1B               	movwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,c
  2074  002A9E  0E01               	movlw	1
  2075  002AA0  6E1C               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2076  002AA2  C0FF  F01D         	movff	_pos,lcd_4bit_send_char_data_pos@column
  2077  002AA6  C10E  F01E         	movff	_op,lcd_4bit_send_char_data_pos@data
  2078  002AAA  EC88  F02E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2079  002AAE                     
  2080                           ;Application.c: 101:             if(op[0] == '='){
  2081  002AAE  0E3D               	movlw	61
  2082  002AB0  0101               	movlb	1	; () banked
  2083  002AB2  190E               	xorwf	_op& (0+255),w,b
  2084  002AB4  A4D8               	btfss	status,2,c
  2085  002AB6  EF5F  F015         	goto	u8801
  2086  002ABA  EF61  F015         	goto	u8800
  2087  002ABE                     u8801:
  2088  002ABE  EFB9  F015         	goto	l8074
  2089  002AC2                     u8800:
  2090  002AC2                     
  2091                           ; BSR set to: 1
  2092                           ;Application.c: 102:                 infixToPostfix(infix, postfix);
  2093  002AC2  0E64               	movlw	low _infix
  2094  002AC4  6E06               	movwf	infixToPostfix@infix^0,c
  2095  002AC6  0E02               	movlw	high _infix
  2096  002AC8  6E07               	movwf	(infixToPostfix@infix+1)^0,c
  2097  002ACA  0E00               	movlw	low _postfix
  2098  002ACC  6E08               	movwf	infixToPostfix@postfix^0,c
  2099  002ACE  0E02               	movlw	high _postfix
  2100  002AD0  6E09               	movwf	(infixToPostfix@postfix+1)^0,c
  2101  002AD2  ECDD  F01E         	call	_infixToPostfix	;wreg free
  2102  002AD6                     
  2103                           ;Application.c: 103:                 evaluatePostfix(postfix, &result);
  2104  002AD6  0E00               	movlw	low _postfix
  2105  002AD8  6E51               	movwf	evaluatePostfix@postfix^0,c
  2106  002ADA  0E02               	movlw	high _postfix
  2107  002ADC  6E52               	movwf	(evaluatePostfix@postfix+1)^0,c
  2108  002ADE  0E82               	movlw	low _result
  2109  002AE0  6E53               	movwf	evaluatePostfix@result^0,c
  2110  002AE2  0E01               	movlw	high _result
  2111  002AE4  6E54               	movwf	(evaluatePostfix@result+1)^0,c
  2112  002AE6  ECAF  F019         	call	_evaluatePostfix	;wreg free
  2113  002AEA                     
  2114                           ;Application.c: 104:                 sprintf(arr, "%f", result);
  2115  002AEA  0E77               	movlw	low _arr
  2116  002AEC  0100               	movlb	0	; () banked
  2117  002AEE  6FB2               	movwf	sprintf@s& (0+255),b
  2118  002AF0  0E01               	movlw	high _arr
  2119  002AF2  6FB3               	movwf	(sprintf@s+1)& (0+255),b
  2120  002AF4  0E3C               	movlw	low STR_5
  2121  002AF6  6FB4               	movwf	sprintf@fmt& (0+255),b
  2122  002AF8  0E10               	movlw	high STR_5
  2123  002AFA  6FB5               	movwf	(sprintf@fmt+1)& (0+255),b
  2124  002AFC  C182  F0B6         	movff	_result,?_sprintf+4
  2125  002B00  C183  F0B7         	movff	_result+1,?_sprintf+5
  2126  002B04  C184  F0B8         	movff	_result+2,?_sprintf+6
  2127  002B08  C185  F0B9         	movff	_result+3,?_sprintf+7
  2128  002B0C  EC3C  F02E         	call	_sprintf	;wreg free
  2129  002B10  0EBB               	movlw	low _lcd_1
  2130  002B12  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2131  002B14  0E01               	movlw	high _lcd_1
  2132  002B16  6E1B               	movwf	(lcd_4bit_send_string_pos@lcd+1)^0,c
  2133  002B18  0E04               	movlw	4
  2134  002B1A  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  2135  002B1C  0E77               	movlw	low _arr
  2136  002B1E  6E01               	movwf	strlen@s^0,c
  2137  002B20  0E01               	movlw	high _arr
  2138  002B22  6E02               	movwf	(strlen@s+1)^0,c
  2139  002B24  ECE5  F02F         	call	_strlen	;wreg free
  2140  002B28  5001               	movf	?_strlen^0,w,c
  2141  002B2A  0814               	sublw	20
  2142  002B2C  6E1D               	movwf	lcd_4bit_send_string_pos@column^0,c
  2143  002B2E  0E77               	movlw	low _arr
  2144  002B30  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  2145  002B32  0E01               	movlw	high _arr
  2146  002B34  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2147  002B36  EC54  F02B         	call	_lcd_4bit_send_string_pos	;wreg free
  2148  002B3A                     
  2149                           ;Application.c: 106:                 memset(infix, '\0', 100);
  2150  002B3A  0E64               	movlw	low _infix
  2151  002B3C  6E01               	movwf	memset@dest^0,c
  2152  002B3E  0E02               	movlw	high _infix
  2153  002B40  6E02               	movwf	(memset@dest+1)^0,c
  2154  002B42  0E00               	movlw	0
  2155  002B44  6E04               	movwf	(memset@c+1)^0,c
  2156  002B46  0E00               	movlw	0
  2157  002B48  6E03               	movwf	memset@c^0,c
  2158  002B4A  0E00               	movlw	0
  2159  002B4C  6E06               	movwf	(memset@n+1)^0,c
  2160  002B4E  0E64               	movlw	100
  2161  002B50  6E05               	movwf	memset@n^0,c
  2162  002B52  EC6E  F021         	call	_memset	;wreg free
  2163  002B56                     
  2164                           ;Application.c: 107:                 memset(postfix, '\0', 100);
  2165  002B56  0E00               	movlw	low _postfix
  2166  002B58  6E01               	movwf	memset@dest^0,c
  2167  002B5A  0E02               	movlw	high _postfix
  2168  002B5C  6E02               	movwf	(memset@dest+1)^0,c
  2169  002B5E  0E00               	movlw	0
  2170  002B60  6E04               	movwf	(memset@c+1)^0,c
  2171  002B62  0E00               	movlw	0
  2172  002B64  6E03               	movwf	memset@c^0,c
  2173  002B66  0E00               	movlw	0
  2174  002B68  6E06               	movwf	(memset@n+1)^0,c
  2175  002B6A  0E64               	movlw	100
  2176  002B6C  6E05               	movwf	memset@n^0,c
  2177  002B6E  EC6E  F021         	call	_memset	;wreg free
  2178  002B72                     l8074:
  2179                           
  2180                           ;Application.c: 109:             pos++;
  2181  002B72  0100               	movlb	0	; () banked
  2182  002B74  2BFF               	incf	_pos& (0+255),f,b
  2183  002B76                     
  2184                           ; BSR set to: 0
  2185                           ;Application.c: 110:             num_1 = 0;
  2186  002B76  0E00               	movlw	0
  2187  002B78  0101               	movlb	1	; () banked
  2188  002B7A  6F08               	movwf	_num_1& (0+255),b
  2189  002B7C  0E00               	movlw	0
  2190  002B7E  6F09               	movwf	(_num_1+1)& (0+255),b
  2191  002B80  0E00               	movlw	0
  2192  002B82  6F0A               	movwf	(_num_1+2)& (0+255),b
  2193  002B84  0E00               	movlw	0
  2194  002B86  6F0B               	movwf	(_num_1+3)& (0+255),b
  2195  002B88                     l8078:
  2196                           
  2197                           ;Application.c: 113:         flag = 0;
  2198  002B88  0E00               	movlw	0
  2199  002B8A  0100               	movlb	0	; () banked
  2200  002B8C  6FF3               	movwf	_flag& (0+255),b
  2201  002B8E                     
  2202                           ; BSR set to: 0
  2203                           ;Application.c: 114:         val = '#';
  2204  002B8E  0E23               	movlw	35
  2205  002B90  6FFD               	movwf	_val& (0+255),b
  2206  002B92  EF9F  F013         	goto	l7944
  2207  002B96  EF00  F000         	goto	start
  2208  002B9A                     __end_of_main:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _sprintf *****************
  2212 ;; Defined at:
  2213 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  s               2   50[BANK0 ] PTR unsigned char 
  2216 ;;		 -> arr(11), 
  2217 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2218 ;;		 -> STR_5(3), STR_3(3), STR_2(3), STR_1(4), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  f              11   60[BANK0 ] struct _IO_FILE
  2221 ;;  ap              2   58[BANK0 ] PTR void [1]
  2222 ;;		 -> ?_sprintf(2), 
  2223 ;;  ret             2    0        int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  2   50[BANK0 ] int 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2233 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;Total ram usage:       21 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 7
  2240 ;; This function calls:
  2241 ;;		_vfprintf
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;;		_convert_uint32_to_string
  2245 ;;		_convert_uint16_to_string
  2246 ;;		_convert_uint8_to_string
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text1
  2251  005C78                     __ptext1:
  2252                           	callstack 0
  2253  005C78                     _sprintf:
  2254                           	callstack 23
  2255  005C78  0EB6               	movlw	low (?_sprintf+4)
  2256  005C7A  0100               	movlb	0	; () banked
  2257  005C7C  6FBA               	movwf	sprintf@ap& (0+255),b
  2258  005C7E  0E00               	movlw	high (?_sprintf+4)
  2259  005C80  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  2260  005C82  C0B2  F0BC         	movff	sprintf@s,sprintf@f
  2261  005C86  C0B3  F0BD         	movff	sprintf@s+1,sprintf@f+1
  2262  005C8A                     
  2263                           ; BSR set to: 0
  2264  005C8A  0E00               	movlw	0
  2265  005C8C  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  2266  005C8E  0E00               	movlw	0
  2267  005C90  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  2268  005C92                     
  2269                           ; BSR set to: 0
  2270  005C92  0E00               	movlw	0
  2271  005C94  6FC6               	movwf	(sprintf@f+10)& (0+255),b
  2272  005C96  0E00               	movlw	0
  2273  005C98  6FC5               	movwf	(sprintf@f+9)& (0+255),b
  2274  005C9A                     
  2275                           ; BSR set to: 0
  2276  005C9A  0EBC               	movlw	low sprintf@f
  2277  005C9C  6FAC               	movwf	vfprintf@fp& (0+255),b
  2278  005C9E  0E00               	movlw	high sprintf@f
  2279  005CA0  6FAD               	movwf	(vfprintf@fp+1)& (0+255),b
  2280  005CA2  C0B4  F0AE         	movff	sprintf@fmt,vfprintf@fmt
  2281  005CA6  C0B5  F0AF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2282  005CAA  0EBA               	movlw	low sprintf@ap
  2283  005CAC  6FB0               	movwf	vfprintf@ap& (0+255),b
  2284  005CAE  0E00               	movlw	high sprintf@ap
  2285  005CB0  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
  2286  005CB2  EC09  F02D         	call	_vfprintf	;wreg free
  2287  005CB6  0100               	movlb	0	; () banked
  2288  005CB8  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  2289  005CBA  25B2               	addwf	sprintf@s& (0+255),w,b
  2290  005CBC  6ED9               	movwf	fsr2l,c
  2291  005CBE  51C0               	movf	(sprintf@f+4)& (0+255),w,b
  2292  005CC0  21B3               	addwfc	(sprintf@s+1)& (0+255),w,b
  2293  005CC2  6EDA               	movwf	fsr2h,c
  2294  005CC4  0E00               	movlw	0
  2295  005CC6  6EDF               	movwf	indf2,c
  2296  005CC8                     
  2297                           ; BSR set to: 0
  2298  005CC8  0012               	return		;funcret
  2299  005CCA                     __end_of_sprintf:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _vfprintf *****************
  2303 ;; Defined at:
  2304 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  2307 ;;		 -> sprintf@f(11), 
  2308 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  2309 ;;		 -> STR_5(3), STR_3(3), STR_2(3), STR_1(4), 
  2310 ;;  ap              2   48[BANK0 ] PTR PTR void 
  2311 ;;		 -> sprintf@ap(2), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  cfmt            2  125[COMRAM] PTR unsigned char 
  2314 ;;		 -> STR_5(3), STR_3(3), STR_2(3), STR_1(4), 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2   44[BANK0 ] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2324 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;Total ram usage:        8 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 6
  2331 ;; This function calls:
  2332 ;;		_vfpfcnvrt
  2333 ;; This function is called by:
  2334 ;;		_sprintf
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text2
  2339  005A12                     __ptext2:
  2340                           	callstack 0
  2341  005A12                     _vfprintf:
  2342                           	callstack 23
  2343  005A12                     
  2344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2345  005A12  C0AE  F07E         	movff	vfprintf@fmt,vfprintf@cfmt
  2346  005A16  C0AF  F07F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2347  005A1A                     
  2348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2349  005A1A  0E00               	movlw	0
  2350  005A1C  0101               	movlb	1	; () banked
  2351  005A1E  6F0D               	movwf	(_nout+1)& (0+255),b
  2352  005A20  0E00               	movlw	0
  2353  005A22  6F0C               	movwf	_nout& (0+255),b
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2356  005A24  EF2B  F02D         	goto	l7026
  2357  005A28                     l7024:
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2361  005A28  C0AC  F080         	movff	vfprintf@fp,vfpfcnvrt@fp
  2362  005A2C  C0AD  F081         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2363  005A30  0E7E               	movlw	low vfprintf@cfmt
  2364  005A32  0100               	movlb	0	; () banked
  2365  005A34  6F82               	movwf	vfpfcnvrt@fmt& (0+255),b
  2366  005A36  0E00               	movlw	high vfprintf@cfmt
  2367  005A38  6F83               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2368  005A3A  C0B0  F084         	movff	vfprintf@ap,vfpfcnvrt@ap
  2369  005A3E  C0B1  F085         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2370  005A42  EC1A  F00E         	call	_vfpfcnvrt	;wreg free
  2371  005A46  0100               	movlb	0	; () banked
  2372  005A48  5180               	movf	?_vfpfcnvrt& (0+255),w,b
  2373  005A4A  0101               	movlb	1	; () banked
  2374  005A4C  270C               	addwf	_nout& (0+255),f,b
  2375  005A4E  0100               	movlb	0	; () banked
  2376  005A50  5181               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2377  005A52  0101               	movlb	1	; () banked
  2378  005A54  230D               	addwfc	(_nout+1)& (0+255),f,b
  2379  005A56                     l7026:
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2383  005A56  C07E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2384  005A5A  C07F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2385  005A5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2386  005A5E  6AF8               	clrf	tblptru,c
  2387  005A60                     	endif
  2388  005A60                     	if	0	;tblptru may be non-zero
  2389  005A60                     	endif
  2390  005A60  0008               	tblrd		*
  2391  005A62  50F5               	movf	tablat,w,c
  2392  005A64  0900               	iorlw	0
  2393  005A66  A4D8               	btfss	status,2,c
  2394  005A68  EF38  F02D         	goto	u7621
  2395  005A6C  EF3A  F02D         	goto	u7620
  2396  005A70                     u7621:
  2397  005A70  EF14  F02D         	goto	l7024
  2398  005A74                     u7620:
  2399  005A74                     
  2400                           ; BSR set to: 1
  2401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2402  005A74  C10C  F0AC         	movff	_nout,?_vfprintf
  2403  005A78  C10D  F0AD         	movff	_nout+1,?_vfprintf+1
  2404  005A7C                     
  2405                           ; BSR set to: 1
  2406  005A7C  0012               	return		;funcret
  2407  005A7E                     __end_of_vfprintf:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _vfpfcnvrt *****************
  2411 ;; Defined at:
  2412 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2415 ;;		 -> sprintf@f(11), 
  2416 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  2417 ;;		 -> vfprintf@cfmt(2), 
  2418 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2419 ;;		 -> sprintf@ap(2), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  llu             8   28[BANK0 ] unsigned long long 
  2422 ;;  ll              8   20[BANK0 ] long long 
  2423 ;;  f               4   36[BANK0 ] long long 
  2424 ;;  ct              3   40[BANK0 ] unsigned char [3]
  2425 ;;  vp              3    0        PTR void 
  2426 ;;  cp              3    0        PTR unsigned char 
  2427 ;;  i               2    0        int 
  2428 ;;  done            2    0        int 
  2429 ;;  c               1   43[BANK0 ] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  2    0[BANK0 ] int 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:       44 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 5
  2446 ;; This function calls:
  2447 ;;		_dtoa
  2448 ;;		_efgtoa
  2449 ;;		_fputc
  2450 ;;		_isupper
  2451 ;;		_strncmp
  2452 ;;		_tolower
  2453 ;;		_utoa
  2454 ;; This function is called by:
  2455 ;;		_vfprintf
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text3
  2460  001C34                     __ptext3:
  2461                           	callstack 0
  2462  001C34                     _vfpfcnvrt:
  2463                           	callstack 23
  2464  001C34                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2466  001C34  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  001C38  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  001C3C  CFDE FFF6          	movff	postinc2,tblptrl
  2469  001C40  CFDD FFF7          	movff	postdec2,tblptrh
  2470  001C44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2471  001C44  6AF8               	clrf	tblptru,c
  2472  001C46                     	endif
  2473  001C46                     	if	0	;tblptru may be non-zero
  2474  001C46                     	endif
  2475  001C46  0008               	tblrd		*
  2476  001C48  50F5               	movf	tablat,w,c
  2477  001C4A  0A25               	xorlw	37
  2478  001C4C  A4D8               	btfss	status,2,c
  2479  001C4E  EF2B  F00E         	goto	u7211
  2480  001C52  EF2D  F00E         	goto	u7210
  2481  001C56                     u7211:
  2482  001C56  EF20  F011         	goto	l6788
  2483  001C5A                     u7210:
  2484  001C5A                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2486  001C5A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2487  001C5E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2488  001C62  2ADE               	incf	postinc2,f,c
  2489  001C64  0E00               	movlw	0
  2490  001C66  22DD               	addwfc	postdec2,f,c
  2491  001C68                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2493  001C68  0E00               	movlw	0
  2494  001C6A  0100               	movlb	0	; () banked
  2495  001C6C  6FEC               	movwf	(_width+1)& (0+255),b
  2496  001C6E  0E00               	movlw	0
  2497  001C70  6FEB               	movwf	_width& (0+255),b
  2498  001C72  C0EB  F0EF         	movff	_width,_flags
  2499  001C76  C0EC  F0F0         	movff	_width+1,_flags+1
  2500  001C7A                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2503  001C7A  69ED               	setf	_prec& (0+255),b
  2504  001C7C  69EE               	setf	(_prec+1)& (0+255),b
  2505  001C7E                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2508  001C7E  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509  001C82  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510  001C86  CFDE FFF6          	movff	postinc2,tblptrl
  2511  001C8A  CFDD FFF7          	movff	postdec2,tblptrh
  2512  001C8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2513  001C8E  6AF8               	clrf	tblptru,c
  2514  001C90                     	endif
  2515  001C90                     	if	0	;tblptru may be non-zero
  2516  001C90                     	endif
  2517  001C90  0008               	tblrd		*
  2518  001C92  50F5               	movf	tablat,w,c
  2519  001C94  6E07               	movwf	tolower@c^0,c
  2520  001C96  6A08               	clrf	(tolower@c+1)^0,c
  2521  001C98  EC65  F02E         	call	_tolower	;wreg free
  2522  001C9C  5007               	movf	?_tolower^0,w,c
  2523  001C9E  0100               	movlb	0	; () banked
  2524  001CA0  6FA8               	movwf	vfpfcnvrt@ct& (0+255),b
  2525  001CA2                     
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2528  001CA2  51A8               	movf	vfpfcnvrt@ct& (0+255),w,b
  2529  001CA4  B4D8               	btfsc	status,2,c
  2530  001CA6  EF57  F00E         	goto	u7221
  2531  001CAA  EF59  F00E         	goto	u7220
  2532  001CAE                     u7221:
  2533  001CAE  EF95  F00E         	goto	l6708
  2534  001CB2                     u7220:
  2535  001CB2                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2538  001CB2  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2539  001CB6  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2540  001CBA  CFDE F086          	movff	postinc2,??_vfpfcnvrt
  2541  001CBE  CFDD F087          	movff	postdec2,??_vfpfcnvrt+1
  2542  001CC2  0E01               	movlw	1
  2543  001CC4  2786               	addwf	??_vfpfcnvrt& (0+255),f,b
  2544  001CC6  0E00               	movlw	0
  2545  001CC8  2387               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2546  001CCA  C086  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2547  001CCE  C087  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2548  001CD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2549  001CD2  6AF8               	clrf	tblptru,c
  2550  001CD4                     	endif
  2551  001CD4                     	if	0	;tblptru may be non-zero
  2552  001CD4                     	endif
  2553  001CD4  0008               	tblrd		*
  2554  001CD6  50F5               	movf	tablat,w,c
  2555  001CD8  6E07               	movwf	tolower@c^0,c
  2556  001CDA  6A08               	clrf	(tolower@c+1)^0,c
  2557  001CDC  EC65  F02E         	call	_tolower	;wreg free
  2558  001CE0  5007               	movf	?_tolower^0,w,c
  2559  001CE2  0100               	movlb	0	; () banked
  2560  001CE4  6FA9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2561  001CE6                     
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2564  001CE6  51A9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2565  001CE8  B4D8               	btfsc	status,2,c
  2566  001CEA  EF79  F00E         	goto	u7231
  2567  001CEE  EF7B  F00E         	goto	u7230
  2568  001CF2                     u7231:
  2569  001CF2  EF95  F00E         	goto	l6708
  2570  001CF6                     u7230:
  2571  001CF6                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2574  001CF6  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2575  001CFA  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2576  001CFE  CFDE F086          	movff	postinc2,??_vfpfcnvrt
  2577  001D02  CFDD F087          	movff	postdec2,??_vfpfcnvrt+1
  2578  001D06  0E02               	movlw	2
  2579  001D08  2786               	addwf	??_vfpfcnvrt& (0+255),f,b
  2580  001D0A  0E00               	movlw	0
  2581  001D0C  2387               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2582  001D0E  C086  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2583  001D12  C087  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2584  001D16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2585  001D16  6AF8               	clrf	tblptru,c
  2586  001D18                     	endif
  2587  001D18                     	if	0	;tblptru may be non-zero
  2588  001D18                     	endif
  2589  001D18  0008               	tblrd		*
  2590  001D1A  50F5               	movf	tablat,w,c
  2591  001D1C  6E07               	movwf	tolower@c^0,c
  2592  001D1E  6A08               	clrf	(tolower@c+1)^0,c
  2593  001D20  EC65  F02E         	call	_tolower	;wreg free
  2594  001D24  5007               	movf	?_tolower^0,w,c
  2595  001D26  0100               	movlb	0	; () banked
  2596  001D28  6FAA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2597  001D2A                     l6708:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2601  001D2A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  001D2E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  001D32  CFDE FFF6          	movff	postinc2,tblptrl
  2604  001D36  CFDD FFF7          	movff	postdec2,tblptrh
  2605  001D3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2606  001D3A  6AF8               	clrf	tblptru,c
  2607  001D3C                     	endif
  2608  001D3C                     	if	0	;tblptru may be non-zero
  2609  001D3C                     	endif
  2610  001D3C  0008               	tblrd		*
  2611  001D3E  50F5               	movf	tablat,w,c
  2612  001D40  0A64               	xorlw	100
  2613  001D42  B4D8               	btfsc	status,2,c
  2614  001D44  EFA6  F00E         	goto	u7241
  2615  001D48  EFA8  F00E         	goto	u7240
  2616  001D4C                     u7241:
  2617  001D4C  EFBB  F00E         	goto	l6712
  2618  001D50                     u7240:
  2619  001D50                     
  2620                           ; BSR set to: 0
  2621  001D50  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  001D54  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  001D58  CFDE FFF6          	movff	postinc2,tblptrl
  2624  001D5C  CFDD FFF7          	movff	postdec2,tblptrh
  2625  001D60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2626  001D60  6AF8               	clrf	tblptru,c
  2627  001D62                     	endif
  2628  001D62                     	if	0	;tblptru may be non-zero
  2629  001D62                     	endif
  2630  001D62  0008               	tblrd		*
  2631  001D64  50F5               	movf	tablat,w,c
  2632  001D66  0A69               	xorlw	105
  2633  001D68  A4D8               	btfss	status,2,c
  2634  001D6A  EFB9  F00E         	goto	u7251
  2635  001D6E  EFBB  F00E         	goto	u7250
  2636  001D72                     u7251:
  2637  001D72  EFFB  F00E         	goto	l6718
  2638  001D76                     u7250:
  2639  001D76                     l6712:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2643  001D76  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2644  001D7A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2645  001D7E  2ADE               	incf	postinc2,f,c
  2646  001D80  0E00               	movlw	0
  2647  001D82  22DD               	addwfc	postdec2,f,c
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2650  001D84  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2651  001D88  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2652  001D8C  CFDF F086          	movff	indf2,??_vfpfcnvrt
  2653  001D90  0E02               	movlw	2
  2654  001D92  26DE               	addwf	postinc2,f,c
  2655  001D94  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  2656  001D98  0E00               	movlw	0
  2657  001D9A  22DD               	addwfc	postdec2,f,c
  2658  001D9C  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2659  001DA0  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2660  001DA4  CFDE F094          	movff	postinc2,vfpfcnvrt@ll
  2661  001DA8  CFDD F095          	movff	postdec2,vfpfcnvrt@ll+1
  2662  001DAC  0E00               	movlw	0
  2663  001DAE  BF95               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2664  001DB0  0EFF               	movlw	-1
  2665  001DB2  6F96               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2666  001DB4  6F97               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2667  001DB6  6F98               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2668  001DB8  6F99               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2669  001DBA  6F9A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2670  001DBC  6F9B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2671  001DBE                     l6714:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2675  001DBE  C080  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2676  001DC2  C081  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2677  001DC6  C094  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2678  001DCA  C095  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2679  001DCE  C096  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2680  001DD2  C097  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2681  001DD6  C098  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2682  001DDA  C099  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2683  001DDE  C09A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2684  001DE2  C09B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2685  001DE6  EC60  F01B         	call	_dtoa	;wreg free
  2686  001DEA  C01C  F080         	movff	?_dtoa,?_vfpfcnvrt
  2687  001DEE  C01D  F081         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2688  001DF2  EF3C  F011         	goto	l1832
  2689  001DF6                     l6718:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  2693  001DF6  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694  001DFA  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695  001DFE  CFDE F001          	movff	postinc2,strncmp@_l
  2696  001E02  CFDD F002          	movff	postdec2,strncmp@_l+1
  2697  001E06  0E33               	movlw	low STR_14
  2698  001E08  6E03               	movwf	strncmp@_r^0,c
  2699  001E0A  0E10               	movlw	high STR_14
  2700  001E0C  6E04               	movwf	(strncmp@_r+1)^0,c
  2701  001E0E  0E00               	movlw	0
  2702  001E10  6E06               	movwf	(strncmp@n+1)^0,c
  2703  001E12  0E02               	movlw	2
  2704  001E14  6E05               	movwf	strncmp@n^0,c
  2705  001E16  EC45  F025         	call	_strncmp	;wreg free
  2706  001E1A  5001               	movf	?_strncmp^0,w,c
  2707  001E1C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2708  001E1E  B4D8               	btfsc	status,2,c
  2709  001E20  EF14  F00F         	goto	u7261
  2710  001E24  EF16  F00F         	goto	u7260
  2711  001E28                     u7261:
  2712  001E28  EF31  F00F         	goto	l6722
  2713  001E2C                     u7260:
  2714  001E2C  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  001E30  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  001E34  CFDE F001          	movff	postinc2,strncmp@_l
  2717  001E38  CFDD F002          	movff	postdec2,strncmp@_l+1
  2718  001E3C  0E39               	movlw	low STR_18
  2719  001E3E  6E03               	movwf	strncmp@_r^0,c
  2720  001E40  0E10               	movlw	high STR_18
  2721  001E42  6E04               	movwf	(strncmp@_r+1)^0,c
  2722  001E44  0E00               	movlw	0
  2723  001E46  6E06               	movwf	(strncmp@n+1)^0,c
  2724  001E48  0E02               	movlw	2
  2725  001E4A  6E05               	movwf	strncmp@n^0,c
  2726  001E4C  EC45  F025         	call	_strncmp	;wreg free
  2727  001E50  5001               	movf	?_strncmp^0,w,c
  2728  001E52  1002               	iorwf	(?_strncmp+1)^0,w,c
  2729  001E54  A4D8               	btfss	status,2,c
  2730  001E56  EF2F  F00F         	goto	u7271
  2731  001E5A  EF31  F00F         	goto	u7270
  2732  001E5E                     u7271:
  2733  001E5E  EF75  F00F         	goto	l6728
  2734  001E62                     u7270:
  2735  001E62                     l6722:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  2738  001E62  0E02               	movlw	2
  2739  001E64  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2740  001E68  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2741  001E6C  26DE               	addwf	postinc2,f,c
  2742  001E6E  0E00               	movlw	0
  2743  001E70  22DD               	addwfc	postdec2,f,c
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  2746  001E72  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2747  001E76  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2748  001E7A  CFDF F086          	movff	indf2,??_vfpfcnvrt
  2749  001E7E  0E04               	movlw	4
  2750  001E80  26DE               	addwf	postinc2,f,c
  2751  001E82  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  2752  001E86  0E00               	movlw	0
  2753  001E88  22DD               	addwfc	postdec2,f,c
  2754  001E8A  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2755  001E8E  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2756  001E92  CFDE F088          	movff	postinc2,??_vfpfcnvrt+2
  2757  001E96  CFDE F089          	movff	postinc2,??_vfpfcnvrt+3
  2758  001E9A  CFDE F08A          	movff	postinc2,??_vfpfcnvrt+4
  2759  001E9E  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+5
  2760  001EA2  C088  F08C         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2761  001EA6  C089  F08D         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2762  001EAA  C08A  F08E         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2763  001EAE  C08B  F08F         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2764  001EB2  0100               	movlb	0	; () banked
  2765  001EB4  6B90               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  2766  001EB6  BF8F               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  2767  001EB8  6990               	setf	(??_vfpfcnvrt+10)& (0+255),b
  2768  001EBA  C090  F091         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2769  001EBE  C090  F092         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2770  001EC2  C090  F093         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2771  001EC6  C08C  F094         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2772  001ECA  C08D  F095         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2773  001ECE  C08E  F096         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2774  001ED2  C08F  F097         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2775  001ED6  C090  F098         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2776  001EDA  C091  F099         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2777  001EDE  C092  F09A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2778  001EE2  C093  F09B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2779  001EE6  EFDF  F00E         	goto	l6714
  2780  001EEA                     l6728:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2783  001EEA  0E66               	movlw	102
  2784  001EEC  0100               	movlb	0	; () banked
  2785  001EEE  19A8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2786  001EF0  A4D8               	btfss	status,2,c
  2787  001EF2  EF7D  F00F         	goto	u7281
  2788  001EF6  EF7F  F00F         	goto	u7280
  2789  001EFA                     u7281:
  2790  001EFA  EFC0  F00F         	goto	l6740
  2791  001EFE                     u7280:
  2792  001EFE                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2795  001EFE  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2796  001F02  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  001F06  CFDE FFF6          	movff	postinc2,tblptrl
  2798  001F0A  CFDD FFF7          	movff	postdec2,tblptrh
  2799  001F0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2800  001F0E  6AF8               	clrf	tblptru,c
  2801  001F10                     	endif
  2802  001F10                     	if	0	;tblptru may be non-zero
  2803  001F10                     	endif
  2804  001F10  0008               	tblrd		*
  2805  001F12  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2806  001F16                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2809  001F16  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810  001F1A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811  001F1E  2ADE               	incf	postinc2,f,c
  2812  001F20  0E00               	movlw	0
  2813  001F22  22DD               	addwfc	postdec2,f,c
  2814  001F24                     
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2817  001F24  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2818  001F28  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2819  001F2C  CFDF F086          	movff	indf2,??_vfpfcnvrt
  2820  001F30  0E04               	movlw	4
  2821  001F32  26DE               	addwf	postinc2,f,c
  2822  001F34  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  2823  001F38  0E00               	movlw	0
  2824  001F3A  22DD               	addwfc	postdec2,f,c
  2825  001F3C  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2826  001F40  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2827  001F44  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2828  001F48  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2829  001F4C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2830  001F50  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2831  001F54                     l6736:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2835  001F54  C080  F040         	movff	vfpfcnvrt@fp,efgtoa@fp
  2836  001F58  C081  F041         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2837  001F5C  C0A4  F042         	movff	vfpfcnvrt@f,efgtoa@f
  2838  001F60  C0A5  F043         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2839  001F64  C0A6  F044         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2840  001F68  C0A7  F045         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2841  001F6C  C0AB  F046         	movff	vfpfcnvrt@c,efgtoa@c
  2842  001F70  EC22  F008         	call	_efgtoa	;wreg free
  2843  001F74  C040  F080         	movff	?_efgtoa,?_vfpfcnvrt
  2844  001F78  C041  F081         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2845  001F7C  EF3C  F011         	goto	l1832
  2846  001F80                     l6740:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2850  001F80  0EA8               	movlw	low vfpfcnvrt@ct
  2851  001F82  6E01               	movwf	strncmp@_l^0,c
  2852  001F84  0E00               	movlw	high vfpfcnvrt@ct
  2853  001F86  6E02               	movwf	(strncmp@_l+1)^0,c
  2854  001F88  0E36               	movlw	low STR_23
  2855  001F8A  6E03               	movwf	strncmp@_r^0,c
  2856  001F8C  0E10               	movlw	high STR_23
  2857  001F8E  6E04               	movwf	(strncmp@_r+1)^0,c
  2858  001F90  0E00               	movlw	0
  2859  001F92  6E06               	movwf	(strncmp@n+1)^0,c
  2860  001F94  0E02               	movlw	2
  2861  001F96  6E05               	movwf	strncmp@n^0,c
  2862  001F98  EC45  F025         	call	_strncmp	;wreg free
  2863  001F9C  5001               	movf	?_strncmp^0,w,c
  2864  001F9E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2865  001FA0  A4D8               	btfss	status,2,c
  2866  001FA2  EFD5  F00F         	goto	u7291
  2867  001FA6  EFD7  F00F         	goto	u7290
  2868  001FAA                     u7291:
  2869  001FAA  EF48  F010         	goto	l6756
  2870  001FAE                     u7290:
  2871  001FAE                     
  2872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2873  001FAE  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2874  001FB2  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2875  001FB6  CFDE F086          	movff	postinc2,??_vfpfcnvrt
  2876  001FBA  CFDD F087          	movff	postdec2,??_vfpfcnvrt+1
  2877  001FBE  0E01               	movlw	1
  2878  001FC0  0100               	movlb	0	; () banked
  2879  001FC2  2786               	addwf	??_vfpfcnvrt& (0+255),f,b
  2880  001FC4  0E00               	movlw	0
  2881  001FC6  2387               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2882  001FC8  C086  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2883  001FCC  C087  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2884  001FD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2885  001FD0  6AF8               	clrf	tblptru,c
  2886  001FD2                     	endif
  2887  001FD2                     	if	0	;tblptru may be non-zero
  2888  001FD2                     	endif
  2889  001FD2  0008               	tblrd		*
  2890  001FD4  CFF5 F0AB          	movff	tablat,vfpfcnvrt@c
  2891  001FD8                     
  2892                           ; BSR set to: 0
  2893  001FD8  0EBF               	movlw	191
  2894  001FDA  6F86               	movwf	??_vfpfcnvrt& (0+255),b
  2895  001FDC  0EFF               	movlw	255
  2896  001FDE  6F87               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2897  001FE0  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2898  001FE4  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2899  001FE8  CFDE FFF6          	movff	postinc2,tblptrl
  2900  001FEC  CFDD FFF7          	movff	postdec2,tblptrh
  2901  001FF0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2902  001FF0  6AF8               	clrf	tblptru,c
  2903  001FF2                     	endif
  2904  001FF2                     	if	0	;tblptru may be non-zero
  2905  001FF2                     	endif
  2906  001FF2  0008               	tblrd		*
  2907  001FF4  50F5               	movf	tablat,w,c
  2908  001FF6  6F88               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2909  001FF8  6B89               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2910  001FFA  5186               	movf	??_vfpfcnvrt& (0+255),w,b
  2911  001FFC  2788               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2912  001FFE  5187               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2913  002000  2389               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2914  002002  5189               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2915  002004  E107               	bnz	u7301
  2916  002006  0E1A               	movlw	26
  2917  002008  5D88               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2918  00200A  B0D8               	btfsc	status,0,c
  2919  00200C  EF0A  F010         	goto	u7301
  2920  002010  EF0C  F010         	goto	u7300
  2921  002014                     u7301:
  2922  002014  EF26  F010         	goto	l6750
  2923  002018                     u7300:
  2924  002018                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2927  002018  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2928  00201C  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2929  002020  CFDF F086          	movff	indf2,??_vfpfcnvrt
  2930  002024  0E04               	movlw	4
  2931  002026  26DE               	addwf	postinc2,f,c
  2932  002028  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  2933  00202C  0E00               	movlw	0
  2934  00202E  22DD               	addwfc	postdec2,f,c
  2935  002030  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2936  002034  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2937  002038  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2938  00203C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2939  002040  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2940  002044  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2943  002048  EF3E  F010         	goto	l1841
  2944  00204C                     l6750:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2948  00204C  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2949  002050  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2950  002054  CFDF F086          	movff	indf2,??_vfpfcnvrt
  2951  002058  0E04               	movlw	4
  2952  00205A  26DE               	addwf	postinc2,f,c
  2953  00205C  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  2954  002060  0E00               	movlw	0
  2955  002062  22DD               	addwfc	postdec2,f,c
  2956  002064  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2957  002068  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2958  00206C  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f
  2959  002070  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+1
  2960  002074  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f+2
  2961  002078  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+3
  2962  00207C                     l1841:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2966  00207C  0E02               	movlw	2
  2967  00207E  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2968  002082  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2969  002086  26DE               	addwf	postinc2,f,c
  2970  002088  0E00               	movlw	0
  2971  00208A  22DD               	addwfc	postdec2,f,c
  2972  00208C  EFAA  F00F         	goto	l6736
  2973  002090                     l6756:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2976  002090  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  002094  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  002098  CFDE FFF6          	movff	postinc2,tblptrl
  2979  00209C  CFDD FFF7          	movff	postdec2,tblptrh
  2980  0020A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2981  0020A0  6AF8               	clrf	tblptru,c
  2982  0020A2                     	endif
  2983  0020A2                     	if	0	;tblptru may be non-zero
  2984  0020A2                     	endif
  2985  0020A2  0008               	tblrd		*
  2986  0020A4  50F5               	movf	tablat,w,c
  2987  0020A6  0A75               	xorlw	117
  2988  0020A8  A4D8               	btfss	status,2,c
  2989  0020AA  EF59  F010         	goto	u7311
  2990  0020AE  EF5B  F010         	goto	u7310
  2991  0020B2                     u7311:
  2992  0020B2  EF9D  F010         	goto	l6764
  2993  0020B6                     u7310:
  2994  0020B6                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2996  0020B6  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2997  0020BA  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2998  0020BE  2ADE               	incf	postinc2,f,c
  2999  0020C0  0E00               	movlw	0
  3000  0020C2  22DD               	addwfc	postdec2,f,c
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3003  0020C4  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3004  0020C8  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3005  0020CC  CFDF F086          	movff	indf2,??_vfpfcnvrt
  3006  0020D0  0E02               	movlw	2
  3007  0020D2  26DE               	addwf	postinc2,f,c
  3008  0020D4  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  3009  0020D8  0E00               	movlw	0
  3010  0020DA  22DD               	addwfc	postdec2,f,c
  3011  0020DC  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3012  0020E0  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3013  0020E4  CFDE F088          	movff	postinc2,??_vfpfcnvrt+2
  3014  0020E8  CFDD F089          	movff	postdec2,??_vfpfcnvrt+3
  3015  0020EC  C088  F09C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3016  0020F0  C089  F09D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3017  0020F4  0100               	movlb	0	; () banked
  3018  0020F6  6B9E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3019  0020F8  6B9F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3020  0020FA  6BA0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3021  0020FC  6BA1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3022  0020FE  6BA2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3023  002100  6BA3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3024  002102                     l6760:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  3028  002102  C080  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3029  002106  C081  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3030  00210A  C09C  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3031  00210E  C09D  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3032  002112  C09E  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3033  002116  C09F  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3034  00211A  C0A0  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3035  00211E  C0A1  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3036  002122  C0A2  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3037  002126  C0A3  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3038  00212A  ECDB  F01D         	call	_utoa	;wreg free
  3039  00212E  C01C  F080         	movff	?_utoa,?_vfpfcnvrt
  3040  002132  C01D  F081         	movff	?_utoa+1,?_vfpfcnvrt+1
  3041  002136  EF3C  F011         	goto	l1832
  3042  00213A                     l6764:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3045  00213A  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046  00213E  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047  002142  CFDE F001          	movff	postinc2,strncmp@_l
  3048  002146  CFDD F002          	movff	postdec2,strncmp@_l+1
  3049  00214A  0E30               	movlw	low (STR_1+1)
  3050  00214C  6E03               	movwf	strncmp@_r^0,c
  3051  00214E  0E10               	movlw	high (STR_1+1)
  3052  002150  6E04               	movwf	(strncmp@_r+1)^0,c
  3053  002152  0E00               	movlw	0
  3054  002154  6E06               	movwf	(strncmp@n+1)^0,c
  3055  002156  0E02               	movlw	2
  3056  002158  6E05               	movwf	strncmp@n^0,c
  3057  00215A  EC45  F025         	call	_strncmp	;wreg free
  3058  00215E  5001               	movf	?_strncmp^0,w,c
  3059  002160  1002               	iorwf	(?_strncmp+1)^0,w,c
  3060  002162  A4D8               	btfss	status,2,c
  3061  002164  EFB6  F010         	goto	u7321
  3062  002168  EFB8  F010         	goto	u7320
  3063  00216C                     u7321:
  3064  00216C  EFE7  F010         	goto	l6772
  3065  002170                     u7320:
  3066  002170                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3068  002170  0E02               	movlw	2
  3069  002172  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3070  002176  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3071  00217A  26DE               	addwf	postinc2,f,c
  3072  00217C  0E00               	movlw	0
  3073  00217E  22DD               	addwfc	postdec2,f,c
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  3076  002180  C084  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3077  002184  C085  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3078  002188  CFDF F086          	movff	indf2,??_vfpfcnvrt
  3079  00218C  0E04               	movlw	4
  3080  00218E  26DE               	addwf	postinc2,f,c
  3081  002190  CFDF F087          	movff	indf2,??_vfpfcnvrt+1
  3082  002194  0E00               	movlw	0
  3083  002196  22DD               	addwfc	postdec2,f,c
  3084  002198  C086  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3085  00219C  C087  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3086  0021A0  CFDE F088          	movff	postinc2,??_vfpfcnvrt+2
  3087  0021A4  CFDE F089          	movff	postinc2,??_vfpfcnvrt+3
  3088  0021A8  CFDE F08A          	movff	postinc2,??_vfpfcnvrt+4
  3089  0021AC  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+5
  3090  0021B0  0100               	movlb	0	; () banked
  3091  0021B2  5188               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  3092  0021B4  6F9C               	movwf	vfpfcnvrt@llu& (0+255),b
  3093  0021B6  5189               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3094  0021B8  6F9D               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  3095  0021BA  518A               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  3096  0021BC  6F9E               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  3097  0021BE  518B               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
  3098  0021C0  6F9F               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  3099  0021C2  6BA0               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3100  0021C4  6BA1               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3101  0021C6  6BA2               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3102  0021C8  6BA3               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3103  0021CA  EF81  F010         	goto	l6760
  3104  0021CE                     l6772:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3107  0021CE  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3108  0021D2  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3109  0021D6  CFDE FFF6          	movff	postinc2,tblptrl
  3110  0021DA  CFDD FFF7          	movff	postdec2,tblptrh
  3111  0021DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3112  0021DE  6AF8               	clrf	tblptru,c
  3113  0021E0                     	endif
  3114  0021E0                     	if	0	;tblptru may be non-zero
  3115  0021E0                     	endif
  3116  0021E0  0008               	tblrd		*
  3117  0021E2  50F5               	movf	tablat,w,c
  3118  0021E4  0A25               	xorlw	37
  3119  0021E6  A4D8               	btfss	status,2,c
  3120  0021E8  EFF8  F010         	goto	u7331
  3121  0021EC  EFFA  F010         	goto	u7330
  3122  0021F0                     u7331:
  3123  0021F0  EF12  F011         	goto	l6782
  3124  0021F4                     u7330:
  3125  0021F4                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3127  0021F4  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  0021F8  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  0021FC  2ADE               	incf	postinc2,f,c
  3130  0021FE  0E00               	movlw	0
  3131  002200  22DD               	addwfc	postdec2,f,c
  3132  002202                     
  3133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3134  002202  0E00               	movlw	0
  3135  002204  6E02               	movwf	(fputc@c+1)^0,c
  3136  002206  0E25               	movlw	37
  3137  002208  6E01               	movwf	fputc@c^0,c
  3138  00220A  C080  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3139  00220E  C081  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3140  002212  ECCD  F028         	call	_fputc	;wreg free
  3141  002216                     l6778:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3144  002216  0E00               	movlw	0
  3145  002218  0100               	movlb	0	; () banked
  3146  00221A  6F81               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3147  00221C  0E01               	movlw	1
  3148  00221E  6F80               	movwf	?_vfpfcnvrt& (0+255),b
  3149  002220  EF3C  F011         	goto	l1832
  3150  002224                     l6782:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3153  002224  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3154  002228  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3155  00222C  2ADE               	incf	postinc2,f,c
  3156  00222E  0E00               	movlw	0
  3157  002230  22DD               	addwfc	postdec2,f,c
  3158  002232                     
  3159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3160  002232  0E00               	movlw	0
  3161  002234  0100               	movlb	0	; () banked
  3162  002236  6F81               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3163  002238  0E00               	movlw	0
  3164  00223A  6F80               	movwf	?_vfpfcnvrt& (0+255),b
  3165  00223C  EF3C  F011         	goto	l1832
  3166  002240                     l6788:
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3169  002240  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3170  002244  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3171  002248  CFDE FFF6          	movff	postinc2,tblptrl
  3172  00224C  CFDD FFF7          	movff	postdec2,tblptrh
  3173  002250                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3174  002250  6AF8               	clrf	tblptru,c
  3175  002252                     	endif
  3176  002252                     	if	0	;tblptru may be non-zero
  3177  002252                     	endif
  3178  002252  0008               	tblrd		*
  3179  002254  50F5               	movf	tablat,w,c
  3180  002256  6E01               	movwf	fputc@c^0,c
  3181  002258  6A02               	clrf	(fputc@c+1)^0,c
  3182  00225A  C080  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3183  00225E  C081  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3184  002262  ECCD  F028         	call	_fputc	;wreg free
  3185  002266                     
  3186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3187  002266  C082  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3188  00226A  C083  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3189  00226E  2ADE               	incf	postinc2,f,c
  3190  002270  0E00               	movlw	0
  3191  002272  22DD               	addwfc	postdec2,f,c
  3192  002274  EF0B  F011         	goto	l6778
  3193  002278                     l1832:
  3194  002278  0012               	return		;funcret
  3195  00227A                     __end_of_vfpfcnvrt:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _utoa *****************
  3199 ;; Defined at:
  3200 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3203 ;;		 -> sprintf@f(11), 
  3204 ;;  d               8   29[COMRAM] unsigned long long 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  n               8   49[COMRAM] unsigned long long 
  3207 ;;  i               2   57[COMRAM] int 
  3208 ;;  w               2   47[COMRAM] int 
  3209 ;;  p               2   45[COMRAM] int 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2   27[COMRAM] int 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3219 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;Total ram usage:       32 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 4
  3226 ;; This function calls:
  3227 ;;		___lodiv
  3228 ;;		___lomod
  3229 ;;		_pad
  3230 ;; This function is called by:
  3231 ;;		_vfpfcnvrt
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text4
  3236  003BB6                     __ptext4:
  3237                           	callstack 0
  3238  003BB6                     _utoa:
  3239                           	callstack 23
  3240  003BB6                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  3242  003BB6  0100               	movlb	0	; () banked
  3243  003BB8  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  3244  003BBA  EFE1  F01D         	goto	u7001
  3245  003BBE  EFE3  F01D         	goto	u7000
  3246  003BC2                     u7001:
  3247  003BC2  EFE4  F01D         	goto	l6540
  3248  003BC6                     u7000:
  3249  003BC6                     
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  3252  003BC6  93EF               	bcf	_flags& (0+255),1,b
  3253  003BC8                     l6540:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  3257  003BC8  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  3258  003BCA  EFF1  F01D         	goto	u7010
  3259  003BCE  51EE               	movf	(_prec+1)& (0+255),w,b
  3260  003BD0  E106               	bnz	u7011
  3261  003BD2  05ED               	decf	_prec& (0+255),w,b
  3262  003BD4  B0D8               	btfsc	status,0,c
  3263  003BD6  EFEF  F01D         	goto	u7011
  3264  003BDA  EFF1  F01D         	goto	u7010
  3265  003BDE                     u7011:
  3266  003BDE  EFF7  F01D         	goto	l1813
  3267  003BE2                     u7010:
  3268  003BE2                     
  3269                           ; BSR set to: 0
  3270  003BE2  0E00               	movlw	0
  3271  003BE4  6E2F               	movwf	(utoa@p+1)^0,c
  3272  003BE6  0E01               	movlw	1
  3273  003BE8  6E2E               	movwf	utoa@p^0,c
  3274  003BEA  EFFB  F01D         	goto	l1815
  3275  003BEE                     l1813:
  3276                           
  3277                           ; BSR set to: 0
  3278  003BEE  C0ED  F02E         	movff	_prec,utoa@p
  3279  003BF2  C0EE  F02F         	movff	_prec+1,utoa@p+1
  3280  003BF6                     l1815:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  3284  003BF6  C0EB  F030         	movff	_width,utoa@w
  3285  003BFA  C0EC  F031         	movff	_width+1,utoa@w+1
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  3288  003BFE  C01E  F032         	movff	utoa@d,utoa@n
  3289  003C02  C01F  F033         	movff	utoa@d+1,utoa@n+1
  3290  003C06  C020  F034         	movff	utoa@d+2,utoa@n+2
  3291  003C0A  C021  F035         	movff	utoa@d+3,utoa@n+3
  3292  003C0E  C022  F036         	movff	utoa@d+4,utoa@n+4
  3293  003C12  C023  F037         	movff	utoa@d+5,utoa@n+5
  3294  003C16  C024  F038         	movff	utoa@d+6,utoa@n+6
  3295  003C1A  C025  F039         	movff	utoa@d+7,utoa@n+7
  3296  003C1E                     
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  3299  003C1E  0E00               	movlw	0
  3300  003C20  6E3B               	movwf	(utoa@i+1)^0,c
  3301  003C22  0E4F               	movlw	79
  3302  003C24  6E3A               	movwf	utoa@i^0,c
  3303  003C26                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  3306  003C26  0E00               	movlw	0
  3307  003C28  0101               	movlb	1	; () banked
  3308  003C2A  6F76               	movwf	(_dbuf+79)& (0+255),b
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3311  003C2C  EF8E  F01E         	goto	l6558
  3312  003C30                     l6548:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  3315  003C30  063A               	decf	utoa@i^0,f,c
  3316  003C32  A0D8               	btfss	status,0,c
  3317  003C34  063B               	decf	(utoa@i+1)^0,f,c
  3318  003C36                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  3320  003C36  0E27               	movlw	low _dbuf
  3321  003C38  243A               	addwf	utoa@i^0,w,c
  3322  003C3A  6ED9               	movwf	fsr2l,c
  3323  003C3C  0E01               	movlw	high _dbuf
  3324  003C3E  203B               	addwfc	(utoa@i+1)^0,w,c
  3325  003C40  6EDA               	movwf	fsr2h,c
  3326  003C42  C032  F001         	movff	utoa@n,___lomod@dividend
  3327  003C46  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  3328  003C4A  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  3329  003C4E  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  3330  003C52  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  3331  003C56  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  3332  003C5A  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  3333  003C5E  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  3334  003C62  0E0A               	movlw	10
  3335  003C64  6E09               	movwf	___lomod@divisor^0,c
  3336  003C66  0E00               	movlw	0
  3337  003C68  6E0A               	movwf	(___lomod@divisor+1)^0,c
  3338  003C6A  0E00               	movlw	0
  3339  003C6C  6E0B               	movwf	(___lomod@divisor+2)^0,c
  3340  003C6E  0E00               	movlw	0
  3341  003C70  6E0C               	movwf	(___lomod@divisor+3)^0,c
  3342  003C72  0E00               	movlw	0
  3343  003C74  6E0D               	movwf	(___lomod@divisor+4)^0,c
  3344  003C76  0E00               	movlw	0
  3345  003C78  6E0E               	movwf	(___lomod@divisor+5)^0,c
  3346  003C7A  0E00               	movlw	0
  3347  003C7C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  3348  003C7E  0E00               	movlw	0
  3349  003C80  6E10               	movwf	(___lomod@divisor+7)^0,c
  3350  003C82  EC65  F028         	call	___lomod	;wreg free
  3351  003C86  C001  F026         	movff	?___lomod,??_utoa
  3352  003C8A  C002  F027         	movff	?___lomod+1,??_utoa+1
  3353  003C8E  C003  F028         	movff	?___lomod+2,??_utoa+2
  3354  003C92  C004  F029         	movff	?___lomod+3,??_utoa+3
  3355  003C96  C005  F02A         	movff	?___lomod+4,??_utoa+4
  3356  003C9A  C006  F02B         	movff	?___lomod+5,??_utoa+5
  3357  003C9E  C007  F02C         	movff	?___lomod+6,??_utoa+6
  3358  003CA2  C008  F02D         	movff	?___lomod+7,??_utoa+7
  3359  003CA6  5026               	movf	??_utoa^0,w,c
  3360  003CA8  0F30               	addlw	48
  3361  003CAA  6EDF               	movwf	indf2,c
  3362  003CAC                     
  3363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  3364  003CAC  062E               	decf	utoa@p^0,f,c
  3365  003CAE  A0D8               	btfss	status,0,c
  3366  003CB0  062F               	decf	(utoa@p+1)^0,f,c
  3367  003CB2                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  3369  003CB2  0630               	decf	utoa@w^0,f,c
  3370  003CB4  A0D8               	btfss	status,0,c
  3371  003CB6  0631               	decf	(utoa@w+1)^0,f,c
  3372  003CB8                     
  3373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  3374  003CB8  C032  F001         	movff	utoa@n,___lodiv@dividend
  3375  003CBC  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  3376  003CC0  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  3377  003CC4  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  3378  003CC8  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  3379  003CCC  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  3380  003CD0  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  3381  003CD4  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  3382  003CD8  0E0A               	movlw	10
  3383  003CDA  6E09               	movwf	___lodiv@divisor^0,c
  3384  003CDC  0E00               	movlw	0
  3385  003CDE  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  3386  003CE0  0E00               	movlw	0
  3387  003CE2  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  3388  003CE4  0E00               	movlw	0
  3389  003CE6  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  3390  003CE8  0E00               	movlw	0
  3391  003CEA  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  3392  003CEC  0E00               	movlw	0
  3393  003CEE  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  3394  003CF0  0E00               	movlw	0
  3395  003CF2  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  3396  003CF4  0E00               	movlw	0
  3397  003CF6  6E10               	movwf	(___lodiv@divisor+7)^0,c
  3398  003CF8  ECED  F027         	call	___lodiv	;wreg free
  3399  003CFC  C001  F032         	movff	?___lodiv,utoa@n
  3400  003D00  C002  F033         	movff	?___lodiv+1,utoa@n+1
  3401  003D04  C003  F034         	movff	?___lodiv+2,utoa@n+2
  3402  003D08  C004  F035         	movff	?___lodiv+3,utoa@n+3
  3403  003D0C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  3404  003D10  C006  F037         	movff	?___lodiv+5,utoa@n+5
  3405  003D14  C007  F038         	movff	?___lodiv+6,utoa@n+6
  3406  003D18  C008  F039         	movff	?___lodiv+7,utoa@n+7
  3407  003D1C                     l6558:
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3410  003D1C  503A               	movf	utoa@i^0,w,c
  3411  003D1E  103B               	iorwf	(utoa@i+1)^0,w,c
  3412  003D20  B4D8               	btfsc	status,2,c
  3413  003D22  EF95  F01E         	goto	u7021
  3414  003D26  EF97  F01E         	goto	u7020
  3415  003D2A                     u7021:
  3416  003D2A  EFC8  F01E         	goto	l6568
  3417  003D2E                     u7020:
  3418  003D2E  5032               	movf	utoa@n^0,w,c
  3419  003D30  1033               	iorwf	(utoa@n+1)^0,w,c
  3420  003D32  1034               	iorwf	(utoa@n+2)^0,w,c
  3421  003D34  1035               	iorwf	(utoa@n+3)^0,w,c
  3422  003D36  1036               	iorwf	(utoa@n+4)^0,w,c
  3423  003D38  1037               	iorwf	(utoa@n+5)^0,w,c
  3424  003D3A  1038               	iorwf	(utoa@n+6)^0,w,c
  3425  003D3C  1039               	iorwf	(utoa@n+7)^0,w,c
  3426  003D3E  A4D8               	btfss	status,2,c
  3427  003D40  EFA4  F01E         	goto	u7031
  3428  003D44  EFA6  F01E         	goto	u7030
  3429  003D48                     u7031:
  3430  003D48  EF18  F01E         	goto	l6548
  3431  003D4C                     u7030:
  3432  003D4C  BE2F               	btfsc	(utoa@p+1)^0,7,c
  3433  003D4E  EFB3  F01E         	goto	u7040
  3434  003D52  502F               	movf	(utoa@p+1)^0,w,c
  3435  003D54  E106               	bnz	u7041
  3436  003D56  042E               	decf	utoa@p^0,w,c
  3437  003D58  B0D8               	btfsc	status,0,c
  3438  003D5A  EFB1  F01E         	goto	u7041
  3439  003D5E  EFB3  F01E         	goto	u7040
  3440  003D62                     u7041:
  3441  003D62  EF18  F01E         	goto	l6548
  3442  003D66                     u7040:
  3443  003D66  BE31               	btfsc	(utoa@w+1)^0,7,c
  3444  003D68  EFBE  F01E         	goto	u7051
  3445  003D6C  5031               	movf	(utoa@w+1)^0,w,c
  3446  003D6E  E108               	bnz	u7050
  3447  003D70  0430               	decf	utoa@w^0,w,c
  3448  003D72  A0D8               	btfss	status,0,c
  3449  003D74  EFBE  F01E         	goto	u7051
  3450  003D78  EFC0  F01E         	goto	u7050
  3451  003D7C                     u7051:
  3452  003D7C  EFC8  F01E         	goto	l6568
  3453  003D80                     u7050:
  3454  003D80  0100               	movlb	0	; () banked
  3455  003D82  B3EF               	btfsc	_flags& (0+255),1,b
  3456  003D84  EFC6  F01E         	goto	u7061
  3457  003D88  EFC8  F01E         	goto	u7060
  3458  003D8C                     u7061:
  3459  003D8C  EF18  F01E         	goto	l6548
  3460  003D90                     u7060:
  3461  003D90                     l6568:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  3464  003D90  C01C  F011         	movff	utoa@fp,pad@fp
  3465  003D94  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  3466  003D98  0E27               	movlw	low _dbuf
  3467  003D9A  243A               	addwf	utoa@i^0,w,c
  3468  003D9C  6E13               	movwf	pad@buf^0,c
  3469  003D9E  0E01               	movlw	high _dbuf
  3470  003DA0  203B               	addwfc	(utoa@i+1)^0,w,c
  3471  003DA2  6E14               	movwf	(pad@buf+1)^0,c
  3472  003DA4  C030  F015         	movff	utoa@w,pad@p
  3473  003DA8  C031  F016         	movff	utoa@w+1,pad@p+1
  3474  003DAC  EC32  F029         	call	_pad	;wreg free
  3475  003DB0  C011  F01C         	movff	?_pad,?_utoa
  3476  003DB4  C012  F01D         	movff	?_pad+1,?_utoa+1
  3477  003DB8  0012               	return		;funcret
  3478  003DBA                     __end_of_utoa:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function ___lomod *****************
  3482 ;; Defined at:
  3483 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  dividend        8    0[COMRAM] unsigned long long 
  3486 ;;  divisor         8    8[COMRAM] unsigned long long 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  counter         1   16[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  8    0[COMRAM] unsigned long long 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3498 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;Total ram usage:       17 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_utoa
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text5
  3512  0050CA                     __ptext5:
  3513                           	callstack 0
  3514  0050CA                     ___lomod:
  3515                           	callstack 26
  3516  0050CA  5009               	movf	___lomod@divisor^0,w,c
  3517  0050CC  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  3518  0050CE  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  3519  0050D0  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  3520  0050D2  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  3521  0050D4  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  3522  0050D6  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  3523  0050D8  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  3524  0050DA  B4D8               	btfsc	status,2,c
  3525  0050DC  EF72  F028         	goto	u6061
  3526  0050E0  EF74  F028         	goto	u6060
  3527  0050E4                     u6061:
  3528  0050E4  EFBC  F028         	goto	l1411
  3529  0050E8                     u6060:
  3530  0050E8  0E01               	movlw	1
  3531  0050EA  6E11               	movwf	___lomod@counter^0,c
  3532  0050EC  EF82  F028         	goto	l6042
  3533  0050F0                     l6040:
  3534  0050F0  90D8               	bcf	status,0,c
  3535  0050F2  3609               	rlcf	___lomod@divisor^0,f,c
  3536  0050F4  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  3537  0050F6  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  3538  0050F8  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  3539  0050FA  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  3540  0050FC  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  3541  0050FE  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  3542  005100  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  3543  005102  2A11               	incf	___lomod@counter^0,f,c
  3544  005104                     l6042:
  3545  005104  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  3546  005106  EF87  F028         	goto	u6071
  3547  00510A  EF89  F028         	goto	u6070
  3548  00510E                     u6071:
  3549  00510E  EF78  F028         	goto	l6040
  3550  005112                     u6070:
  3551  005112                     l6044:
  3552  005112  5009               	movf	___lomod@divisor^0,w,c
  3553  005114  5C01               	subwf	___lomod@dividend^0,w,c
  3554  005116  500A               	movf	(___lomod@divisor+1)^0,w,c
  3555  005118  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  3556  00511A  500B               	movf	(___lomod@divisor+2)^0,w,c
  3557  00511C  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  3558  00511E  500C               	movf	(___lomod@divisor+3)^0,w,c
  3559  005120  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  3560  005122  500D               	movf	(___lomod@divisor+4)^0,w,c
  3561  005124  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  3562  005126  500E               	movf	(___lomod@divisor+5)^0,w,c
  3563  005128  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  3564  00512A  500F               	movf	(___lomod@divisor+6)^0,w,c
  3565  00512C  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  3566  00512E  5010               	movf	(___lomod@divisor+7)^0,w,c
  3567  005130  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  3568  005132  A0D8               	btfss	status,0,c
  3569  005134  EF9E  F028         	goto	u6081
  3570  005138  EFA0  F028         	goto	u6080
  3571  00513C                     u6081:
  3572  00513C  EFB0  F028         	goto	l6048
  3573  005140                     u6080:
  3574  005140  5009               	movf	___lomod@divisor^0,w,c
  3575  005142  5E01               	subwf	___lomod@dividend^0,f,c
  3576  005144  500A               	movf	(___lomod@divisor+1)^0,w,c
  3577  005146  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  3578  005148  500B               	movf	(___lomod@divisor+2)^0,w,c
  3579  00514A  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  3580  00514C  500C               	movf	(___lomod@divisor+3)^0,w,c
  3581  00514E  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  3582  005150  500D               	movf	(___lomod@divisor+4)^0,w,c
  3583  005152  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  3584  005154  500E               	movf	(___lomod@divisor+5)^0,w,c
  3585  005156  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  3586  005158  500F               	movf	(___lomod@divisor+6)^0,w,c
  3587  00515A  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  3588  00515C  5010               	movf	(___lomod@divisor+7)^0,w,c
  3589  00515E  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  3590  005160                     l6048:
  3591  005160  90D8               	bcf	status,0,c
  3592  005162  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  3593  005164  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  3594  005166  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  3595  005168  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  3596  00516A  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  3597  00516C  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  3598  00516E  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  3599  005170  3209               	rrcf	___lomod@divisor^0,f,c
  3600  005172  2E11               	decfsz	___lomod@counter^0,f,c
  3601  005174  EF89  F028         	goto	l6044
  3602  005178                     l1411:
  3603  005178  C001  F001         	movff	___lomod@dividend,?___lomod
  3604  00517C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  3605  005180  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  3606  005184  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  3607  005188  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  3608  00518C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  3609  005190  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  3610  005194  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  3611  005198  0012               	return		;funcret
  3612  00519A                     __end_of___lomod:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function ___lodiv *****************
  3616 ;; Defined at:
  3617 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  dividend        8    0[COMRAM] unsigned long long 
  3620 ;;  divisor         8    8[COMRAM] unsigned long long 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  quotient        8   16[COMRAM] unsigned long long 
  3623 ;;  counter         1   24[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  8    0[COMRAM] unsigned long long 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:       25 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_utoa
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text6
  3647  004FDA                     __ptext6:
  3648                           	callstack 0
  3649  004FDA                     ___lodiv:
  3650                           	callstack 26
  3651  004FDA  EE20  F011         	lfsr	2,___lodiv@quotient
  3652  004FDE  0E07               	movlw	7
  3653  004FE0                     u6021:
  3654  004FE0  6ADE               	clrf	postinc2,c
  3655  004FE2  06E8               	decf	wreg,f,c
  3656  004FE4  E2FD               	bc	u6021
  3657  004FE6  5009               	movf	___lodiv@divisor^0,w,c
  3658  004FE8  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  3659  004FEA  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  3660  004FEC  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  3661  004FEE  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  3662  004FF0  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  3663  004FF2  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  3664  004FF4  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  3665  004FF6  B4D8               	btfsc	status,2,c
  3666  004FF8  EF00  F028         	goto	u6031
  3667  004FFC  EF02  F028         	goto	u6030
  3668  005000                     u6031:
  3669  005000  EF54  F028         	goto	l1401
  3670  005004                     u6030:
  3671  005004  0E01               	movlw	1
  3672  005006  6E19               	movwf	___lodiv@counter^0,c
  3673  005008  EF10  F028         	goto	l6022
  3674  00500C                     l6020:
  3675  00500C  90D8               	bcf	status,0,c
  3676  00500E  3609               	rlcf	___lodiv@divisor^0,f,c
  3677  005010  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  3678  005012  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  3679  005014  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  3680  005016  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  3681  005018  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  3682  00501A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  3683  00501C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  3684  00501E  2A19               	incf	___lodiv@counter^0,f,c
  3685  005020                     l6022:
  3686  005020  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  3687  005022  EF15  F028         	goto	u6041
  3688  005026  EF17  F028         	goto	u6040
  3689  00502A                     u6041:
  3690  00502A  EF06  F028         	goto	l6020
  3691  00502E                     u6040:
  3692  00502E                     l6024:
  3693  00502E  90D8               	bcf	status,0,c
  3694  005030  3611               	rlcf	___lodiv@quotient^0,f,c
  3695  005032  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  3696  005034  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  3697  005036  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  3698  005038  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  3699  00503A  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  3700  00503C  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  3701  00503E  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  3702  005040  5009               	movf	___lodiv@divisor^0,w,c
  3703  005042  5C01               	subwf	___lodiv@dividend^0,w,c
  3704  005044  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3705  005046  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  3706  005048  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3707  00504A  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  3708  00504C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3709  00504E  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  3710  005050  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3711  005052  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  3712  005054  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3713  005056  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  3714  005058  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3715  00505A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  3716  00505C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3717  00505E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  3718  005060  A0D8               	btfss	status,0,c
  3719  005062  EF35  F028         	goto	u6051
  3720  005066  EF37  F028         	goto	u6050
  3721  00506A                     u6051:
  3722  00506A  EF48  F028         	goto	l6032
  3723  00506E                     u6050:
  3724  00506E  5009               	movf	___lodiv@divisor^0,w,c
  3725  005070  5E01               	subwf	___lodiv@dividend^0,f,c
  3726  005072  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3727  005074  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  3728  005076  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3729  005078  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  3730  00507A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3731  00507C  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  3732  00507E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3733  005080  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  3734  005082  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3735  005084  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  3736  005086  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3737  005088  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  3738  00508A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3739  00508C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  3740  00508E  8011               	bsf	___lodiv@quotient^0,0,c
  3741  005090                     l6032:
  3742  005090  90D8               	bcf	status,0,c
  3743  005092  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  3744  005094  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  3745  005096  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  3746  005098  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  3747  00509A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  3748  00509C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  3749  00509E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  3750  0050A0  3209               	rrcf	___lodiv@divisor^0,f,c
  3751  0050A2  2E19               	decfsz	___lodiv@counter^0,f,c
  3752  0050A4  EF17  F028         	goto	l6024
  3753  0050A8                     l1401:
  3754  0050A8  C011  F001         	movff	___lodiv@quotient,?___lodiv
  3755  0050AC  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  3756  0050B0  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  3757  0050B4  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  3758  0050B8  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  3759  0050BC  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  3760  0050C0  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3761  0050C4  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3762  0050C8  0012               	return		;funcret
  3763  0050CA                     __end_of___lodiv:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _strncmp *****************
  3767 ;; Defined at:
  3768 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3771 ;;		 -> vfpfcnvrt@ct(3), STR_5(3), STR_3(3), STR_2(3), 
  3772 ;;		 -> STR_1(4), 
  3773 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3774 ;;		 -> STR_30(3), STR_25(3), STR_20(3), STR_16(3), 
  3775 ;;  n               2    4[COMRAM] unsigned int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3778 ;;		 -> STR_30(3), STR_25(3), STR_20(3), STR_16(3), 
  3779 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3780 ;;		 -> vfpfcnvrt@ct(3), STR_5(3), STR_3(3), STR_2(3), 
  3781 ;;		 -> STR_1(4), 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[COMRAM] int 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:       11 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_vfpfcnvrt
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text7
  3805  004A8A                     __ptext7:
  3806                           	callstack 0
  3807  004A8A                     _strncmp:
  3808                           	callstack 27
  3809  004A8A  C001  F008         	movff	strncmp@_l,strncmp@l
  3810  004A8E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3811  004A92  C003  F00A         	movff	strncmp@_r,strncmp@r
  3812  004A96  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3813  004A9A  0605               	decf	strncmp@n^0,f,c
  3814  004A9C  A0D8               	btfss	status,0,c
  3815  004A9E  0606               	decf	(strncmp@n+1)^0,f,c
  3816  004AA0  2805               	incf	strncmp@n^0,w,c
  3817  004AA2  E106               	bnz	u7071
  3818  004AA4  2806               	incf	(strncmp@n+1)^0,w,c
  3819  004AA6  A4D8               	btfss	status,2,c
  3820  004AA8  EF58  F025         	goto	u7071
  3821  004AAC  EF5A  F025         	goto	u7070
  3822  004AB0                     u7071:
  3823  004AB0  EF67  F025         	goto	l6580
  3824  004AB4                     u7070:
  3825  004AB4  0E00               	movlw	0
  3826  004AB6  6E02               	movwf	(?_strncmp+1)^0,c
  3827  004AB8  0E00               	movlw	0
  3828  004ABA  6E01               	movwf	?_strncmp^0,c
  3829  004ABC  EFD7  F025         	goto	l1926
  3830  004AC0                     l6578:
  3831  004AC0  4A08               	infsnz	strncmp@l^0,f,c
  3832  004AC2  2A09               	incf	(strncmp@l+1)^0,f,c
  3833  004AC4  4A0A               	infsnz	strncmp@r^0,f,c
  3834  004AC6  2A0B               	incf	(strncmp@r+1)^0,f,c
  3835  004AC8  0605               	decf	strncmp@n^0,f,c
  3836  004ACA  A0D8               	btfss	status,0,c
  3837  004ACC  0606               	decf	(strncmp@n+1)^0,f,c
  3838  004ACE                     l6580:
  3839  004ACE  C008  FFF6         	movff	strncmp@l,tblptrl
  3840  004AD2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3841  004AD6  0E00               	movlw	low (__smallconst shr (0+16))
  3842  004AD8  6EF8               	movwf	tblptru,c
  3843  004ADA  0E0F               	movlw	(high __ramtop+-1)
  3844  004ADC  64F7               	cpfsgt	tblptrh,c
  3845  004ADE  D003               	bra	u7087
  3846  004AE0  0008               	tblrd		*
  3847  004AE2  50F5               	movf	tablat,w,c
  3848  004AE4  D005               	bra	u7080
  3849  004AE6                     u7087:
  3850  004AE6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3851  004AEA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3852  004AEE  50EF               	movf	indf0,w,c
  3853  004AF0                     u7080:
  3854  004AF0  0900               	iorlw	0
  3855  004AF2  B4D8               	btfsc	status,2,c
  3856  004AF4  EF7E  F025         	goto	u7091
  3857  004AF8  EF80  F025         	goto	u7090
  3858  004AFC                     u7091:
  3859  004AFC  EFB9  F025         	goto	l6588
  3860  004B00                     u7090:
  3861  004B00  C00A  FFF6         	movff	strncmp@r,tblptrl
  3862  004B04  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3863  004B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3864  004B08  6AF8               	clrf	tblptru,c
  3865  004B0A                     	endif
  3866  004B0A                     	if	0	;tblptru may be non-zero
  3867  004B0A                     	endif
  3868  004B0A  0008               	tblrd		*
  3869  004B0C  50F5               	movf	tablat,w,c
  3870  004B0E  0900               	iorlw	0
  3871  004B10  B4D8               	btfsc	status,2,c
  3872  004B12  EF8D  F025         	goto	u7101
  3873  004B16  EF8F  F025         	goto	u7100
  3874  004B1A                     u7101:
  3875  004B1A  EFB9  F025         	goto	l6588
  3876  004B1E                     u7100:
  3877  004B1E  5005               	movf	strncmp@n^0,w,c
  3878  004B20  1006               	iorwf	(strncmp@n+1)^0,w,c
  3879  004B22  B4D8               	btfsc	status,2,c
  3880  004B24  EF96  F025         	goto	u7111
  3881  004B28  EF98  F025         	goto	u7110
  3882  004B2C                     u7111:
  3883  004B2C  EFB9  F025         	goto	l6588
  3884  004B30                     u7110:
  3885  004B30  C00A  FFF6         	movff	strncmp@r,tblptrl
  3886  004B34  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3887  004B38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3888  004B38  6AF8               	clrf	tblptru,c
  3889  004B3A                     	endif
  3890  004B3A                     	if	0	;tblptru may be non-zero
  3891  004B3A                     	endif
  3892  004B3A  0008               	tblrd		*
  3893  004B3C  CFF5 F007          	movff	tablat,??_strncmp
  3894  004B40  C008  FFF6         	movff	strncmp@l,tblptrl
  3895  004B44  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3896  004B48  0E00               	movlw	low (__smallconst shr (0+16))
  3897  004B4A  6EF8               	movwf	tblptru,c
  3898  004B4C  0E0F               	movlw	(high __ramtop+-1)
  3899  004B4E  64F7               	cpfsgt	tblptrh,c
  3900  004B50  D003               	bra	u7127
  3901  004B52  0008               	tblrd		*
  3902  004B54  50F5               	movf	tablat,w,c
  3903  004B56  D005               	bra	u7125
  3904  004B58                     u7127:
  3905  004B58  CFF6 FFE9          	movff	tblptrl,fsr0l
  3906  004B5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3907  004B60  50EF               	movf	indf0,w,c
  3908  004B62                     u7125:
  3909  004B62  1807               	xorwf	??_strncmp^0,w,c
  3910  004B64  B4D8               	btfsc	status,2,c
  3911  004B66  EFB7  F025         	goto	u7121
  3912  004B6A  EFB9  F025         	goto	u7120
  3913  004B6E                     u7121:
  3914  004B6E  EF60  F025         	goto	l6578
  3915  004B72                     u7120:
  3916  004B72                     l6588:
  3917  004B72  C008  FFF6         	movff	strncmp@l,tblptrl
  3918  004B76  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3919  004B7A  0E00               	movlw	low (__smallconst shr (0+16))
  3920  004B7C  6EF8               	movwf	tblptru,c
  3921  004B7E  0E0F               	movlw	(high __ramtop+-1)
  3922  004B80  64F7               	cpfsgt	tblptrh,c
  3923  004B82  D003               	bra	u7137
  3924  004B84  0008               	tblrd		*
  3925  004B86  50F5               	movf	tablat,w,c
  3926  004B88  D005               	bra	u7130
  3927  004B8A                     u7137:
  3928  004B8A  CFF6 FFE9          	movff	tblptrl,fsr0l
  3929  004B8E  CFF7 FFEA          	movff	tblptrh,fsr0h
  3930  004B92  50EF               	movf	indf0,w,c
  3931  004B94                     u7130:
  3932  004B94  6E07               	movwf	??_strncmp^0,c
  3933  004B96  C00A  FFF6         	movff	strncmp@r,tblptrl
  3934  004B9A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3935  004B9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3936  004B9E  6AF8               	clrf	tblptru,c
  3937  004BA0                     	endif
  3938  004BA0                     	if	0	;tblptru may be non-zero
  3939  004BA0                     	endif
  3940  004BA0  0008               	tblrd		*
  3941  004BA2  50F5               	movf	tablat,w,c
  3942  004BA4  5C07               	subwf	??_strncmp^0,w,c
  3943  004BA6  6E01               	movwf	?_strncmp^0,c
  3944  004BA8  6A02               	clrf	(?_strncmp+1)^0,c
  3945  004BAA  A0D8               	btfss	status,0,c
  3946  004BAC  0602               	decf	(?_strncmp+1)^0,f,c
  3947  004BAE                     l1926:
  3948  004BAE  0012               	return		;funcret
  3949  004BB0                     __end_of_strncmp:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _efgtoa *****************
  3953 ;; Defined at:
  3954 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3957 ;;		 -> sprintf@f(11), 
  3958 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
  3959 ;;  c               1   69[COMRAM] unsigned char 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  u               4  121[COMRAM] unsigned char 
  3962 ;;  g               4  113[COMRAM] unsigned char 
  3963 ;;  l               4  107[COMRAM] unsigned char 
  3964 ;;  h               4  103[COMRAM] unsigned char 
  3965 ;;  ou              4   89[COMRAM] unsigned char 
  3966 ;;  n               2  119[COMRAM] int 
  3967 ;;  e               2  117[COMRAM] int 
  3968 ;;  i               2  111[COMRAM] int 
  3969 ;;  w               2   99[COMRAM] int 
  3970 ;;  p               2   97[COMRAM] int 
  3971 ;;  sign            2   95[COMRAM] int 
  3972 ;;  d               2   93[COMRAM] int 
  3973 ;;  m               2   87[COMRAM] int 
  3974 ;;  ne              2   85[COMRAM] int 
  3975 ;;  pp              2   83[COMRAM] int 
  3976 ;;  t               2   81[COMRAM] int 
  3977 ;;  mode            1  102[COMRAM] unsigned char 
  3978 ;;  nmode           1  101[COMRAM] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2   63[COMRAM] int 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3988 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Locals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Totals:        62       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;Total ram usage:       62 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 4
  3995 ;; This function calls:
  3996 ;;		___awdiv
  3997 ;;		___awmod
  3998 ;;		___fladd
  3999 ;;		___fldiv
  4000 ;;		___fleq
  4001 ;;		___flge
  4002 ;;		___flmul
  4003 ;;		___flneg
  4004 ;;		___flsub
  4005 ;;		___fltol
  4006 ;;		___fpclassifyf
  4007 ;;		_floorf
  4008 ;;		_isupper
  4009 ;;		_pad
  4010 ;;		_strcpy
  4011 ;;		_tolower
  4012 ;; This function is called by:
  4013 ;;		_vfpfcnvrt
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text8
  4018  001044                     __ptext8:
  4019                           	callstack 0
  4020  001044                     _efgtoa:
  4021                           	callstack 23
  4022  001044                     
  4023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4024  001044  0E00               	movlw	0
  4025  001046  6E61               	movwf	(efgtoa@sign+1)^0,c
  4026  001048  0E00               	movlw	0
  4027  00104A  6E60               	movwf	efgtoa@sign^0,c
  4028  00104C                     
  4029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4030  00104C  C042  F072         	movff	efgtoa@f,efgtoa@g
  4031  001050  C043  F073         	movff	efgtoa@f+1,efgtoa@g+1
  4032  001054  C044  F074         	movff	efgtoa@f+2,efgtoa@g+2
  4033  001058  C045  F075         	movff	efgtoa@f+3,efgtoa@g+3
  4034  00105C                     
  4035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4036  00105C  BE75               	btfsc	(efgtoa@g+3)^0,7,c
  4037  00105E  EF35  F008         	goto	u6520
  4038  001062  EF33  F008         	goto	u6521
  4039  001066                     u6521:
  4040  001066  EF4B  F008         	goto	l6240
  4041  00106A                     u6520:
  4042  00106A                     
  4043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4044  00106A  0E00               	movlw	0
  4045  00106C  6E61               	movwf	(efgtoa@sign+1)^0,c
  4046  00106E  0E01               	movlw	1
  4047  001070  6E60               	movwf	efgtoa@sign^0,c
  4048  001072                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4050  001072  C072  F001         	movff	efgtoa@g,___flneg@f1
  4051  001076  C073  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4052  00107A  C074  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4053  00107E  C075  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4054  001082  ECAD  F02F         	call	___flneg	;wreg free
  4055  001086  C001  F072         	movff	?___flneg,efgtoa@g
  4056  00108A  C002  F073         	movff	?___flneg+1,efgtoa@g+1
  4057  00108E  C003  F074         	movff	?___flneg+2,efgtoa@g+2
  4058  001092  C004  F075         	movff	?___flneg+3,efgtoa@g+3
  4059  001096                     l6240:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4062  001096  0E00               	movlw	0
  4063  001098  6E79               	movwf	(efgtoa@n+1)^0,c
  4064  00109A  0E00               	movlw	0
  4065  00109C  6E78               	movwf	efgtoa@n^0,c
  4066  00109E                     
  4067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4068  00109E  C0EB  F064         	movff	_width,efgtoa@w
  4069  0010A2  C0EC  F065         	movff	_width+1,efgtoa@w+1
  4070  0010A6                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4072  0010A6  5060               	movf	efgtoa@sign^0,w,c
  4073  0010A8  1061               	iorwf	(efgtoa@sign+1)^0,w,c
  4074  0010AA  A4D8               	btfss	status,2,c
  4075  0010AC  EF5A  F008         	goto	u6531
  4076  0010B0  EF5C  F008         	goto	u6530
  4077  0010B4                     u6531:
  4078  0010B4  EF64  F008         	goto	l6248
  4079  0010B8                     u6530:
  4080  0010B8  0100               	movlb	0	; () banked
  4081  0010BA  A5EF               	btfss	_flags& (0+255),2,b
  4082  0010BC  EF62  F008         	goto	u6541
  4083  0010C0  EF64  F008         	goto	u6540
  4084  0010C4                     u6541:
  4085  0010C4  EF7E  F008         	goto	l6260
  4086  0010C8                     u6540:
  4087  0010C8                     l6248:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4090  0010C8  5060               	movf	efgtoa@sign^0,w,c
  4091  0010CA  1061               	iorwf	(efgtoa@sign+1)^0,w,c
  4092  0010CC  A4D8               	btfss	status,2,c
  4093  0010CE  EF6B  F008         	goto	u6551
  4094  0010D2  EF6D  F008         	goto	u6550
  4095  0010D6                     u6551:
  4096  0010D6  EF73  F008         	goto	l6252
  4097  0010DA                     u6550:
  4098  0010DA  0E00               	movlw	0
  4099  0010DC  6E4D               	movwf	(_efgtoa$2538+1)^0,c
  4100  0010DE  0E2B               	movlw	43
  4101  0010E0  6E4C               	movwf	_efgtoa$2538^0,c
  4102  0010E2  EF77  F008         	goto	l6254
  4103  0010E6                     l6252:
  4104  0010E6  0E00               	movlw	0
  4105  0010E8  6E4D               	movwf	(_efgtoa$2538+1)^0,c
  4106  0010EA  0E2D               	movlw	45
  4107  0010EC  6E4C               	movwf	_efgtoa$2538^0,c
  4108  0010EE                     l6254:
  4109  0010EE  C04C  F127         	movff	_efgtoa$2538,_dbuf
  4110  0010F2                     
  4111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4112  0010F2  4A78               	infsnz	efgtoa@n^0,f,c
  4113  0010F4  2A79               	incf	(efgtoa@n+1)^0,f,c
  4114  0010F6                     
  4115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  4116  0010F6  0664               	decf	efgtoa@w^0,f,c
  4117  0010F8  A0D8               	btfss	status,0,c
  4118  0010FA  0665               	decf	(efgtoa@w+1)^0,f,c
  4119  0010FC                     l6260:
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  4122  0010FC  C072  F001         	movff	efgtoa@g,___fpclassifyf@x
  4123  001100  C073  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4124  001104  C074  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4125  001108  C075  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4126  00110C  EC6E  F027         	call	___fpclassifyf	;wreg free
  4127  001110  0401               	decf	?___fpclassifyf^0,w,c
  4128  001112  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4129  001114  A4D8               	btfss	status,2,c
  4130  001116  EF8F  F008         	goto	u6561
  4131  00111A  EF91  F008         	goto	u6560
  4132  00111E                     u6561:
  4133  00111E  EFD9  F008         	goto	l6278
  4134  001122                     u6560:
  4135  001122  0EBF               	movlw	191
  4136  001124  6E47               	movwf	??_efgtoa^0,c
  4137  001126  0EFF               	movlw	255
  4138  001128  6E48               	movwf	(??_efgtoa+1)^0,c
  4139  00112A  5046               	movf	efgtoa@c^0,w,c
  4140  00112C  6E49               	movwf	(??_efgtoa+2)^0,c
  4141  00112E  6A4A               	clrf	(??_efgtoa+3)^0,c
  4142  001130  5047               	movf	??_efgtoa^0,w,c
  4143  001132  2649               	addwf	(??_efgtoa+2)^0,f,c
  4144  001134  5048               	movf	(??_efgtoa+1)^0,w,c
  4145  001136  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4146  001138  504A               	movf	(??_efgtoa+3)^0,w,c
  4147  00113A  E107               	bnz	u6571
  4148  00113C  0E1A               	movlw	26
  4149  00113E  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4150  001140  B0D8               	btfsc	status,0,c
  4151  001142  EFA5  F008         	goto	u6571
  4152  001146  EFA7  F008         	goto	u6570
  4153  00114A                     u6571:
  4154  00114A  EFB5  F008         	goto	l6270
  4155  00114E                     u6570:
  4156  00114E                     
  4157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4158  00114E  0E27               	movlw	low _dbuf
  4159  001150  2478               	addwf	efgtoa@n^0,w,c
  4160  001152  6E01               	movwf	strcpy@dest^0,c
  4161  001154  0E01               	movlw	high _dbuf
  4162  001156  2079               	addwfc	(efgtoa@n+1)^0,w,c
  4163  001158  6E02               	movwf	(strcpy@dest+1)^0,c
  4164  00115A  0E1F               	movlw	low STR_6
  4165  00115C  6E03               	movwf	strcpy@src^0,c
  4166  00115E  0E10               	movlw	high STR_6
  4167  001160  6E04               	movwf	(strcpy@src+1)^0,c
  4168  001162  ECDF  F02D         	call	_strcpy	;wreg free
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4171  001166  EFC1  F008         	goto	l6272
  4172  00116A                     l6270:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4175  00116A  0E27               	movlw	low _dbuf
  4176  00116C  2478               	addwf	efgtoa@n^0,w,c
  4177  00116E  6E01               	movwf	strcpy@dest^0,c
  4178  001170  0E01               	movlw	high _dbuf
  4179  001172  2079               	addwfc	(efgtoa@n+1)^0,w,c
  4180  001174  6E02               	movwf	(strcpy@dest+1)^0,c
  4181  001176  0E27               	movlw	low STR_7
  4182  001178  6E03               	movwf	strcpy@src^0,c
  4183  00117A  0E10               	movlw	high STR_7
  4184  00117C  6E04               	movwf	(strcpy@src+1)^0,c
  4185  00117E  ECDF  F02D         	call	_strcpy	;wreg free
  4186  001182                     l6272:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4189  001182  0EFD               	movlw	253
  4190  001184  2664               	addwf	efgtoa@w^0,f,c
  4191  001186  0EFF               	movlw	255
  4192  001188  2265               	addwfc	(efgtoa@w+1)^0,f,c
  4193  00118A                     l6274:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4196  00118A  C040  F011         	movff	efgtoa@fp,pad@fp
  4197  00118E  C041  F012         	movff	efgtoa@fp+1,pad@fp+1
  4198  001192  0E27               	movlw	low _dbuf
  4199  001194  6E13               	movwf	pad@buf^0,c
  4200  001196  0E01               	movlw	high _dbuf
  4201  001198  6E14               	movwf	(pad@buf+1)^0,c
  4202  00119A  C064  F015         	movff	efgtoa@w,pad@p
  4203  00119E  C065  F016         	movff	efgtoa@w+1,pad@p+1
  4204  0011A2  EC32  F029         	call	_pad	;wreg free
  4205  0011A6  C011  F040         	movff	?_pad,?_efgtoa
  4206  0011AA  C012  F041         	movff	?_pad+1,?_efgtoa+1
  4207  0011AE  EF19  F00E         	goto	l1737
  4208  0011B2                     l6278:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  4211  0011B2  C072  F001         	movff	efgtoa@g,___fpclassifyf@x
  4212  0011B6  C073  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4213  0011BA  C074  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4214  0011BE  C075  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4215  0011C2  EC6E  F027         	call	___fpclassifyf	;wreg free
  4216  0011C6  5001               	movf	?___fpclassifyf^0,w,c
  4217  0011C8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4218  0011CA  A4D8               	btfss	status,2,c
  4219  0011CC  EFEA  F008         	goto	u6581
  4220  0011D0  EFEC  F008         	goto	u6580
  4221  0011D4                     u6581:
  4222  0011D4  EF1E  F009         	goto	l6296
  4223  0011D8                     u6580:
  4224  0011D8  0EBF               	movlw	191
  4225  0011DA  6E47               	movwf	??_efgtoa^0,c
  4226  0011DC  0EFF               	movlw	255
  4227  0011DE  6E48               	movwf	(??_efgtoa+1)^0,c
  4228  0011E0  5046               	movf	efgtoa@c^0,w,c
  4229  0011E2  6E49               	movwf	(??_efgtoa+2)^0,c
  4230  0011E4  6A4A               	clrf	(??_efgtoa+3)^0,c
  4231  0011E6  5047               	movf	??_efgtoa^0,w,c
  4232  0011E8  2649               	addwf	(??_efgtoa+2)^0,f,c
  4233  0011EA  5048               	movf	(??_efgtoa+1)^0,w,c
  4234  0011EC  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4235  0011EE  504A               	movf	(??_efgtoa+3)^0,w,c
  4236  0011F0  E107               	bnz	u6591
  4237  0011F2  0E1A               	movlw	26
  4238  0011F4  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4239  0011F6  B0D8               	btfsc	status,0,c
  4240  0011F8  EF00  F009         	goto	u6591
  4241  0011FC  EF02  F009         	goto	u6590
  4242  001200                     u6591:
  4243  001200  EF10  F009         	goto	l6288
  4244  001204                     u6590:
  4245  001204                     
  4246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4247  001204  0E27               	movlw	low _dbuf
  4248  001206  2478               	addwf	efgtoa@n^0,w,c
  4249  001208  6E01               	movwf	strcpy@dest^0,c
  4250  00120A  0E01               	movlw	high _dbuf
  4251  00120C  2079               	addwfc	(efgtoa@n+1)^0,w,c
  4252  00120E  6E02               	movwf	(strcpy@dest+1)^0,c
  4253  001210  0E23               	movlw	low STR_10
  4254  001212  6E03               	movwf	strcpy@src^0,c
  4255  001214  0E10               	movlw	high STR_10
  4256  001216  6E04               	movwf	(strcpy@src+1)^0,c
  4257  001218  ECDF  F02D         	call	_strcpy	;wreg free
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4260  00121C  EFC1  F008         	goto	l6272
  4261  001220                     l6288:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4264  001220  0E27               	movlw	low _dbuf
  4265  001222  2478               	addwf	efgtoa@n^0,w,c
  4266  001224  6E01               	movwf	strcpy@dest^0,c
  4267  001226  0E01               	movlw	high _dbuf
  4268  001228  2079               	addwfc	(efgtoa@n+1)^0,w,c
  4269  00122A  6E02               	movwf	(strcpy@dest+1)^0,c
  4270  00122C  0E2B               	movlw	low STR_11
  4271  00122E  6E03               	movwf	strcpy@src^0,c
  4272  001230  0E10               	movlw	high STR_11
  4273  001232  6E04               	movwf	(strcpy@src+1)^0,c
  4274  001234  ECDF  F02D         	call	_strcpy	;wreg free
  4275  001238  EFC1  F008         	goto	l6272
  4276  00123C                     l6296:
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4279  00123C  0E00               	movlw	0
  4280  00123E  6E7A               	movwf	efgtoa@u^0,c
  4281  001240  0E00               	movlw	0
  4282  001242  6E7B               	movwf	(efgtoa@u+1)^0,c
  4283  001244  0E80               	movlw	128
  4284  001246  6E7C               	movwf	(efgtoa@u+2)^0,c
  4285  001248  0E3F               	movlw	63
  4286  00124A  6E7D               	movwf	(efgtoa@u+3)^0,c
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4289  00124C  0E00               	movlw	0
  4290  00124E  6E77               	movwf	(efgtoa@e+1)^0,c
  4291  001250  0E00               	movlw	0
  4292  001252  6E76               	movwf	efgtoa@e^0,c
  4293  001254                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4295  001254  C072  F001         	movff	efgtoa@g,___fleq@ff1
  4296  001258  C073  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4297  00125C  C074  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4298  001260  C075  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4299  001264  0E00               	movlw	0
  4300  001266  6E05               	movwf	___fleq@ff2^0,c
  4301  001268  0E00               	movlw	0
  4302  00126A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4303  00126C  0E00               	movlw	0
  4304  00126E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4305  001270  0E00               	movlw	0
  4306  001272  6E08               	movwf	(___fleq@ff2+3)^0,c
  4307  001274  ECAB  F02A         	call	___fleq	;wreg free
  4308  001278  B0D8               	btfsc	status,0,c
  4309  00127A  EF41  F009         	goto	u6601
  4310  00127E  EF43  F009         	goto	u6600
  4311  001282                     u6601:
  4312  001282  EFC4  F009         	goto	l6314
  4313  001286                     u6600:
  4314  001286  EF61  F009         	goto	l6306
  4315  00128A                     l6302:
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4318  00128A  C07A  F00F         	movff	efgtoa@u,___flmul@b
  4319  00128E  C07B  F010         	movff	efgtoa@u+1,___flmul@b+1
  4320  001292  C07C  F011         	movff	efgtoa@u+2,___flmul@b+2
  4321  001296  C07D  F012         	movff	efgtoa@u+3,___flmul@b+3
  4322  00129A  0E00               	movlw	0
  4323  00129C  6E13               	movwf	___flmul@a^0,c
  4324  00129E  0E00               	movlw	0
  4325  0012A0  6E14               	movwf	(___flmul@a+1)^0,c
  4326  0012A2  0E20               	movlw	32
  4327  0012A4  6E15               	movwf	(___flmul@a+2)^0,c
  4328  0012A6  0E41               	movlw	65
  4329  0012A8  6E16               	movwf	(___flmul@a+3)^0,c
  4330  0012AA  ECCD  F015         	call	___flmul	;wreg free
  4331  0012AE  C00F  F07A         	movff	?___flmul,efgtoa@u
  4332  0012B2  C010  F07B         	movff	?___flmul+1,efgtoa@u+1
  4333  0012B6  C011  F07C         	movff	?___flmul+2,efgtoa@u+2
  4334  0012BA  C012  F07D         	movff	?___flmul+3,efgtoa@u+3
  4335  0012BE                     
  4336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4337  0012BE  4A76               	infsnz	efgtoa@e^0,f,c
  4338  0012C0  2A77               	incf	(efgtoa@e+1)^0,f,c
  4339  0012C2                     l6306:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4342  0012C2  C072  F028         	movff	efgtoa@g,___flge@ff1
  4343  0012C6  C073  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4344  0012CA  C074  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4345  0012CE  C075  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4346  0012D2  0E00               	movlw	0
  4347  0012D4  6E13               	movwf	___flmul@a^0,c
  4348  0012D6  0E00               	movlw	0
  4349  0012D8  6E14               	movwf	(___flmul@a+1)^0,c
  4350  0012DA  0E20               	movlw	32
  4351  0012DC  6E15               	movwf	(___flmul@a+2)^0,c
  4352  0012DE  0E41               	movlw	65
  4353  0012E0  6E16               	movwf	(___flmul@a+3)^0,c
  4354  0012E2  C07A  F00F         	movff	efgtoa@u,___flmul@b
  4355  0012E6  C07B  F010         	movff	efgtoa@u+1,___flmul@b+1
  4356  0012EA  C07C  F011         	movff	efgtoa@u+2,___flmul@b+2
  4357  0012EE  C07D  F012         	movff	efgtoa@u+3,___flmul@b+3
  4358  0012F2  ECCD  F015         	call	___flmul	;wreg free
  4359  0012F6  C00F  F02C         	movff	?___flmul,___flge@ff2
  4360  0012FA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4361  0012FE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4362  001302  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4363  001306  ECEC  F026         	call	___flge	;wreg free
  4364  00130A  B0D8               	btfsc	status,0,c
  4365  00130C  EF8A  F009         	goto	u6611
  4366  001310  EF8C  F009         	goto	u6610
  4367  001314                     u6611:
  4368  001314  EF45  F009         	goto	l6302
  4369  001318                     u6610:
  4370  001318  EFAB  F009         	goto	l6312
  4371  00131C                     l6308:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4374  00131C  C07A  F001         	movff	efgtoa@u,___fldiv@b
  4375  001320  C07B  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4376  001324  C07C  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4377  001328  C07D  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4378  00132C  0E00               	movlw	0
  4379  00132E  6E05               	movwf	___fldiv@a^0,c
  4380  001330  0E00               	movlw	0
  4381  001332  6E06               	movwf	(___fldiv@a+1)^0,c
  4382  001334  0E20               	movlw	32
  4383  001336  6E07               	movwf	(___fldiv@a+2)^0,c
  4384  001338  0E41               	movlw	65
  4385  00133A  6E08               	movwf	(___fldiv@a+3)^0,c
  4386  00133C  ECE2  F017         	call	___fldiv	;wreg free
  4387  001340  C001  F07A         	movff	?___fldiv,efgtoa@u
  4388  001344  C002  F07B         	movff	?___fldiv+1,efgtoa@u+1
  4389  001348  C003  F07C         	movff	?___fldiv+2,efgtoa@u+2
  4390  00134C  C004  F07D         	movff	?___fldiv+3,efgtoa@u+3
  4391  001350                     
  4392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4393  001350  0676               	decf	efgtoa@e^0,f,c
  4394  001352  A0D8               	btfss	status,0,c
  4395  001354  0677               	decf	(efgtoa@e+1)^0,f,c
  4396  001356                     l6312:
  4397                           
  4398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4399  001356  C072  F028         	movff	efgtoa@g,___flge@ff1
  4400  00135A  C073  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4401  00135E  C074  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4402  001362  C075  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4403  001366  C07A  F02C         	movff	efgtoa@u,___flge@ff2
  4404  00136A  C07B  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  4405  00136E  C07C  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  4406  001372  C07D  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  4407  001376  ECEC  F026         	call	___flge	;wreg free
  4408  00137A  A0D8               	btfss	status,0,c
  4409  00137C  EFC2  F009         	goto	u6621
  4410  001380  EFC4  F009         	goto	u6620
  4411  001384                     u6621:
  4412  001384  EF8E  F009         	goto	l6308
  4413  001388                     u6620:
  4414  001388                     l6314:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4417  001388  C046  F007         	movff	efgtoa@c,tolower@c
  4418  00138C  6A08               	clrf	(tolower@c+1)^0,c
  4419  00138E  EC65  F02E         	call	_tolower	;wreg free
  4420  001392  5007               	movf	?_tolower^0,w,c
  4421  001394  6E67               	movwf	efgtoa@mode^0,c
  4422  001396                     
  4423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4424  001396  C067  F066         	movff	efgtoa@mode,efgtoa@nmode
  4425  00139A                     
  4426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4427  00139A  0E67               	movlw	103
  4428  00139C  1867               	xorwf	efgtoa@mode^0,w,c
  4429  00139E  A4D8               	btfss	status,2,c
  4430  0013A0  EFD4  F009         	goto	u6631
  4431  0013A4  EFD6  F009         	goto	u6630
  4432  0013A8                     u6631:
  4433  0013A8  EFFD  F009         	goto	l6328
  4434  0013AC                     u6630:
  4435  0013AC                     
  4436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4437  0013AC  0100               	movlb	0	; () banked
  4438  0013AE  51ED               	movf	_prec& (0+255),w,b
  4439  0013B0  11EE               	iorwf	(_prec+1)& (0+255),w,b
  4440  0013B2  A4D8               	btfss	status,2,c
  4441  0013B4  EFDE  F009         	goto	u6641
  4442  0013B8  EFE0  F009         	goto	u6640
  4443  0013BC                     u6641:
  4444  0013BC  EFE4  F009         	goto	l6324
  4445  0013C0                     u6640:
  4446  0013C0                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4449  0013C0  0E00               	movlw	0
  4450  0013C2  6FEE               	movwf	(_prec+1)& (0+255),b
  4451  0013C4  0E01               	movlw	1
  4452  0013C6  6FED               	movwf	_prec& (0+255),b
  4453  0013C8                     l6324:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4457  0013C8  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4458  0013CA  EFF1  F009         	goto	u6650
  4459  0013CE  51EE               	movf	(_prec+1)& (0+255),w,b
  4460  0013D0  E106               	bnz	u6651
  4461  0013D2  05ED               	decf	_prec& (0+255),w,b
  4462  0013D4  B0D8               	btfsc	status,0,c
  4463  0013D6  EFEF  F009         	goto	u6651
  4464  0013DA  EFF1  F009         	goto	u6650
  4465  0013DE                     u6651:
  4466  0013DE  EFF7  F009         	goto	l1753
  4467  0013E2                     u6650:
  4468  0013E2                     l6326:
  4469                           
  4470                           ; BSR set to: 0
  4471  0013E2  0E00               	movlw	0
  4472  0013E4  6E63               	movwf	(efgtoa@p+1)^0,c
  4473  0013E6  0E06               	movlw	6
  4474  0013E8  6E62               	movwf	efgtoa@p^0,c
  4475  0013EA  EF07  F00A         	goto	l6334
  4476  0013EE                     l1753:
  4477                           
  4478                           ; BSR set to: 0
  4479  0013EE  C0ED  F062         	movff	_prec,efgtoa@p
  4480  0013F2  C0EE  F063         	movff	_prec+1,efgtoa@p+1
  4481  0013F6  EF07  F00A         	goto	l6334
  4482  0013FA                     l6328:
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4485  0013FA  0100               	movlb	0	; () banked
  4486  0013FC  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4487  0013FE  EF03  F00A         	goto	u6661
  4488  001402  EF05  F00A         	goto	u6660
  4489  001406                     u6661:
  4490  001406  EFF1  F009         	goto	l6326
  4491  00140A                     u6660:
  4492  00140A  EFF7  F009         	goto	l1753
  4493  00140E                     l6334:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4497  00140E  0E67               	movlw	103
  4498  001410  1867               	xorwf	efgtoa@mode^0,w,c
  4499  001412  A4D8               	btfss	status,2,c
  4500  001414  EF0E  F00A         	goto	u6671
  4501  001418  EF10  F00A         	goto	u6670
  4502  00141C                     u6671:
  4503  00141C  EF3F  F00A         	goto	l6344
  4504  001420                     u6670:
  4505  001420                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4508  001420  AE77               	btfss	(efgtoa@e+1)^0,7,c
  4509  001422  EF1E  F00A         	goto	u6680
  4510  001426  0EFC               	movlw	252
  4511  001428  5C76               	subwf	efgtoa@e^0,w,c
  4512  00142A  0EFF               	movlw	255
  4513  00142C  5877               	subwfb	(efgtoa@e+1)^0,w,c
  4514  00142E  A0D8               	btfss	status,0,c
  4515  001430  EF1C  F00A         	goto	u6681
  4516  001434  EF1E  F00A         	goto	u6680
  4517  001438                     u6681:
  4518  001438  EF3D  F00A         	goto	l6342
  4519  00143C                     u6680:
  4520  00143C                     
  4521                           ; BSR set to: 0
  4522  00143C  0EFF               	movlw	255
  4523  00143E  6E47               	movwf	??_efgtoa^0,c
  4524  001440  0EFF               	movlw	255
  4525  001442  6E48               	movwf	(??_efgtoa+1)^0,c
  4526  001444  C062  F049         	movff	efgtoa@p,??_efgtoa+2
  4527  001448  C063  F04A         	movff	efgtoa@p+1,??_efgtoa+3
  4528  00144C  5047               	movf	??_efgtoa^0,w,c
  4529  00144E  2649               	addwf	(??_efgtoa+2)^0,f,c
  4530  001450  5048               	movf	(??_efgtoa+1)^0,w,c
  4531  001452  224A               	addwfc	(??_efgtoa+3)^0,f,c
  4532  001454  5076               	movf	efgtoa@e^0,w,c
  4533  001456  5C49               	subwf	(??_efgtoa+2)^0,w,c
  4534  001458  504A               	movf	(??_efgtoa+3)^0,w,c
  4535  00145A  0A80               	xorlw	128
  4536  00145C  6E4B               	movwf	(??_efgtoa+4)^0,c
  4537  00145E  5077               	movf	(efgtoa@e+1)^0,w,c
  4538  001460  0A80               	xorlw	128
  4539  001462  584B               	subwfb	(??_efgtoa+4)^0,w,c
  4540  001464  A0D8               	btfss	status,0,c
  4541  001466  EF37  F00A         	goto	u6691
  4542  00146A  EF39  F00A         	goto	u6690
  4543  00146E                     u6691:
  4544  00146E  EF3D  F00A         	goto	l6342
  4545  001472                     u6690:
  4546  001472                     
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4549  001472  0E66               	movlw	102
  4550  001474  6E66               	movwf	efgtoa@nmode^0,c
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4553  001476  EF3F  F00A         	goto	l6344
  4554  00147A                     l6342:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4558  00147A  0E65               	movlw	101
  4559  00147C  6E66               	movwf	efgtoa@nmode^0,c
  4560  00147E                     l6344:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4564  00147E  C062  F058         	movff	efgtoa@p,efgtoa@m
  4565  001482  C063  F059         	movff	efgtoa@p+1,efgtoa@m+1
  4566  001486                     
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4569  001486  0E67               	movlw	103
  4570  001488  1867               	xorwf	efgtoa@mode^0,w,c
  4571  00148A  A4D8               	btfss	status,2,c
  4572  00148C  EF4A  F00A         	goto	u6701
  4573  001490  EF4C  F00A         	goto	u6700
  4574  001494                     u6701:
  4575  001494  EF5C  F00A         	goto	l6352
  4576  001498                     u6700:
  4577  001498                     
  4578                           ; BSR set to: 0
  4579  001498  0E66               	movlw	102
  4580  00149A  1866               	xorwf	efgtoa@nmode^0,w,c
  4581  00149C  A4D8               	btfss	status,2,c
  4582  00149E  EF53  F00A         	goto	u6711
  4583  0014A2  EF55  F00A         	goto	u6710
  4584  0014A6                     u6711:
  4585  0014A6  EF5E  F00A         	goto	l6354
  4586  0014AA                     u6710:
  4587  0014AA                     
  4588                           ; BSR set to: 0
  4589  0014AA  BE77               	btfsc	(efgtoa@e+1)^0,7,c
  4590  0014AC  EF5C  F00A         	goto	u6720
  4591  0014B0  EF5A  F00A         	goto	u6721
  4592  0014B4                     u6721:
  4593  0014B4  EF5E  F00A         	goto	l6354
  4594  0014B8                     u6720:
  4595  0014B8                     l6352:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4599  0014B8  4A58               	infsnz	efgtoa@m^0,f,c
  4600  0014BA  2A59               	incf	(efgtoa@m+1)^0,f,c
  4601  0014BC                     l6354:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4605  0014BC  0E66               	movlw	102
  4606  0014BE  1866               	xorwf	efgtoa@nmode^0,w,c
  4607  0014C0  A4D8               	btfss	status,2,c
  4608  0014C2  EF65  F00A         	goto	u6731
  4609  0014C6  EF67  F00A         	goto	u6730
  4610  0014CA                     u6731:
  4611  0014CA  EF87  F00A         	goto	l6364
  4612  0014CE                     u6730:
  4613  0014CE                     
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4616  0014CE  BE77               	btfsc	(efgtoa@e+1)^0,7,c
  4617  0014D0  EF6E  F00A         	goto	u6740
  4618  0014D4  EF6C  F00A         	goto	u6741
  4619  0014D8                     u6741:
  4620  0014D8  EF7A  F00A         	goto	l6360
  4621  0014DC                     u6740:
  4622  0014DC                     
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4625  0014DC  0E00               	movlw	0
  4626  0014DE  6E7A               	movwf	efgtoa@u^0,c
  4627  0014E0  0E00               	movlw	0
  4628  0014E2  6E7B               	movwf	(efgtoa@u+1)^0,c
  4629  0014E4  0E80               	movlw	128
  4630  0014E6  6E7C               	movwf	(efgtoa@u+2)^0,c
  4631  0014E8  0E3F               	movlw	63
  4632  0014EA  6E7D               	movwf	(efgtoa@u+3)^0,c
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4635  0014EC  0E00               	movlw	0
  4636  0014EE  6E77               	movwf	(efgtoa@e+1)^0,c
  4637  0014F0  0E00               	movlw	0
  4638  0014F2  6E76               	movwf	efgtoa@e^0,c
  4639  0014F4                     l6360:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4643  0014F4  0E67               	movlw	103
  4644  0014F6  1867               	xorwf	efgtoa@mode^0,w,c
  4645  0014F8  B4D8               	btfsc	status,2,c
  4646  0014FA  EF81  F00A         	goto	u6751
  4647  0014FE  EF83  F00A         	goto	u6750
  4648  001502                     u6751:
  4649  001502  EF87  F00A         	goto	l6364
  4650  001506                     u6750:
  4651  001506                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4654  001506  5076               	movf	efgtoa@e^0,w,c
  4655  001508  2658               	addwf	efgtoa@m^0,f,c
  4656  00150A  5077               	movf	(efgtoa@e+1)^0,w,c
  4657  00150C  2259               	addwfc	(efgtoa@m+1)^0,f,c
  4658  00150E                     l6364:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4662  00150E  0E00               	movlw	0
  4663  001510  6E71               	movwf	(efgtoa@i+1)^0,c
  4664  001512  0E00               	movlw	0
  4665  001514  6E70               	movwf	efgtoa@i^0,c
  4666  001516                     
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4669  001516  C072  F068         	movff	efgtoa@g,efgtoa@h
  4670  00151A  C073  F069         	movff	efgtoa@g+1,efgtoa@h+1
  4671  00151E  C074  F06A         	movff	efgtoa@g+2,efgtoa@h+2
  4672  001522  C075  F06B         	movff	efgtoa@g+3,efgtoa@h+3
  4673  001526                     
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4676  001526  C07A  F05A         	movff	efgtoa@u,efgtoa@ou
  4677  00152A  C07B  F05B         	movff	efgtoa@u+1,efgtoa@ou+1
  4678  00152E  C07C  F05C         	movff	efgtoa@u+2,efgtoa@ou+2
  4679  001532  C07D  F05D         	movff	efgtoa@u+3,efgtoa@ou+3
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4682  001536  EF17  F00B         	goto	l6378
  4683  00153A                     l6370:
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4686  00153A  C068  F001         	movff	efgtoa@h,___fldiv@b
  4687  00153E  C069  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4688  001542  C06A  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4689  001546  C06B  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4690  00154A  C07A  F005         	movff	efgtoa@u,___fldiv@a
  4691  00154E  C07B  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4692  001552  C07C  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4693  001556  C07D  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4694  00155A  ECE2  F017         	call	___fldiv	;wreg free
  4695  00155E  C001  F01A         	movff	?___fldiv,floorf@x
  4696  001562  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4697  001566  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4698  00156A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4699  00156E  ECD2  F01C         	call	_floorf	;wreg free
  4700  001572  C01A  F06C         	movff	?_floorf,efgtoa@l
  4701  001576  C01B  F06D         	movff	?_floorf+1,efgtoa@l+1
  4702  00157A  C01C  F06E         	movff	?_floorf+2,efgtoa@l+2
  4703  00157E  C01D  F06F         	movff	?_floorf+3,efgtoa@l+3
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4706  001582  C06C  F001         	movff	efgtoa@l,___fltol@f1
  4707  001586  C06D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4708  00158A  C06E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4709  00158E  C06F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4710  001592  EC69  F026         	call	___fltol	;wreg free
  4711  001596  C001  F05E         	movff	?___fltol,efgtoa@d
  4712  00159A  C002  F05F         	movff	?___fltol+1,efgtoa@d+1
  4713  00159E                     
  4714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4715  00159E  C068  F038         	movff	efgtoa@h,___flsub@b
  4716  0015A2  C069  F039         	movff	efgtoa@h+1,___flsub@b+1
  4717  0015A6  C06A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  4718  0015AA  C06B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  4719  0015AE  C07A  F013         	movff	efgtoa@u,___flmul@a
  4720  0015B2  C07B  F014         	movff	efgtoa@u+1,___flmul@a+1
  4721  0015B6  C07C  F015         	movff	efgtoa@u+2,___flmul@a+2
  4722  0015BA  C07D  F016         	movff	efgtoa@u+3,___flmul@a+3
  4723  0015BE  C06C  F00F         	movff	efgtoa@l,___flmul@b
  4724  0015C2  C06D  F010         	movff	efgtoa@l+1,___flmul@b+1
  4725  0015C6  C06E  F011         	movff	efgtoa@l+2,___flmul@b+2
  4726  0015CA  C06F  F012         	movff	efgtoa@l+3,___flmul@b+3
  4727  0015CE  ECCD  F015         	call	___flmul	;wreg free
  4728  0015D2  C00F  F03C         	movff	?___flmul,___flsub@a
  4729  0015D6  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  4730  0015DA  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  4731  0015DE  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  4732  0015E2  ECCE  F02E         	call	___flsub	;wreg free
  4733  0015E6  C038  F068         	movff	?___flsub,efgtoa@h
  4734  0015EA  C039  F069         	movff	?___flsub+1,efgtoa@h+1
  4735  0015EE  C03A  F06A         	movff	?___flsub+2,efgtoa@h+2
  4736  0015F2  C03B  F06B         	movff	?___flsub+3,efgtoa@h+3
  4737  0015F6                     
  4738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4739  0015F6  C07A  F001         	movff	efgtoa@u,___fldiv@b
  4740  0015FA  C07B  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4741  0015FE  C07C  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4742  001602  C07D  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4743  001606  0E00               	movlw	0
  4744  001608  6E05               	movwf	___fldiv@a^0,c
  4745  00160A  0E00               	movlw	0
  4746  00160C  6E06               	movwf	(___fldiv@a+1)^0,c
  4747  00160E  0E20               	movlw	32
  4748  001610  6E07               	movwf	(___fldiv@a+2)^0,c
  4749  001612  0E41               	movlw	65
  4750  001614  6E08               	movwf	(___fldiv@a+3)^0,c
  4751  001616  ECE2  F017         	call	___fldiv	;wreg free
  4752  00161A  C001  F07A         	movff	?___fldiv,efgtoa@u
  4753  00161E  C002  F07B         	movff	?___fldiv+1,efgtoa@u+1
  4754  001622  C003  F07C         	movff	?___fldiv+2,efgtoa@u+2
  4755  001626  C004  F07D         	movff	?___fldiv+3,efgtoa@u+3
  4756  00162A                     
  4757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4758  00162A  4A70               	infsnz	efgtoa@i^0,f,c
  4759  00162C  2A71               	incf	(efgtoa@i+1)^0,f,c
  4760  00162E                     l6378:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4763  00162E  5058               	movf	efgtoa@m^0,w,c
  4764  001630  5C70               	subwf	efgtoa@i^0,w,c
  4765  001632  5071               	movf	(efgtoa@i+1)^0,w,c
  4766  001634  0A80               	xorlw	128
  4767  001636  6E47               	movwf	??_efgtoa^0,c
  4768  001638  5059               	movf	(efgtoa@m+1)^0,w,c
  4769  00163A  0A80               	xorlw	128
  4770  00163C  5847               	subwfb	??_efgtoa^0,w,c
  4771  00163E  A0D8               	btfss	status,0,c
  4772  001640  EF24  F00B         	goto	u6761
  4773  001644  EF26  F00B         	goto	u6760
  4774  001648                     u6761:
  4775  001648  EF9D  F00A         	goto	l6370
  4776  00164C                     u6760:
  4777  00164C                     
  4778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4779  00164C  C07A  F00F         	movff	efgtoa@u,___flmul@b
  4780  001650  C07B  F010         	movff	efgtoa@u+1,___flmul@b+1
  4781  001654  C07C  F011         	movff	efgtoa@u+2,___flmul@b+2
  4782  001658  C07D  F012         	movff	efgtoa@u+3,___flmul@b+3
  4783  00165C  0E00               	movlw	0
  4784  00165E  6E13               	movwf	___flmul@a^0,c
  4785  001660  0E00               	movlw	0
  4786  001662  6E14               	movwf	(___flmul@a+1)^0,c
  4787  001664  0EA0               	movlw	160
  4788  001666  6E15               	movwf	(___flmul@a+2)^0,c
  4789  001668  0E40               	movlw	64
  4790  00166A  6E16               	movwf	(___flmul@a+3)^0,c
  4791  00166C  ECCD  F015         	call	___flmul	;wreg free
  4792  001670  C00F  F06C         	movff	?___flmul,efgtoa@l
  4793  001674  C010  F06D         	movff	?___flmul+1,efgtoa@l+1
  4794  001678  C011  F06E         	movff	?___flmul+2,efgtoa@l+2
  4795  00167C  C012  F06F         	movff	?___flmul+3,efgtoa@l+3
  4796  001680                     
  4797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4798  001680  C068  F028         	movff	efgtoa@h,___flge@ff1
  4799  001684  C069  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4800  001688  C06A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4801  00168C  C06B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4802  001690  C06C  F02C         	movff	efgtoa@l,___flge@ff2
  4803  001694  C06D  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4804  001698  C06E  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4805  00169C  C06F  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4806  0016A0  ECEC  F026         	call	___flge	;wreg free
  4807  0016A4  B0D8               	btfsc	status,0,c
  4808  0016A6  EF57  F00B         	goto	u6771
  4809  0016AA  EF59  F00B         	goto	u6770
  4810  0016AE                     u6771:
  4811  0016AE  EF63  F00B         	goto	l6386
  4812  0016B2                     u6770:
  4813  0016B2                     
  4814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4815  0016B2  0E00               	movlw	0
  4816  0016B4  6E6C               	movwf	efgtoa@l^0,c
  4817  0016B6  0E00               	movlw	0
  4818  0016B8  6E6D               	movwf	(efgtoa@l+1)^0,c
  4819  0016BA  0E00               	movlw	0
  4820  0016BC  6E6E               	movwf	(efgtoa@l+2)^0,c
  4821  0016BE  0E00               	movlw	0
  4822  0016C0  6E6F               	movwf	(efgtoa@l+3)^0,c
  4823                           
  4824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4825  0016C2  EF8B  F00B         	goto	l6392
  4826  0016C6                     l6386:
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4829  0016C6  C068  F001         	movff	efgtoa@h,___fleq@ff1
  4830  0016CA  C069  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4831  0016CE  C06A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4832  0016D2  C06B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4833  0016D6  C06C  F005         	movff	efgtoa@l,___fleq@ff2
  4834  0016DA  C06D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4835  0016DE  C06E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4836  0016E2  C06F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4837  0016E6  ECAB  F02A         	call	___fleq	;wreg free
  4838  0016EA  A0D8               	btfss	status,0,c
  4839  0016EC  EF7A  F00B         	goto	u6781
  4840  0016F0  EF7C  F00B         	goto	u6780
  4841  0016F4                     u6781:
  4842  0016F4  EF8B  F00B         	goto	l6392
  4843  0016F8                     u6780:
  4844  0016F8  B05E               	btfsc	efgtoa@d^0,0,c
  4845  0016FA  EF81  F00B         	goto	u6791
  4846  0016FE  EF83  F00B         	goto	u6790
  4847  001702                     u6791:
  4848  001702  EF8B  F00B         	goto	l6392
  4849  001706                     u6790:
  4850  001706                     
  4851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4852  001706  0E00               	movlw	0
  4853  001708  6E6C               	movwf	efgtoa@l^0,c
  4854  00170A  0E00               	movlw	0
  4855  00170C  6E6D               	movwf	(efgtoa@l+1)^0,c
  4856  00170E  0E00               	movlw	0
  4857  001710  6E6E               	movwf	(efgtoa@l+2)^0,c
  4858  001712  0E00               	movlw	0
  4859  001714  6E6F               	movwf	(efgtoa@l+3)^0,c
  4860  001716                     l6392:
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4863  001716  C072  F028         	movff	efgtoa@g,___fladd@b
  4864  00171A  C073  F029         	movff	efgtoa@g+1,___fladd@b+1
  4865  00171E  C074  F02A         	movff	efgtoa@g+2,___fladd@b+2
  4866  001722  C075  F02B         	movff	efgtoa@g+3,___fladd@b+3
  4867  001726  C06C  F02C         	movff	efgtoa@l,___fladd@a
  4868  00172A  C06D  F02D         	movff	efgtoa@l+1,___fladd@a+1
  4869  00172E  C06E  F02E         	movff	efgtoa@l+2,___fladd@a+2
  4870  001732  C06F  F02F         	movff	efgtoa@l+3,___fladd@a+3
  4871  001736  EC3D  F011         	call	___fladd	;wreg free
  4872  00173A  C028  F068         	movff	?___fladd,efgtoa@h
  4873  00173E  C029  F069         	movff	?___fladd+1,efgtoa@h+1
  4874  001742  C02A  F06A         	movff	?___fladd+2,efgtoa@h+2
  4875  001746  C02B  F06B         	movff	?___fladd+3,efgtoa@h+3
  4876  00174A                     
  4877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4878  00174A  C068  F028         	movff	efgtoa@h,___flge@ff1
  4879  00174E  C069  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4880  001752  C06A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4881  001756  C06B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4882  00175A  0E00               	movlw	0
  4883  00175C  6E13               	movwf	___flmul@a^0,c
  4884  00175E  0E00               	movlw	0
  4885  001760  6E14               	movwf	(___flmul@a+1)^0,c
  4886  001762  0E20               	movlw	32
  4887  001764  6E15               	movwf	(___flmul@a+2)^0,c
  4888  001766  0E41               	movlw	65
  4889  001768  6E16               	movwf	(___flmul@a+3)^0,c
  4890  00176A  C05A  F00F         	movff	efgtoa@ou,___flmul@b
  4891  00176E  C05B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4892  001772  C05C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4893  001776  C05D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4894  00177A  ECCD  F015         	call	___flmul	;wreg free
  4895  00177E  C00F  F02C         	movff	?___flmul,___flge@ff2
  4896  001782  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4897  001786  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4898  00178A  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4899  00178E  ECEC  F026         	call	___flge	;wreg free
  4900  001792  A0D8               	btfss	status,0,c
  4901  001794  EFCE  F00B         	goto	u6801
  4902  001798  EFD0  F00B         	goto	u6800
  4903  00179C                     u6801:
  4904  00179C  EFF7  F00B         	goto	l6404
  4905  0017A0                     u6800:
  4906  0017A0                     
  4907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4908  0017A0  4A76               	infsnz	efgtoa@e^0,f,c
  4909  0017A2  2A77               	incf	(efgtoa@e+1)^0,f,c
  4910  0017A4                     
  4911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4912  0017A4  C05A  F00F         	movff	efgtoa@ou,___flmul@b
  4913  0017A8  C05B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4914  0017AC  C05C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4915  0017B0  C05D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4916  0017B4  0E00               	movlw	0
  4917  0017B6  6E13               	movwf	___flmul@a^0,c
  4918  0017B8  0E00               	movlw	0
  4919  0017BA  6E14               	movwf	(___flmul@a+1)^0,c
  4920  0017BC  0E20               	movlw	32
  4921  0017BE  6E15               	movwf	(___flmul@a+2)^0,c
  4922  0017C0  0E41               	movlw	65
  4923  0017C2  6E16               	movwf	(___flmul@a+3)^0,c
  4924  0017C4  ECCD  F015         	call	___flmul	;wreg free
  4925  0017C8  C00F  F05A         	movff	?___flmul,efgtoa@ou
  4926  0017CC  C010  F05B         	movff	?___flmul+1,efgtoa@ou+1
  4927  0017D0  C011  F05C         	movff	?___flmul+2,efgtoa@ou+2
  4928  0017D4  C012  F05D         	movff	?___flmul+3,efgtoa@ou+3
  4929  0017D8                     
  4930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4931  0017D8  0E66               	movlw	102
  4932  0017DA  1866               	xorwf	efgtoa@nmode^0,w,c
  4933  0017DC  A4D8               	btfss	status,2,c
  4934  0017DE  EFF3  F00B         	goto	u6811
  4935  0017E2  EFF5  F00B         	goto	u6810
  4936  0017E6                     u6811:
  4937  0017E6  EFF7  F00B         	goto	l6404
  4938  0017EA                     u6810:
  4939  0017EA                     
  4940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4941  0017EA  4A58               	infsnz	efgtoa@m^0,f,c
  4942  0017EC  2A59               	incf	(efgtoa@m+1)^0,f,c
  4943  0017EE                     l6404:
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4946  0017EE  C05A  F07A         	movff	efgtoa@ou,efgtoa@u
  4947  0017F2  C05B  F07B         	movff	efgtoa@ou+1,efgtoa@u+1
  4948  0017F6  C05C  F07C         	movff	efgtoa@ou+2,efgtoa@u+2
  4949  0017FA  C05D  F07D         	movff	efgtoa@ou+3,efgtoa@u+3
  4950  0017FE                     
  4951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4952  0017FE  0E65               	movlw	101
  4953  001800  1866               	xorwf	efgtoa@nmode^0,w,c
  4954  001802  B4D8               	btfsc	status,2,c
  4955  001804  EF06  F00C         	goto	u6821
  4956  001808  EF08  F00C         	goto	u6820
  4957  00180C                     u6821:
  4958  00180C  EF0E  F00C         	goto	l6410
  4959  001810                     u6820:
  4960  001810  C076  F056         	movff	efgtoa@e,efgtoa@ne
  4961  001814  C077  F057         	movff	efgtoa@e+1,efgtoa@ne+1
  4962  001818  EF12  F00C         	goto	l1781
  4963  00181C                     l6410:
  4964  00181C  0E00               	movlw	0
  4965  00181E  6E57               	movwf	(efgtoa@ne+1)^0,c
  4966  001820  0E00               	movlw	0
  4967  001822  6E56               	movwf	efgtoa@ne^0,c
  4968  001824                     l1781:
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4971  001824  0E00               	movlw	0
  4972  001826  6E55               	movwf	(efgtoa@pp+1)^0,c
  4973  001828  0E00               	movlw	0
  4974  00182A  6E54               	movwf	efgtoa@pp^0,c
  4975                           
  4976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4977  00182C  0E00               	movlw	0
  4978  00182E  6E53               	movwf	(efgtoa@t+1)^0,c
  4979  001830  0E00               	movlw	0
  4980  001832  6E52               	movwf	efgtoa@t^0,c
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4983  001834  0E00               	movlw	0
  4984  001836  6E71               	movwf	(efgtoa@i+1)^0,c
  4985  001838  0E00               	movlw	0
  4986  00183A  6E70               	movwf	efgtoa@i^0,c
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4989  00183C  EF0C  F00D         	goto	l6460
  4990  001840                     l6412:
  4991                           
  4992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4993  001840  C068  F001         	movff	efgtoa@h,___fldiv@b
  4994  001844  C069  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4995  001848  C06A  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4996  00184C  C06B  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4997  001850  C07A  F005         	movff	efgtoa@u,___fldiv@a
  4998  001854  C07B  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4999  001858  C07C  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5000  00185C  C07D  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5001  001860  ECE2  F017         	call	___fldiv	;wreg free
  5002  001864  C001  F01A         	movff	?___fldiv,floorf@x
  5003  001868  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5004  00186C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5005  001870  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5006  001874  ECD2  F01C         	call	_floorf	;wreg free
  5007  001878  C01A  F06C         	movff	?_floorf,efgtoa@l
  5008  00187C  C01B  F06D         	movff	?_floorf+1,efgtoa@l+1
  5009  001880  C01C  F06E         	movff	?_floorf+2,efgtoa@l+2
  5010  001884  C01D  F06F         	movff	?_floorf+3,efgtoa@l+3
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5013  001888  C06C  F001         	movff	efgtoa@l,___fltol@f1
  5014  00188C  C06D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5015  001890  C06E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5016  001894  C06F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5017  001898  EC69  F026         	call	___fltol	;wreg free
  5018  00189C  C001  F05E         	movff	?___fltol,efgtoa@d
  5019  0018A0  C002  F05F         	movff	?___fltol+1,efgtoa@d+1
  5020  0018A4                     
  5021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5022  0018A4  0100               	movlb	0	; () banked
  5023  0018A6  B9EF               	btfsc	_flags& (0+255),4,b
  5024  0018A8  EF58  F00C         	goto	u6831
  5025  0018AC  EF5A  F00C         	goto	u6830
  5026  0018B0                     u6831:
  5027  0018B0  EF77  F00C         	goto	l6424
  5028  0018B4                     u6830:
  5029  0018B4                     
  5030                           ; BSR set to: 0
  5031  0018B4  505E               	movf	efgtoa@d^0,w,c
  5032  0018B6  105F               	iorwf	(efgtoa@d+1)^0,w,c
  5033  0018B8  A4D8               	btfss	status,2,c
  5034  0018BA  EF61  F00C         	goto	u6841
  5035  0018BE  EF63  F00C         	goto	u6840
  5036  0018C2                     u6841:
  5037  0018C2  EF77  F00C         	goto	l6424
  5038  0018C6                     u6840:
  5039  0018C6                     
  5040                           ; BSR set to: 0
  5041  0018C6  0E67               	movlw	103
  5042  0018C8  1867               	xorwf	efgtoa@mode^0,w,c
  5043  0018CA  A4D8               	btfss	status,2,c
  5044  0018CC  EF6A  F00C         	goto	u6851
  5045  0018D0  EF6C  F00C         	goto	u6850
  5046  0018D4                     u6851:
  5047  0018D4  EF77  F00C         	goto	l6424
  5048  0018D8                     u6850:
  5049  0018D8                     
  5050                           ; BSR set to: 0
  5051  0018D8  BE57               	btfsc	(efgtoa@ne+1)^0,7,c
  5052  0018DA  EF73  F00C         	goto	u6860
  5053  0018DE  EF71  F00C         	goto	u6861
  5054  0018E2                     u6861:
  5055  0018E2  EF77  F00C         	goto	l6424
  5056  0018E6                     u6860:
  5057  0018E6                     
  5058                           ; BSR set to: 0
  5059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5060  0018E6  4A52               	infsnz	efgtoa@t^0,f,c
  5061  0018E8  2A53               	incf	(efgtoa@t+1)^0,f,c
  5062                           
  5063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5064  0018EA  EFC1  F00C         	goto	l6452
  5065  0018EE                     l6424:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5069  0018EE  5054               	movf	efgtoa@pp^0,w,c
  5070  0018F0  1055               	iorwf	(efgtoa@pp+1)^0,w,c
  5071  0018F2  A4D8               	btfss	status,2,c
  5072  0018F4  EF7E  F00C         	goto	u6871
  5073  0018F8  EF80  F00C         	goto	u6870
  5074  0018FC                     u6871:
  5075  0018FC  EFAA  F00C         	goto	l6444
  5076  001900                     u6870:
  5077  001900                     
  5078                           ; BSR set to: 0
  5079  001900  BE57               	btfsc	(efgtoa@ne+1)^0,7,c
  5080  001902  EF87  F00C         	goto	u6880
  5081  001906  EF85  F00C         	goto	u6881
  5082  00190A                     u6881:
  5083  00190A  EFAA  F00C         	goto	l6444
  5084  00190E                     u6880:
  5085  00190E                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5088  00190E  0E27               	movlw	low _dbuf
  5089  001910  2478               	addwf	efgtoa@n^0,w,c
  5090  001912  6ED9               	movwf	fsr2l,c
  5091  001914  0E01               	movlw	high _dbuf
  5092  001916  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5093  001918  6EDA               	movwf	fsr2h,c
  5094  00191A  0E2E               	movlw	46
  5095  00191C  6EDF               	movwf	indf2,c
  5096  00191E                     
  5097                           ; BSR set to: 0
  5098  00191E  4A78               	infsnz	efgtoa@n^0,f,c
  5099  001920  2A79               	incf	(efgtoa@n+1)^0,f,c
  5100  001922                     
  5101                           ; BSR set to: 0
  5102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5103  001922  0664               	decf	efgtoa@w^0,f,c
  5104  001924  A0D8               	btfss	status,0,c
  5105  001926  0665               	decf	(efgtoa@w+1)^0,f,c
  5106  001928                     
  5107                           ; BSR set to: 0
  5108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5109  001928  0E00               	movlw	0
  5110  00192A  6E55               	movwf	(efgtoa@pp+1)^0,c
  5111  00192C  0E01               	movlw	1
  5112  00192E  6E54               	movwf	efgtoa@pp^0,c
  5113  001930  EFAA  F00C         	goto	l6444
  5114  001934                     l6436:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5117  001934  0E27               	movlw	low _dbuf
  5118  001936  2478               	addwf	efgtoa@n^0,w,c
  5119  001938  6ED9               	movwf	fsr2l,c
  5120  00193A  0E01               	movlw	high _dbuf
  5121  00193C  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5122  00193E  6EDA               	movwf	fsr2h,c
  5123  001940  0E30               	movlw	48
  5124  001942  6EDF               	movwf	indf2,c
  5125  001944  4A78               	infsnz	efgtoa@n^0,f,c
  5126  001946  2A79               	incf	(efgtoa@n+1)^0,f,c
  5127  001948                     
  5128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5129  001948  0664               	decf	efgtoa@w^0,f,c
  5130  00194A  A0D8               	btfss	status,0,c
  5131  00194C  0665               	decf	(efgtoa@w+1)^0,f,c
  5132  00194E                     
  5133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5134  00194E  0652               	decf	efgtoa@t^0,f,c
  5135  001950  A0D8               	btfss	status,0,c
  5136  001952  0653               	decf	(efgtoa@t+1)^0,f,c
  5137  001954                     l6444:
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5140  001954  5052               	movf	efgtoa@t^0,w,c
  5141  001956  1053               	iorwf	(efgtoa@t+1)^0,w,c
  5142  001958  A4D8               	btfss	status,2,c
  5143  00195A  EFB1  F00C         	goto	u6891
  5144  00195E  EFB3  F00C         	goto	u6890
  5145  001962                     u6891:
  5146  001962  EF9A  F00C         	goto	l6436
  5147  001966                     u6890:
  5148  001966                     
  5149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5150  001966  0E27               	movlw	low _dbuf
  5151  001968  2478               	addwf	efgtoa@n^0,w,c
  5152  00196A  6ED9               	movwf	fsr2l,c
  5153  00196C  0E01               	movlw	high _dbuf
  5154  00196E  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5155  001970  6EDA               	movwf	fsr2h,c
  5156  001972  505E               	movf	efgtoa@d^0,w,c
  5157  001974  0F30               	addlw	48
  5158  001976  6EDF               	movwf	indf2,c
  5159  001978  4A78               	infsnz	efgtoa@n^0,f,c
  5160  00197A  2A79               	incf	(efgtoa@n+1)^0,f,c
  5161  00197C                     
  5162                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5163  00197C  0664               	decf	efgtoa@w^0,f,c
  5164  00197E  A0D8               	btfss	status,0,c
  5165  001980  0665               	decf	(efgtoa@w+1)^0,f,c
  5166  001982                     l6452:
  5167                           
  5168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5169  001982  C068  F038         	movff	efgtoa@h,___flsub@b
  5170  001986  C069  F039         	movff	efgtoa@h+1,___flsub@b+1
  5171  00198A  C06A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  5172  00198E  C06B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  5173  001992  C07A  F013         	movff	efgtoa@u,___flmul@a
  5174  001996  C07B  F014         	movff	efgtoa@u+1,___flmul@a+1
  5175  00199A  C07C  F015         	movff	efgtoa@u+2,___flmul@a+2
  5176  00199E  C07D  F016         	movff	efgtoa@u+3,___flmul@a+3
  5177  0019A2  C06C  F00F         	movff	efgtoa@l,___flmul@b
  5178  0019A6  C06D  F010         	movff	efgtoa@l+1,___flmul@b+1
  5179  0019AA  C06E  F011         	movff	efgtoa@l+2,___flmul@b+2
  5180  0019AE  C06F  F012         	movff	efgtoa@l+3,___flmul@b+3
  5181  0019B2  ECCD  F015         	call	___flmul	;wreg free
  5182  0019B6  C00F  F03C         	movff	?___flmul,___flsub@a
  5183  0019BA  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  5184  0019BE  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  5185  0019C2  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  5186  0019C6  ECCE  F02E         	call	___flsub	;wreg free
  5187  0019CA  C038  F068         	movff	?___flsub,efgtoa@h
  5188  0019CE  C039  F069         	movff	?___flsub+1,efgtoa@h+1
  5189  0019D2  C03A  F06A         	movff	?___flsub+2,efgtoa@h+2
  5190  0019D6  C03B  F06B         	movff	?___flsub+3,efgtoa@h+3
  5191  0019DA                     
  5192                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5193  0019DA  C07A  F001         	movff	efgtoa@u,___fldiv@b
  5194  0019DE  C07B  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5195  0019E2  C07C  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5196  0019E6  C07D  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5197  0019EA  0E00               	movlw	0
  5198  0019EC  6E05               	movwf	___fldiv@a^0,c
  5199  0019EE  0E00               	movlw	0
  5200  0019F0  6E06               	movwf	(___fldiv@a+1)^0,c
  5201  0019F2  0E20               	movlw	32
  5202  0019F4  6E07               	movwf	(___fldiv@a+2)^0,c
  5203  0019F6  0E41               	movlw	65
  5204  0019F8  6E08               	movwf	(___fldiv@a+3)^0,c
  5205  0019FA  ECE2  F017         	call	___fldiv	;wreg free
  5206  0019FE  C001  F07A         	movff	?___fldiv,efgtoa@u
  5207  001A02  C002  F07B         	movff	?___fldiv+1,efgtoa@u+1
  5208  001A06  C003  F07C         	movff	?___fldiv+2,efgtoa@u+2
  5209  001A0A  C004  F07D         	movff	?___fldiv+3,efgtoa@u+3
  5210  001A0E                     
  5211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5212  001A0E  0656               	decf	efgtoa@ne^0,f,c
  5213  001A10  A0D8               	btfss	status,0,c
  5214  001A12  0657               	decf	(efgtoa@ne+1)^0,f,c
  5215  001A14                     
  5216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5217  001A14  4A70               	infsnz	efgtoa@i^0,f,c
  5218  001A16  2A71               	incf	(efgtoa@i+1)^0,f,c
  5219  001A18                     l6460:
  5220                           
  5221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5222  001A18  5058               	movf	efgtoa@m^0,w,c
  5223  001A1A  5C70               	subwf	efgtoa@i^0,w,c
  5224  001A1C  5071               	movf	(efgtoa@i+1)^0,w,c
  5225  001A1E  0A80               	xorlw	128
  5226  001A20  6E47               	movwf	??_efgtoa^0,c
  5227  001A22  5059               	movf	(efgtoa@m+1)^0,w,c
  5228  001A24  0A80               	xorlw	128
  5229  001A26  5847               	subwfb	??_efgtoa^0,w,c
  5230  001A28  B0D8               	btfsc	status,0,c
  5231  001A2A  EF19  F00D         	goto	u6901
  5232  001A2E  EF1B  F00D         	goto	u6900
  5233  001A32                     u6901:
  5234  001A32  EF29  F00D         	goto	l6464
  5235  001A36                     u6900:
  5236  001A36  BE79               	btfsc	(efgtoa@n+1)^0,7,c
  5237  001A38  EF27  F00D         	goto	u6911
  5238  001A3C  5079               	movf	(efgtoa@n+1)^0,w,c
  5239  001A3E  E109               	bnz	u6910
  5240  001A40  0E4B               	movlw	75
  5241  001A42  5C78               	subwf	efgtoa@n^0,w,c
  5242  001A44  A0D8               	btfss	status,0,c
  5243  001A46  EF27  F00D         	goto	u6911
  5244  001A4A  EF29  F00D         	goto	u6910
  5245  001A4E                     u6911:
  5246  001A4E  EF20  F00C         	goto	l6412
  5247  001A52                     u6910:
  5248  001A52                     l6464:
  5249                           
  5250                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5251  001A52  5054               	movf	efgtoa@pp^0,w,c
  5252  001A54  1055               	iorwf	(efgtoa@pp+1)^0,w,c
  5253  001A56  A4D8               	btfss	status,2,c
  5254  001A58  EF30  F00D         	goto	u6921
  5255  001A5C  EF32  F00D         	goto	u6920
  5256  001A60                     u6921:
  5257  001A60  EF44  F00D         	goto	l6472
  5258  001A64                     u6920:
  5259  001A64  0100               	movlb	0	; () banked
  5260  001A66  A9EF               	btfss	_flags& (0+255),4,b
  5261  001A68  EF38  F00D         	goto	u6931
  5262  001A6C  EF3A  F00D         	goto	u6930
  5263  001A70                     u6931:
  5264  001A70  EF44  F00D         	goto	l6472
  5265  001A74                     u6930:
  5266  001A74                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5269  001A74  0E27               	movlw	low _dbuf
  5270  001A76  2478               	addwf	efgtoa@n^0,w,c
  5271  001A78  6ED9               	movwf	fsr2l,c
  5272  001A7A  0E01               	movlw	high _dbuf
  5273  001A7C  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5274  001A7E  6EDA               	movwf	fsr2h,c
  5275  001A80  0E2E               	movlw	46
  5276  001A82  6EDF               	movwf	indf2,c
  5277  001A84                     
  5278                           ; BSR set to: 0
  5279  001A84  4A78               	infsnz	efgtoa@n^0,f,c
  5280  001A86  2A79               	incf	(efgtoa@n+1)^0,f,c
  5281  001A88                     l6472:
  5282                           
  5283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5284  001A88  0E27               	movlw	low _dbuf
  5285  001A8A  2478               	addwf	efgtoa@n^0,w,c
  5286  001A8C  6ED9               	movwf	fsr2l,c
  5287  001A8E  0E01               	movlw	high _dbuf
  5288  001A90  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5289  001A92  6EDA               	movwf	fsr2h,c
  5290  001A94  0E00               	movlw	0
  5291  001A96  6EDF               	movwf	indf2,c
  5292  001A98                     
  5293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5294  001A98  0E65               	movlw	101
  5295  001A9A  1866               	xorwf	efgtoa@nmode^0,w,c
  5296  001A9C  A4D8               	btfss	status,2,c
  5297  001A9E  EF53  F00D         	goto	u6941
  5298  001AA2  EF55  F00D         	goto	u6940
  5299  001AA6                     u6941:
  5300  001AA6  EFC5  F008         	goto	l6274
  5301  001AAA                     u6940:
  5302  001AAA                     
  5303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5304  001AAA  0E00               	movlw	0
  5305  001AAC  6E71               	movwf	(efgtoa@i+1)^0,c
  5306  001AAE  0E4F               	movlw	79
  5307  001AB0  6E70               	movwf	efgtoa@i^0,c
  5308  001AB2                     
  5309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5310  001AB2  0E27               	movlw	low _dbuf
  5311  001AB4  2470               	addwf	efgtoa@i^0,w,c
  5312  001AB6  6ED9               	movwf	fsr2l,c
  5313  001AB8  0E01               	movlw	high _dbuf
  5314  001ABA  2071               	addwfc	(efgtoa@i+1)^0,w,c
  5315  001ABC  6EDA               	movwf	fsr2h,c
  5316  001ABE  0E00               	movlw	0
  5317  001AC0  6EDF               	movwf	indf2,c
  5318  001AC2                     
  5319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5320  001AC2  0E00               	movlw	0
  5321  001AC4  6E61               	movwf	(efgtoa@sign+1)^0,c
  5322  001AC6  0E00               	movlw	0
  5323  001AC8  6E60               	movwf	efgtoa@sign^0,c
  5324  001ACA                     
  5325                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5326  001ACA  BE77               	btfsc	(efgtoa@e+1)^0,7,c
  5327  001ACC  EF6C  F00D         	goto	u6950
  5328  001AD0  EF6A  F00D         	goto	u6951
  5329  001AD4                     u6951:
  5330  001AD4  EF74  F00D         	goto	l6488
  5331  001AD8                     u6950:
  5332  001AD8                     
  5333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5334  001AD8  0E00               	movlw	0
  5335  001ADA  6E61               	movwf	(efgtoa@sign+1)^0,c
  5336  001ADC  0E01               	movlw	1
  5337  001ADE  6E60               	movwf	efgtoa@sign^0,c
  5338  001AE0                     
  5339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5340  001AE0  6C76               	negf	efgtoa@e^0,c
  5341  001AE2  1E77               	comf	(efgtoa@e+1)^0,f,c
  5342  001AE4  B0D8               	btfsc	status,0,c
  5343  001AE6  2A77               	incf	(efgtoa@e+1)^0,f,c
  5344  001AE8                     l6488:
  5345                           
  5346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5347  001AE8  0E00               	movlw	0
  5348  001AEA  6E63               	movwf	(efgtoa@p+1)^0,c
  5349  001AEC  0E02               	movlw	2
  5350  001AEE  6E62               	movwf	efgtoa@p^0,c
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5353  001AF0  EFA4  F00D         	goto	l6500
  5354  001AF4                     l6490:
  5355                           
  5356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5357  001AF4  0670               	decf	efgtoa@i^0,f,c
  5358  001AF6  A0D8               	btfss	status,0,c
  5359  001AF8  0671               	decf	(efgtoa@i+1)^0,f,c
  5360  001AFA                     
  5361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5362  001AFA  0E27               	movlw	low _dbuf
  5363  001AFC  2470               	addwf	efgtoa@i^0,w,c
  5364  001AFE  6ED9               	movwf	fsr2l,c
  5365  001B00  0E01               	movlw	high _dbuf
  5366  001B02  2071               	addwfc	(efgtoa@i+1)^0,w,c
  5367  001B04  6EDA               	movwf	fsr2h,c
  5368  001B06  C076  F001         	movff	efgtoa@e,___awmod@dividend
  5369  001B0A  C077  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5370  001B0E  0E00               	movlw	0
  5371  001B10  6E04               	movwf	(___awmod@divisor+1)^0,c
  5372  001B12  0E0A               	movlw	10
  5373  001B14  6E03               	movwf	___awmod@divisor^0,c
  5374  001B16  EC53  F02A         	call	___awmod	;wreg free
  5375  001B1A  5001               	movf	?___awmod^0,w,c
  5376  001B1C  0F30               	addlw	48
  5377  001B1E  6EDF               	movwf	indf2,c
  5378  001B20                     
  5379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5380  001B20  C076  F001         	movff	efgtoa@e,___awdiv@dividend
  5381  001B24  C077  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5382  001B28  0E00               	movlw	0
  5383  001B2A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5384  001B2C  0E0A               	movlw	10
  5385  001B2E  6E03               	movwf	___awdiv@divisor^0,c
  5386  001B30  EC95  F029         	call	___awdiv	;wreg free
  5387  001B34  C001  F076         	movff	?___awdiv,efgtoa@e
  5388  001B38  C002  F077         	movff	?___awdiv+1,efgtoa@e+1
  5389  001B3C                     
  5390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5391  001B3C  0662               	decf	efgtoa@p^0,f,c
  5392  001B3E  A0D8               	btfss	status,0,c
  5393  001B40  0663               	decf	(efgtoa@p+1)^0,f,c
  5394  001B42                     
  5395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5396  001B42  0664               	decf	efgtoa@w^0,f,c
  5397  001B44  A0D8               	btfss	status,0,c
  5398  001B46  0665               	decf	(efgtoa@w+1)^0,f,c
  5399  001B48                     l6500:
  5400                           
  5401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5402  001B48  5076               	movf	efgtoa@e^0,w,c
  5403  001B4A  1077               	iorwf	(efgtoa@e+1)^0,w,c
  5404  001B4C  A4D8               	btfss	status,2,c
  5405  001B4E  EFAB  F00D         	goto	u6961
  5406  001B52  EFAD  F00D         	goto	u6960
  5407  001B56                     u6961:
  5408  001B56  EF7A  F00D         	goto	l6490
  5409  001B5A                     u6960:
  5410  001B5A  BE63               	btfsc	(efgtoa@p+1)^0,7,c
  5411  001B5C  EFBA  F00D         	goto	u6970
  5412  001B60  5063               	movf	(efgtoa@p+1)^0,w,c
  5413  001B62  E106               	bnz	u6971
  5414  001B64  0462               	decf	efgtoa@p^0,w,c
  5415  001B66  B0D8               	btfsc	status,0,c
  5416  001B68  EFB8  F00D         	goto	u6971
  5417  001B6C  EFBA  F00D         	goto	u6970
  5418  001B70                     u6971:
  5419  001B70  EF7A  F00D         	goto	l6490
  5420  001B74                     u6970:
  5421  001B74                     
  5422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5423  001B74  0670               	decf	efgtoa@i^0,f,c
  5424  001B76  A0D8               	btfss	status,0,c
  5425  001B78  0671               	decf	(efgtoa@i+1)^0,f,c
  5426  001B7A                     
  5427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5428  001B7A  5060               	movf	efgtoa@sign^0,w,c
  5429  001B7C  1061               	iorwf	(efgtoa@sign+1)^0,w,c
  5430  001B7E  A4D8               	btfss	status,2,c
  5431  001B80  EFC4  F00D         	goto	u6981
  5432  001B84  EFC6  F00D         	goto	u6980
  5433  001B88                     u6981:
  5434  001B88  EFCC  F00D         	goto	l6510
  5435  001B8C                     u6980:
  5436  001B8C  0E00               	movlw	0
  5437  001B8E  6E4F               	movwf	(_efgtoa$2545+1)^0,c
  5438  001B90  0E2B               	movlw	43
  5439  001B92  6E4E               	movwf	_efgtoa$2545^0,c
  5440  001B94  EFD0  F00D         	goto	l6512
  5441  001B98                     l6510:
  5442  001B98  0E00               	movlw	0
  5443  001B9A  6E4F               	movwf	(_efgtoa$2545+1)^0,c
  5444  001B9C  0E2D               	movlw	45
  5445  001B9E  6E4E               	movwf	_efgtoa$2545^0,c
  5446  001BA0                     l6512:
  5447  001BA0  0E27               	movlw	low _dbuf
  5448  001BA2  2470               	addwf	efgtoa@i^0,w,c
  5449  001BA4  6ED9               	movwf	fsr2l,c
  5450  001BA6  0E01               	movlw	high _dbuf
  5451  001BA8  2071               	addwfc	(efgtoa@i+1)^0,w,c
  5452  001BAA  6EDA               	movwf	fsr2h,c
  5453  001BAC  C04E  FFDF         	movff	_efgtoa$2545,indf2
  5454  001BB0                     
  5455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5456  001BB0  0664               	decf	efgtoa@w^0,f,c
  5457  001BB2  A0D8               	btfss	status,0,c
  5458  001BB4  0665               	decf	(efgtoa@w+1)^0,f,c
  5459  001BB6                     
  5460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5461  001BB6  0670               	decf	efgtoa@i^0,f,c
  5462  001BB8  A0D8               	btfss	status,0,c
  5463  001BBA  0671               	decf	(efgtoa@i+1)^0,f,c
  5464  001BBC  0EBF               	movlw	191
  5465  001BBE  6E47               	movwf	??_efgtoa^0,c
  5466  001BC0  0EFF               	movlw	255
  5467  001BC2  6E48               	movwf	(??_efgtoa+1)^0,c
  5468  001BC4  5046               	movf	efgtoa@c^0,w,c
  5469  001BC6  6E49               	movwf	(??_efgtoa+2)^0,c
  5470  001BC8  6A4A               	clrf	(??_efgtoa+3)^0,c
  5471  001BCA  5047               	movf	??_efgtoa^0,w,c
  5472  001BCC  2649               	addwf	(??_efgtoa+2)^0,f,c
  5473  001BCE  5048               	movf	(??_efgtoa+1)^0,w,c
  5474  001BD0  224A               	addwfc	(??_efgtoa+3)^0,f,c
  5475  001BD2  504A               	movf	(??_efgtoa+3)^0,w,c
  5476  001BD4  E109               	bnz	u6990
  5477  001BD6  0E1A               	movlw	26
  5478  001BD8  5C49               	subwf	(??_efgtoa+2)^0,w,c
  5479  001BDA  A0D8               	btfss	status,0,c
  5480  001BDC  EFF2  F00D         	goto	u6991
  5481  001BE0  EFF4  F00D         	goto	u6990
  5482  001BE4                     u6991:
  5483  001BE4  EFFA  F00D         	goto	l6524
  5484  001BE8                     u6990:
  5485  001BE8  0E00               	movlw	0
  5486  001BEA  6E51               	movwf	(_efgtoa$2546+1)^0,c
  5487  001BEC  0E65               	movlw	101
  5488  001BEE  6E50               	movwf	_efgtoa$2546^0,c
  5489  001BF0  EFFE  F00D         	goto	l6526
  5490  001BF4                     l6524:
  5491  001BF4  0E00               	movlw	0
  5492  001BF6  6E51               	movwf	(_efgtoa$2546+1)^0,c
  5493  001BF8  0E45               	movlw	69
  5494  001BFA  6E50               	movwf	_efgtoa$2546^0,c
  5495  001BFC                     l6526:
  5496  001BFC  0E27               	movlw	low _dbuf
  5497  001BFE  2470               	addwf	efgtoa@i^0,w,c
  5498  001C00  6ED9               	movwf	fsr2l,c
  5499  001C02  0E01               	movlw	high _dbuf
  5500  001C04  2071               	addwfc	(efgtoa@i+1)^0,w,c
  5501  001C06  6EDA               	movwf	fsr2h,c
  5502  001C08  C050  FFDF         	movff	_efgtoa$2546,indf2
  5503  001C0C                     
  5504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5505  001C0C  0664               	decf	efgtoa@w^0,f,c
  5506  001C0E  A0D8               	btfss	status,0,c
  5507  001C10  0665               	decf	(efgtoa@w+1)^0,f,c
  5508  001C12                     
  5509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5510  001C12  0E27               	movlw	low _dbuf
  5511  001C14  2478               	addwf	efgtoa@n^0,w,c
  5512  001C16  6E01               	movwf	strcpy@dest^0,c
  5513  001C18  0E01               	movlw	high _dbuf
  5514  001C1A  2079               	addwfc	(efgtoa@n+1)^0,w,c
  5515  001C1C  6E02               	movwf	(strcpy@dest+1)^0,c
  5516  001C1E  0E27               	movlw	low _dbuf
  5517  001C20  2470               	addwf	efgtoa@i^0,w,c
  5518  001C22  6E03               	movwf	strcpy@src^0,c
  5519  001C24  0E01               	movlw	high _dbuf
  5520  001C26  2071               	addwfc	(efgtoa@i+1)^0,w,c
  5521  001C28  6E04               	movwf	(strcpy@src+1)^0,c
  5522  001C2A  ECDF  F02D         	call	_strcpy	;wreg free
  5523  001C2E  EFC5  F008         	goto	l6274
  5524  001C32                     l1737:
  5525  001C32  0012               	return		;funcret
  5526  001C34                     __end_of_efgtoa:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function _tolower *****************
  5530 ;; Defined at:
  5531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  c               2    6[COMRAM] int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  2    6[COMRAM] int 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;Total ram usage:        6 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 1
  5552 ;; This function calls:
  5553 ;;		_isupper
  5554 ;; This function is called by:
  5555 ;;		_efgtoa
  5556 ;;		_vfpfcnvrt
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text9
  5561  005CCA                     __ptext9:
  5562                           	callstack 0
  5563  005CCA                     _tolower:
  5564                           	callstack 26
  5565  005CCA  0EBF               	movlw	191
  5566  005CCC  6E09               	movwf	??_tolower^0,c
  5567  005CCE  0EFF               	movlw	255
  5568  005CD0  6E0A               	movwf	(??_tolower+1)^0,c
  5569  005CD2  C007  F00B         	movff	tolower@c,??_tolower+2
  5570  005CD6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5571  005CDA  5009               	movf	??_tolower^0,w,c
  5572  005CDC  260B               	addwf	(??_tolower+2)^0,f,c
  5573  005CDE  500A               	movf	(??_tolower+1)^0,w,c
  5574  005CE0  220C               	addwfc	(??_tolower+3)^0,f,c
  5575  005CE2  500C               	movf	(??_tolower+3)^0,w,c
  5576  005CE4  E107               	bnz	u6231
  5577  005CE6  0E1A               	movlw	26
  5578  005CE8  5C0B               	subwf	(??_tolower+2)^0,w,c
  5579  005CEA  B0D8               	btfsc	status,0,c
  5580  005CEC  EF7A  F02E         	goto	u6231
  5581  005CF0  EF7C  F02E         	goto	u6230
  5582  005CF4                     u6231:
  5583  005CF4  EF83  F02E         	goto	l1936
  5584  005CF8                     u6230:
  5585  005CF8  0E20               	movlw	32
  5586  005CFA  1007               	iorwf	tolower@c^0,w,c
  5587  005CFC  6E07               	movwf	?_tolower^0,c
  5588  005CFE  5008               	movf	(tolower@c+1)^0,w,c
  5589  005D00  6E08               	movwf	(?_tolower+1)^0,c
  5590  005D02  EF87  F02E         	goto	l1939
  5591  005D06                     l1936:
  5592  005D06  C007  F007         	movff	tolower@c,?_tolower
  5593  005D0A  C008  F008         	movff	tolower@c+1,?_tolower+1
  5594  005D0E                     l1939:
  5595  005D0E  0012               	return		;funcret
  5596  005D10                     __end_of_tolower:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _isupper *****************
  5600 ;; Defined at:
  5601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  c               2    0[COMRAM] int 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2    0[COMRAM] int 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;Total ram usage:        6 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_efgtoa
  5625 ;;		_vfpfcnvrt
  5626 ;;		_tolower
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text10
  5631  005F22                     __ptext10:
  5632                           	callstack 0
  5633  005F22                     _isupper:
  5634                           	callstack 26
  5635  005F22  0EBF               	movlw	191
  5636  005F24  6E03               	movwf	??_isupper^0,c
  5637  005F26  0EFF               	movlw	255
  5638  005F28  6E04               	movwf	(??_isupper+1)^0,c
  5639  005F2A  C001  F005         	movff	isupper@c,??_isupper+2
  5640  005F2E  C002  F006         	movff	isupper@c+1,??_isupper+3
  5641  005F32  5003               	movf	??_isupper^0,w,c
  5642  005F34  2605               	addwf	(??_isupper+2)^0,f,c
  5643  005F36  5004               	movf	(??_isupper+1)^0,w,c
  5644  005F38  2206               	addwfc	(??_isupper+3)^0,f,c
  5645  005F3A  5006               	movf	(??_isupper+3)^0,w,c
  5646  005F3C  E10A               	bnz	u5110
  5647  005F3E  0E1A               	movlw	26
  5648  005F40  5C05               	subwf	(??_isupper+2)^0,w,c
  5649  005F42  A0D8               	btfss	status,0,c
  5650  005F44  EFA6  F02F         	goto	u5111
  5651  005F48  EFA9  F02F         	goto	u5110
  5652  005F4C                     u5111:
  5653  005F4C  0E01               	movlw	1
  5654  005F4E  EFAA  F02F         	goto	u5120
  5655  005F52                     u5110:
  5656  005F52  0E00               	movlw	0
  5657  005F54                     u5120:
  5658  005F54  6E01               	movwf	?_isupper^0,c
  5659  005F56  6A02               	clrf	(?_isupper+1)^0,c
  5660  005F58  0012               	return		;funcret
  5661  005F5A                     __end_of_isupper:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function _strcpy *****************
  5665 ;; Defined at:
  5666 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5669 ;;		 -> dbuf(80), 
  5670 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5671 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5672 ;;		 -> dbuf(80), 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  d               2    8[COMRAM] PTR unsigned char 
  5675 ;;		 -> dbuf(80), 
  5676 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5677 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5678 ;;		 -> dbuf(80), 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  2    0[COMRAM] PTR unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;Total ram usage:       10 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_efgtoa
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text11
  5702  005BBE                     __ptext11:
  5703                           	callstack 0
  5704  005BBE                     _strcpy:
  5705                           	callstack 26
  5706  005BBE  C003  F007         	movff	strcpy@src,strcpy@s
  5707  005BC2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5708  005BC6  C001  F009         	movff	strcpy@dest,strcpy@d
  5709  005BCA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5710  005BCE                     l6102:
  5711  005BCE  5007               	movf	strcpy@s^0,w,c
  5712  005BD0  6E05               	movwf	??_strcpy^0,c
  5713  005BD2  5008               	movf	(strcpy@s+1)^0,w,c
  5714  005BD4  6E06               	movwf	(??_strcpy+1)^0,c
  5715  005BD6  4A07               	infsnz	strcpy@s^0,f,c
  5716  005BD8  2A08               	incf	(strcpy@s+1)^0,f,c
  5717  005BDA  C005  FFF6         	movff	??_strcpy,tblptrl
  5718  005BDE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5719  005BE2  0E00               	movlw	low (__smallconst shr (0+16))
  5720  005BE4  6EF8               	movwf	tblptru,c
  5721  005BE6  C009  FFD9         	movff	strcpy@d,fsr2l
  5722  005BEA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5723  005BEE  4A09               	infsnz	strcpy@d^0,f,c
  5724  005BF0  2A0A               	incf	(strcpy@d+1)^0,f,c
  5725  005BF2  0E0F               	movlw	(high __ramtop+-1)
  5726  005BF4  64F7               	cpfsgt	tblptrh,c
  5727  005BF6  D003               	bra	u6217
  5728  005BF8  0008               	tblrd		*
  5729  005BFA  50F5               	movf	tablat,w,c
  5730  005BFC  D005               	bra	u6210
  5731  005BFE                     u6217:
  5732  005BFE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5733  005C02  CFF7 FFEA          	movff	tblptrh,fsr0h
  5734  005C06  50EF               	movf	indf0,w,c
  5735  005C08                     u6210:
  5736  005C08  6EDF               	movwf	indf2,c
  5737  005C0A  50DF               	movf	indf2,w,c
  5738  005C0C  A4D8               	btfss	status,2,c
  5739  005C0E  EF0B  F02E         	goto	u6221
  5740  005C12  EF0D  F02E         	goto	u6220
  5741  005C16                     u6221:
  5742  005C16  EFE7  F02D         	goto	l6102
  5743  005C1A                     u6220:
  5744  005C1A  0012               	return		;funcret
  5745  005C1C                     __end_of_strcpy:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function _floorf *****************
  5749 ;; Defined at:
  5750 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  x               4   25[COMRAM] float 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  u               4   41[COMRAM] struct .
  5755 ;;  m               4   35[COMRAM] unsigned long 
  5756 ;;  e               2   39[COMRAM] int 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4   25[COMRAM] float 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:       20 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_efgtoa
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text12
  5780  0039A4                     __ptext12:
  5781                           	callstack 0
  5782  0039A4                     _floorf:
  5783                           	callstack 26
  5784  0039A4  C100  F02A         	movff	floorf@F526,floorf@u
  5785  0039A8  C101  F02B         	movff	floorf@F526+1,floorf@u+1
  5786  0039AC  C102  F02C         	movff	floorf@F526+2,floorf@u+2
  5787  0039B0  C103  F02D         	movff	floorf@F526+3,floorf@u+3
  5788  0039B4  C01A  F02A         	movff	floorf@x,floorf@u
  5789  0039B8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5790  0039BC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5791  0039C0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5792  0039C4  0E81               	movlw	129
  5793  0039C6  6E1E               	movwf	??_floorf^0,c
  5794  0039C8  0EFF               	movlw	255
  5795  0039CA  6E1F               	movwf	(??_floorf+1)^0,c
  5796  0039CC  C02A  F020         	movff	floorf@u,??_floorf+2
  5797  0039D0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5798  0039D4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5799  0039D8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5800  0039DC  0E18               	movlw	24
  5801  0039DE  EFF6  F01C         	goto	u6240
  5802  0039E2                     u6245:
  5803  0039E2  90D8               	bcf	status,0,c
  5804  0039E4  3223               	rrcf	(??_floorf+5)^0,f,c
  5805  0039E6  3222               	rrcf	(??_floorf+4)^0,f,c
  5806  0039E8  3221               	rrcf	(??_floorf+3)^0,f,c
  5807  0039EA  3220               	rrcf	(??_floorf+2)^0,f,c
  5808  0039EC                     u6240:
  5809  0039EC  2EE8               	decfsz	wreg,f,c
  5810  0039EE  EFF1  F01C         	goto	u6245
  5811  0039F2  5020               	movf	(??_floorf+2)^0,w,c
  5812  0039F4  241E               	addwf	??_floorf^0,w,c
  5813  0039F6  6E28               	movwf	floorf@e^0,c
  5814  0039F8  0E00               	movlw	0
  5815  0039FA  201F               	addwfc	(??_floorf+1)^0,w,c
  5816  0039FC  6E29               	movwf	(floorf@e+1)^0,c
  5817  0039FE  BE29               	btfsc	(floorf@e+1)^0,7,c
  5818  003A00  EF0B  F01D         	goto	u6251
  5819  003A04  5029               	movf	(floorf@e+1)^0,w,c
  5820  003A06  E109               	bnz	u6250
  5821  003A08  0E17               	movlw	23
  5822  003A0A  5C28               	subwf	floorf@e^0,w,c
  5823  003A0C  A0D8               	btfss	status,0,c
  5824  003A0E  EF0B  F01D         	goto	u6251
  5825  003A12  EF0D  F01D         	goto	u6250
  5826  003A16                     u6251:
  5827  003A16  EF17  F01D         	goto	l6120
  5828  003A1A                     u6250:
  5829  003A1A                     l6118:
  5830  003A1A  C01A  F01A         	movff	floorf@x,?_floorf
  5831  003A1E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5832  003A22  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5833  003A26  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5834  003A2A  EFDA  F01D         	goto	l1874
  5835  003A2E                     l6120:
  5836  003A2E  BE29               	btfsc	(floorf@e+1)^0,7,c
  5837  003A30  EF1C  F01D         	goto	u6261
  5838  003A34  EF1E  F01D         	goto	u6260
  5839  003A38                     u6261:
  5840  003A38  EF8E  F01D         	goto	l6130
  5841  003A3C                     u6260:
  5842  003A3C  C028  F01E         	movff	floorf@e,??_floorf
  5843  003A40  0EFF               	movlw	255
  5844  003A42  6E1F               	movwf	(??_floorf+1)^0,c
  5845  003A44  0EFF               	movlw	255
  5846  003A46  6E20               	movwf	(??_floorf+2)^0,c
  5847  003A48  0E7F               	movlw	127
  5848  003A4A  6E21               	movwf	(??_floorf+3)^0,c
  5849  003A4C  0E00               	movlw	0
  5850  003A4E  6E22               	movwf	(??_floorf+4)^0,c
  5851  003A50                     u6275:
  5852  003A50  661E               	tstfsz	??_floorf^0,c
  5853  003A52  EF2D  F01D         	goto	u6276
  5854  003A56  EF35  F01D         	goto	u6277
  5855  003A5A                     u6276:
  5856  003A5A  3422               	rlcf	(??_floorf+4)^0,w,c
  5857  003A5C  3222               	rrcf	(??_floorf+4)^0,f,c
  5858  003A5E  3221               	rrcf	(??_floorf+3)^0,f,c
  5859  003A60  3220               	rrcf	(??_floorf+2)^0,f,c
  5860  003A62  321F               	rrcf	(??_floorf+1)^0,f,c
  5861  003A64  2E1E               	decfsz	??_floorf^0,f,c
  5862  003A66  EF28  F01D         	goto	u6275
  5863  003A6A                     u6277:
  5864  003A6A  C01F  F024         	movff	??_floorf+1,floorf@m
  5865  003A6E  C020  F025         	movff	??_floorf+2,floorf@m+1
  5866  003A72  C021  F026         	movff	??_floorf+3,floorf@m+2
  5867  003A76  C022  F027         	movff	??_floorf+4,floorf@m+3
  5868  003A7A  5024               	movf	floorf@m^0,w,c
  5869  003A7C  142A               	andwf	floorf@u^0,w,c
  5870  003A7E  6E1E               	movwf	??_floorf^0,c
  5871  003A80  5025               	movf	(floorf@m+1)^0,w,c
  5872  003A82  142B               	andwf	(floorf@u+1)^0,w,c
  5873  003A84  6E1F               	movwf	(??_floorf+1)^0,c
  5874  003A86  5026               	movf	(floorf@m+2)^0,w,c
  5875  003A88  142C               	andwf	(floorf@u+2)^0,w,c
  5876  003A8A  6E20               	movwf	(??_floorf+2)^0,c
  5877  003A8C  5027               	movf	(floorf@m+3)^0,w,c
  5878  003A8E  142D               	andwf	(floorf@u+3)^0,w,c
  5879  003A90  6E21               	movwf	(??_floorf+3)^0,c
  5880  003A92  501E               	movf	??_floorf^0,w,c
  5881  003A94  101F               	iorwf	(??_floorf+1)^0,w,c
  5882  003A96  1020               	iorwf	(??_floorf+2)^0,w,c
  5883  003A98  1021               	iorwf	(??_floorf+3)^0,w,c
  5884  003A9A  A4D8               	btfss	status,2,c
  5885  003A9C  EF52  F01D         	goto	u6281
  5886  003AA0  EF54  F01D         	goto	u6280
  5887  003AA4                     u6281:
  5888  003AA4  EF56  F01D         	goto	l6126
  5889  003AA8                     u6280:
  5890  003AA8  EF0D  F01D         	goto	l6118
  5891  003AAC                     l6126:
  5892  003AAC  C02A  F01E         	movff	floorf@u,??_floorf
  5893  003AB0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5894  003AB4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5895  003AB8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5896  003ABC  0E20               	movlw	32
  5897  003ABE  EF66  F01D         	goto	u6290
  5898  003AC2                     u6295:
  5899  003AC2  90D8               	bcf	status,0,c
  5900  003AC4  3221               	rrcf	(??_floorf+3)^0,f,c
  5901  003AC6  3220               	rrcf	(??_floorf+2)^0,f,c
  5902  003AC8  321F               	rrcf	(??_floorf+1)^0,f,c
  5903  003ACA  321E               	rrcf	??_floorf^0,f,c
  5904  003ACC                     u6290:
  5905  003ACC  2EE8               	decfsz	wreg,f,c
  5906  003ACE  EF61  F01D         	goto	u6295
  5907  003AD2  501E               	movf	??_floorf^0,w,c
  5908  003AD4  101F               	iorwf	(??_floorf+1)^0,w,c
  5909  003AD6  1020               	iorwf	(??_floorf+2)^0,w,c
  5910  003AD8  1021               	iorwf	(??_floorf+3)^0,w,c
  5911  003ADA  B4D8               	btfsc	status,2,c
  5912  003ADC  EF72  F01D         	goto	u6301
  5913  003AE0  EF74  F01D         	goto	u6300
  5914  003AE4                     u6301:
  5915  003AE4  EF7C  F01D         	goto	l1877
  5916  003AE8                     u6300:
  5917  003AE8  5024               	movf	floorf@m^0,w,c
  5918  003AEA  262A               	addwf	floorf@u^0,f,c
  5919  003AEC  5025               	movf	(floorf@m+1)^0,w,c
  5920  003AEE  222B               	addwfc	(floorf@u+1)^0,f,c
  5921  003AF0  5026               	movf	(floorf@m+2)^0,w,c
  5922  003AF2  222C               	addwfc	(floorf@u+2)^0,f,c
  5923  003AF4  5027               	movf	(floorf@m+3)^0,w,c
  5924  003AF6  222D               	addwfc	(floorf@u+3)^0,f,c
  5925  003AF8                     l1877:
  5926  003AF8  1C24               	comf	floorf@m^0,w,c
  5927  003AFA  6E1E               	movwf	??_floorf^0,c
  5928  003AFC  1C25               	comf	(floorf@m+1)^0,w,c
  5929  003AFE  6E1F               	movwf	(??_floorf+1)^0,c
  5930  003B00  1C26               	comf	(floorf@m+2)^0,w,c
  5931  003B02  6E20               	movwf	(??_floorf+2)^0,c
  5932  003B04  1C27               	comf	(floorf@m+3)^0,w,c
  5933  003B06  6E21               	movwf	(??_floorf+3)^0,c
  5934  003B08  501E               	movf	??_floorf^0,w,c
  5935  003B0A  162A               	andwf	floorf@u^0,f,c
  5936  003B0C  501F               	movf	(??_floorf+1)^0,w,c
  5937  003B0E  162B               	andwf	(floorf@u+1)^0,f,c
  5938  003B10  5020               	movf	(??_floorf+2)^0,w,c
  5939  003B12  162C               	andwf	(floorf@u+2)^0,f,c
  5940  003B14  5021               	movf	(??_floorf+3)^0,w,c
  5941  003B16  162D               	andwf	(floorf@u+3)^0,f,c
  5942  003B18  EFD2  F01D         	goto	l6138
  5943  003B1C                     l6130:
  5944  003B1C  C02A  F01E         	movff	floorf@u,??_floorf
  5945  003B20  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5946  003B24  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5947  003B28  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5948  003B2C  0E20               	movlw	32
  5949  003B2E  EF9E  F01D         	goto	u6310
  5950  003B32                     u6315:
  5951  003B32  90D8               	bcf	status,0,c
  5952  003B34  3221               	rrcf	(??_floorf+3)^0,f,c
  5953  003B36  3220               	rrcf	(??_floorf+2)^0,f,c
  5954  003B38  321F               	rrcf	(??_floorf+1)^0,f,c
  5955  003B3A  321E               	rrcf	??_floorf^0,f,c
  5956  003B3C                     u6310:
  5957  003B3C  2EE8               	decfsz	wreg,f,c
  5958  003B3E  EF99  F01D         	goto	u6315
  5959  003B42  501E               	movf	??_floorf^0,w,c
  5960  003B44  101F               	iorwf	(??_floorf+1)^0,w,c
  5961  003B46  1020               	iorwf	(??_floorf+2)^0,w,c
  5962  003B48  1021               	iorwf	(??_floorf+3)^0,w,c
  5963  003B4A  A4D8               	btfss	status,2,c
  5964  003B4C  EFAA  F01D         	goto	u6321
  5965  003B50  EFAC  F01D         	goto	u6320
  5966  003B54                     u6321:
  5967  003B54  EFB6  F01D         	goto	l6134
  5968  003B58                     u6320:
  5969  003B58  0E00               	movlw	0
  5970  003B5A  6E2A               	movwf	floorf@u^0,c
  5971  003B5C  0E00               	movlw	0
  5972  003B5E  6E2B               	movwf	(floorf@u+1)^0,c
  5973  003B60  0E00               	movlw	0
  5974  003B62  6E2C               	movwf	(floorf@u+2)^0,c
  5975  003B64  0E00               	movlw	0
  5976  003B66  6E2D               	movwf	(floorf@u+3)^0,c
  5977  003B68  EFD2  F01D         	goto	l6138
  5978  003B6C                     l6134:
  5979  003B6C  90D8               	bcf	status,0,c
  5980  003B6E  342A               	rlcf	floorf@u^0,w,c
  5981  003B70  6E1E               	movwf	??_floorf^0,c
  5982  003B72  342B               	rlcf	(floorf@u+1)^0,w,c
  5983  003B74  6E1F               	movwf	(??_floorf+1)^0,c
  5984  003B76  342C               	rlcf	(floorf@u+2)^0,w,c
  5985  003B78  6E20               	movwf	(??_floorf+2)^0,c
  5986  003B7A  342D               	rlcf	(floorf@u+3)^0,w,c
  5987  003B7C  6E21               	movwf	(??_floorf+3)^0,c
  5988  003B7E  501E               	movf	??_floorf^0,w,c
  5989  003B80  101F               	iorwf	(??_floorf+1)^0,w,c
  5990  003B82  1020               	iorwf	(??_floorf+2)^0,w,c
  5991  003B84  1021               	iorwf	(??_floorf+3)^0,w,c
  5992  003B86  B4D8               	btfsc	status,2,c
  5993  003B88  EFC8  F01D         	goto	u6331
  5994  003B8C  EFCA  F01D         	goto	u6330
  5995  003B90                     u6331:
  5996  003B90  EFD2  F01D         	goto	l6138
  5997  003B94                     u6330:
  5998  003B94  0E00               	movlw	0
  5999  003B96  6E2A               	movwf	floorf@u^0,c
  6000  003B98  0E00               	movlw	0
  6001  003B9A  6E2B               	movwf	(floorf@u+1)^0,c
  6002  003B9C  0E80               	movlw	128
  6003  003B9E  6E2C               	movwf	(floorf@u+2)^0,c
  6004  003BA0  0EBF               	movlw	191
  6005  003BA2  6E2D               	movwf	(floorf@u+3)^0,c
  6006  003BA4                     l6138:
  6007  003BA4  C02A  F01A         	movff	floorf@u,?_floorf
  6008  003BA8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6009  003BAC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6010  003BB0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6011  003BB4                     l1874:
  6012  003BB4  0012               	return		;funcret
  6013  003BB6                     __end_of_floorf:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___fpclassifyf *****************
  6017 ;; Defined at:
  6018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  x               4    0[COMRAM] float 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  u               4   10[COMRAM] struct .
  6023 ;;  e               2    8[COMRAM] int 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2    0[COMRAM] int 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;Total ram usage:       14 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_efgtoa
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text13
  6047  004EDC                     __ptext13:
  6048                           	callstack 0
  6049  004EDC                     ___fpclassifyf:
  6050                           	callstack 26
  6051  004EDC  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6052  004EE0  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6053  004EE4  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6054  004EE8  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6055  004EEC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6056  004EF0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6057  004EF4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6058  004EF8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6059  004EFC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6060  004F00  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6061  004F04  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6062  004F08  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6063  004F0C  0E18               	movlw	24
  6064  004F0E  EF8E  F027         	goto	u6140
  6065  004F12                     u6145:
  6066  004F12  90D8               	bcf	status,0,c
  6067  004F14  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6068  004F16  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6069  004F18  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6070  004F1A  3205               	rrcf	??___fpclassifyf^0,f,c
  6071  004F1C                     u6140:
  6072  004F1C  2EE8               	decfsz	wreg,f,c
  6073  004F1E  EF89  F027         	goto	u6145
  6074  004F22  5005               	movf	??___fpclassifyf^0,w,c
  6075  004F24  6E09               	movwf	___fpclassifyf@e^0,c
  6076  004F26  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6077  004F28  5009               	movf	___fpclassifyf@e^0,w,c
  6078  004F2A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6079  004F2C  A4D8               	btfss	status,2,c
  6080  004F2E  EF9B  F027         	goto	u6151
  6081  004F32  EF9D  F027         	goto	u6150
  6082  004F36                     u6151:
  6083  004F36  EFBD  F027         	goto	l6090
  6084  004F3A                     u6150:
  6085  004F3A  90D8               	bcf	status,0,c
  6086  004F3C  340B               	rlcf	___fpclassifyf@u^0,w,c
  6087  004F3E  6E05               	movwf	??___fpclassifyf^0,c
  6088  004F40  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6089  004F42  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6090  004F44  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6091  004F46  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6092  004F48  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6093  004F4A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6094  004F4C  5005               	movf	??___fpclassifyf^0,w,c
  6095  004F4E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6096  004F50  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6097  004F52  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6098  004F54  A4D8               	btfss	status,2,c
  6099  004F56  EFAF  F027         	goto	u6161
  6100  004F5A  EFB1  F027         	goto	u6160
  6101  004F5E                     u6161:
  6102  004F5E  EFB7  F027         	goto	l6086
  6103  004F62                     u6160:
  6104  004F62  0E00               	movlw	0
  6105  004F64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6106  004F66  0E02               	movlw	2
  6107  004F68  6E01               	movwf	?___fpclassifyf^0,c
  6108  004F6A  EFEC  F027         	goto	l1860
  6109  004F6E                     l6086:
  6110  004F6E  0E00               	movlw	0
  6111  004F70  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6112  004F72  0E03               	movlw	3
  6113  004F74  6E01               	movwf	?___fpclassifyf^0,c
  6114  004F76  EFEC  F027         	goto	l1860
  6115  004F7A                     l6090:
  6116  004F7A  2809               	incf	___fpclassifyf@e^0,w,c
  6117  004F7C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6118  004F7E  A4D8               	btfss	status,2,c
  6119  004F80  EFC4  F027         	goto	u6171
  6120  004F84  EFC6  F027         	goto	u6170
  6121  004F88                     u6171:
  6122  004F88  EFE8  F027         	goto	l6096
  6123  004F8C                     u6170:
  6124  004F8C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6125  004F90  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6126  004F94  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6127  004F98  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6128  004F9C  0E09               	movlw	9
  6129  004F9E                     u6185:
  6130  004F9E  90D8               	bcf	status,0,c
  6131  004FA0  3605               	rlcf	??___fpclassifyf^0,f,c
  6132  004FA2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6133  004FA4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6134  004FA6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6135  004FA8  2EE8               	decfsz	wreg,f,c
  6136  004FAA  EFCF  F027         	goto	u6185
  6137  004FAE  5005               	movf	??___fpclassifyf^0,w,c
  6138  004FB0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6139  004FB2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6140  004FB4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6141  004FB6  B4D8               	btfsc	status,2,c
  6142  004FB8  EFE0  F027         	goto	u6191
  6143  004FBC  EFE3  F027         	goto	u6190
  6144  004FC0                     u6191:
  6145  004FC0  0E01               	movlw	1
  6146  004FC2  EFE4  F027         	goto	u6200
  6147  004FC6                     u6190:
  6148  004FC6  0E00               	movlw	0
  6149  004FC8                     u6200:
  6150  004FC8  6E01               	movwf	?___fpclassifyf^0,c
  6151  004FCA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6152  004FCC  EFEC  F027         	goto	l1860
  6153  004FD0                     l6096:
  6154  004FD0  0E00               	movlw	0
  6155  004FD2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6156  004FD4  0E04               	movlw	4
  6157  004FD6  6E01               	movwf	?___fpclassifyf^0,c
  6158  004FD8                     l1860:
  6159  004FD8  0012               	return		;funcret
  6160  004FDA                     __end_of___fpclassifyf:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function ___fltol *****************
  6164 ;; Defined at:
  6165 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  f1              4    0[COMRAM] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  exp1            1    9[COMRAM] unsigned char 
  6170 ;;  sign1           1    8[COMRAM] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  4    0[COMRAM] long 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;Total ram usage:       10 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_efgtoa
  6190 ;;		_I2C_Master_Mode_Clock_Configurations
  6191 ;;		_EUSART_Baud_Rate_Calculation
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text14
  6196  004CD2                     __ptext14:
  6197                           	callstack 0
  6198  004CD2                     ___fltol:
  6199                           	callstack 26
  6200  004CD2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6201  004CD4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6202  004CD6  6E0A               	movwf	___fltol@exp1^0,c
  6203  004CD8  500A               	movf	___fltol@exp1^0,w,c
  6204  004CDA  A4D8               	btfss	status,2,c
  6205  004CDC  EF72  F026         	goto	u5951
  6206  004CE0  EF74  F026         	goto	u5950
  6207  004CE4                     u5951:
  6208  004CE4  EF7E  F026         	goto	l5976
  6209  004CE8                     u5950:
  6210  004CE8                     l5972:
  6211  004CE8  0E00               	movlw	0
  6212  004CEA  6E01               	movwf	?___fltol^0,c
  6213  004CEC  0E00               	movlw	0
  6214  004CEE  6E02               	movwf	(?___fltol+1)^0,c
  6215  004CF0  0E00               	movlw	0
  6216  004CF2  6E03               	movwf	(?___fltol+2)^0,c
  6217  004CF4  0E00               	movlw	0
  6218  004CF6  6E04               	movwf	(?___fltol+3)^0,c
  6219  004CF8  EFEB  F026         	goto	l1260
  6220  004CFC                     l5976:
  6221  004CFC  C001  F005         	movff	___fltol@f1,??___fltol
  6222  004D00  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6223  004D04  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6224  004D08  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6225  004D0C  0E20               	movlw	32
  6226  004D0E  EF8E  F026         	goto	u5960
  6227  004D12                     u5965:
  6228  004D12  90D8               	bcf	status,0,c
  6229  004D14  3208               	rrcf	(??___fltol+3)^0,f,c
  6230  004D16  3207               	rrcf	(??___fltol+2)^0,f,c
  6231  004D18  3206               	rrcf	(??___fltol+1)^0,f,c
  6232  004D1A  3205               	rrcf	??___fltol^0,f,c
  6233  004D1C                     u5960:
  6234  004D1C  2EE8               	decfsz	wreg,f,c
  6235  004D1E  EF89  F026         	goto	u5965
  6236  004D22  5005               	movf	??___fltol^0,w,c
  6237  004D24  6E09               	movwf	___fltol@sign1^0,c
  6238  004D26  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6239  004D28  0EFF               	movlw	255
  6240  004D2A  1601               	andwf	___fltol@f1^0,f,c
  6241  004D2C  0EFF               	movlw	255
  6242  004D2E  1602               	andwf	(___fltol@f1+1)^0,f,c
  6243  004D30  0EFF               	movlw	255
  6244  004D32  1603               	andwf	(___fltol@f1+2)^0,f,c
  6245  004D34  0E00               	movlw	0
  6246  004D36  1604               	andwf	(___fltol@f1+3)^0,f,c
  6247  004D38  0E96               	movlw	150
  6248  004D3A  5E0A               	subwf	___fltol@exp1^0,f,c
  6249  004D3C  BE0A               	btfsc	___fltol@exp1^0,7,c
  6250  004D3E  EFA5  F026         	goto	u5970
  6251  004D42  EFA3  F026         	goto	u5971
  6252  004D46                     u5971:
  6253  004D46  EFBB  F026         	goto	l5996
  6254  004D4A                     u5970:
  6255  004D4A  500A               	movf	___fltol@exp1^0,w,c
  6256  004D4C  0A80               	xorlw	128
  6257  004D4E  0F97               	addlw	151
  6258  004D50  B0D8               	btfsc	status,0,c
  6259  004D52  EFAD  F026         	goto	u5981
  6260  004D56  EFAF  F026         	goto	u5980
  6261  004D5A                     u5981:
  6262  004D5A  EFB1  F026         	goto	l5992
  6263  004D5E                     u5980:
  6264  004D5E  EF74  F026         	goto	l5972
  6265  004D62                     l5992:
  6266  004D62  90D8               	bcf	status,0,c
  6267  004D64  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6268  004D66  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6269  004D68  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6270  004D6A  3201               	rrcf	___fltol@f1^0,f,c
  6271  004D6C  3E0A               	incfsz	___fltol@exp1^0,f,c
  6272  004D6E  EFB1  F026         	goto	l5992
  6273  004D72  EFD3  F026         	goto	l6006
  6274  004D76                     l5996:
  6275  004D76  0E1F               	movlw	31
  6276  004D78  640A               	cpfsgt	___fltol@exp1^0,c
  6277  004D7A  EFC1  F026         	goto	u5991
  6278  004D7E  EFC3  F026         	goto	u5990
  6279  004D82                     u5991:
  6280  004D82  EFCB  F026         	goto	l6004
  6281  004D86                     u5990:
  6282  004D86  EF74  F026         	goto	l5972
  6283  004D8A                     l6002:
  6284  004D8A  90D8               	bcf	status,0,c
  6285  004D8C  3601               	rlcf	___fltol@f1^0,f,c
  6286  004D8E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6287  004D90  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6288  004D92  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6289  004D94  060A               	decf	___fltol@exp1^0,f,c
  6290  004D96                     l6004:
  6291  004D96  500A               	movf	___fltol@exp1^0,w,c
  6292  004D98  A4D8               	btfss	status,2,c
  6293  004D9A  EFD1  F026         	goto	u6001
  6294  004D9E  EFD3  F026         	goto	u6000
  6295  004DA2                     u6001:
  6296  004DA2  EFC5  F026         	goto	l6002
  6297  004DA6                     u6000:
  6298  004DA6                     l6006:
  6299  004DA6  5009               	movf	___fltol@sign1^0,w,c
  6300  004DA8  B4D8               	btfsc	status,2,c
  6301  004DAA  EFD9  F026         	goto	u6011
  6302  004DAE  EFDB  F026         	goto	u6010
  6303  004DB2                     u6011:
  6304  004DB2  EFE3  F026         	goto	l6010
  6305  004DB6                     u6010:
  6306  004DB6  1E04               	comf	(___fltol@f1+3)^0,f,c
  6307  004DB8  1E03               	comf	(___fltol@f1+2)^0,f,c
  6308  004DBA  1E02               	comf	(___fltol@f1+1)^0,f,c
  6309  004DBC  6C01               	negf	___fltol@f1^0,c
  6310  004DBE  0E00               	movlw	0
  6311  004DC0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6312  004DC2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6313  004DC4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6314  004DC6                     l6010:
  6315  004DC6  C001  F001         	movff	___fltol@f1,?___fltol
  6316  004DCA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6317  004DCE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6318  004DD2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6319  004DD6                     l1260:
  6320  004DD6  0012               	return		;funcret
  6321  004DD8                     __end_of___fltol:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function ___flneg *****************
  6325 ;; Defined at:
  6326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  f1              4    0[COMRAM] long 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  4    0[COMRAM] long 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;Total ram usage:        4 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_efgtoa
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text15
  6354  005F5A                     __ptext15:
  6355                           	callstack 0
  6356  005F5A                     ___flneg:
  6357                           	callstack 26
  6358  005F5A  5001               	movf	___flneg@f1^0,w,c
  6359  005F5C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6360  005F5E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6361  005F60  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6362  005F62  B4D8               	btfsc	status,2,c
  6363  005F64  EFB6  F02F         	goto	u5941
  6364  005F68  EFB8  F02F         	goto	u5940
  6365  005F6C                     u5941:
  6366  005F6C  EFC0  F02F         	goto	l5966
  6367  005F70                     u5940:
  6368  005F70  0E00               	movlw	0
  6369  005F72  1A01               	xorwf	___flneg@f1^0,f,c
  6370  005F74  0E00               	movlw	0
  6371  005F76  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6372  005F78  0E00               	movlw	0
  6373  005F7A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6374  005F7C  0E80               	movlw	128
  6375  005F7E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6376  005F80                     l5966:
  6377  005F80  C001  F001         	movff	___flneg@f1,?___flneg
  6378  005F84  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6379  005F88  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6380  005F8C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6381  005F90  0012               	return		;funcret
  6382  005F92                     __end_of___flneg:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function ___flge *****************
  6386 ;; Defined at:
  6387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  ff1             4   39[COMRAM] long 
  6390 ;;  ff2             4   43[COMRAM] long 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;		None               void
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:       12 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_efgtoa
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text16
  6416  004DD8                     __ptext16:
  6417                           	callstack 0
  6418  004DD8                     ___flge:
  6419                           	callstack 26
  6420  004DD8  0E00               	movlw	0
  6421  004DDA  1428               	andwf	___flge@ff1^0,w,c
  6422  004DDC  6E30               	movwf	??___flge^0,c
  6423  004DDE  0E00               	movlw	0
  6424  004DE0  1429               	andwf	(___flge@ff1+1)^0,w,c
  6425  004DE2  6E31               	movwf	(??___flge+1)^0,c
  6426  004DE4  0E80               	movlw	128
  6427  004DE6  142A               	andwf	(___flge@ff1+2)^0,w,c
  6428  004DE8  6E32               	movwf	(??___flge+2)^0,c
  6429  004DEA  0E7F               	movlw	127
  6430  004DEC  142B               	andwf	(___flge@ff1+3)^0,w,c
  6431  004DEE  6E33               	movwf	(??___flge+3)^0,c
  6432  004DF0  5030               	movf	??___flge^0,w,c
  6433  004DF2  1031               	iorwf	(??___flge+1)^0,w,c
  6434  004DF4  1032               	iorwf	(??___flge+2)^0,w,c
  6435  004DF6  1033               	iorwf	(??___flge+3)^0,w,c
  6436  004DF8  A4D8               	btfss	status,2,c
  6437  004DFA  EF01  F027         	goto	u5891
  6438  004DFE  EF03  F027         	goto	u5890
  6439  004E02                     u5891:
  6440  004E02  EF0B  F027         	goto	l5944
  6441  004E06                     u5890:
  6442  004E06  0E00               	movlw	0
  6443  004E08  6E28               	movwf	___flge@ff1^0,c
  6444  004E0A  0E00               	movlw	0
  6445  004E0C  6E29               	movwf	(___flge@ff1+1)^0,c
  6446  004E0E  0E00               	movlw	0
  6447  004E10  6E2A               	movwf	(___flge@ff1+2)^0,c
  6448  004E12  0E00               	movlw	0
  6449  004E14  6E2B               	movwf	(___flge@ff1+3)^0,c
  6450  004E16                     l5944:
  6451  004E16  0E00               	movlw	0
  6452  004E18  142C               	andwf	___flge@ff2^0,w,c
  6453  004E1A  6E30               	movwf	??___flge^0,c
  6454  004E1C  0E00               	movlw	0
  6455  004E1E  142D               	andwf	(___flge@ff2+1)^0,w,c
  6456  004E20  6E31               	movwf	(??___flge+1)^0,c
  6457  004E22  0E80               	movlw	128
  6458  004E24  142E               	andwf	(___flge@ff2+2)^0,w,c
  6459  004E26  6E32               	movwf	(??___flge+2)^0,c
  6460  004E28  0E7F               	movlw	127
  6461  004E2A  142F               	andwf	(___flge@ff2+3)^0,w,c
  6462  004E2C  6E33               	movwf	(??___flge+3)^0,c
  6463  004E2E  5030               	movf	??___flge^0,w,c
  6464  004E30  1031               	iorwf	(??___flge+1)^0,w,c
  6465  004E32  1032               	iorwf	(??___flge+2)^0,w,c
  6466  004E34  1033               	iorwf	(??___flge+3)^0,w,c
  6467  004E36  A4D8               	btfss	status,2,c
  6468  004E38  EF20  F027         	goto	u5901
  6469  004E3C  EF22  F027         	goto	u5900
  6470  004E40                     u5901:
  6471  004E40  EF2A  F027         	goto	l5948
  6472  004E44                     u5900:
  6473  004E44  0E00               	movlw	0
  6474  004E46  6E2C               	movwf	___flge@ff2^0,c
  6475  004E48  0E00               	movlw	0
  6476  004E4A  6E2D               	movwf	(___flge@ff2+1)^0,c
  6477  004E4C  0E00               	movlw	0
  6478  004E4E  6E2E               	movwf	(___flge@ff2+2)^0,c
  6479  004E50  0E00               	movlw	0
  6480  004E52  6E2F               	movwf	(___flge@ff2+3)^0,c
  6481  004E54                     l5948:
  6482  004E54  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6483  004E56  EF2F  F027         	goto	u5911
  6484  004E5A  EF31  F027         	goto	u5910
  6485  004E5E                     u5911:
  6486  004E5E  EF3A  F027         	goto	l5952
  6487  004E62                     u5910:
  6488  004E62  6C28               	negf	___flge@ff1^0,c
  6489  004E64  1E29               	comf	(___flge@ff1+1)^0,f,c
  6490  004E66  B0D8               	btfsc	status,0,c
  6491  004E68  2A29               	incf	(___flge@ff1+1)^0,f,c
  6492  004E6A  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6493  004E6C  B0D8               	btfsc	status,0,c
  6494  004E6E  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6495  004E70  0E80               	movlw	128
  6496  004E72  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6497  004E74                     l5952:
  6498  004E74  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6499  004E76  EF3F  F027         	goto	u5921
  6500  004E7A  EF41  F027         	goto	u5920
  6501  004E7E                     u5921:
  6502  004E7E  EF4A  F027         	goto	l1228
  6503  004E82                     u5920:
  6504  004E82  6C2C               	negf	___flge@ff2^0,c
  6505  004E84  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6506  004E86  B0D8               	btfsc	status,0,c
  6507  004E88  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6508  004E8A  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6509  004E8C  B0D8               	btfsc	status,0,c
  6510  004E8E  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6511  004E90  0E80               	movlw	128
  6512  004E92  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6513  004E94                     l1228:
  6514  004E94  0E00               	movlw	0
  6515  004E96  1A28               	xorwf	___flge@ff1^0,f,c
  6516  004E98  0E00               	movlw	0
  6517  004E9A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6518  004E9C  0E00               	movlw	0
  6519  004E9E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6520  004EA0  0E80               	movlw	128
  6521  004EA2  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6522  004EA4  0E00               	movlw	0
  6523  004EA6  1A2C               	xorwf	___flge@ff2^0,f,c
  6524  004EA8  0E00               	movlw	0
  6525  004EAA  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6526  004EAC  0E00               	movlw	0
  6527  004EAE  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6528  004EB0  0E80               	movlw	128
  6529  004EB2  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6530  004EB4  502C               	movf	___flge@ff2^0,w,c
  6531  004EB6  5C28               	subwf	___flge@ff1^0,w,c
  6532  004EB8  502D               	movf	(___flge@ff2+1)^0,w,c
  6533  004EBA  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6534  004EBC  502E               	movf	(___flge@ff2+2)^0,w,c
  6535  004EBE  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6536  004EC0  502F               	movf	(___flge@ff2+3)^0,w,c
  6537  004EC2  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6538  004EC4  B0D8               	btfsc	status,0,c
  6539  004EC6  EF67  F027         	goto	u5931
  6540  004ECA  EF69  F027         	goto	u5930
  6541  004ECE                     u5931:
  6542  004ECE  EF6C  F027         	goto	l5958
  6543  004ED2                     u5930:
  6544  004ED2  90D8               	bcf	status,0,c
  6545  004ED4  EF6D  F027         	goto	l1233
  6546  004ED8                     l5958:
  6547  004ED8  80D8               	bsf	status,0,c
  6548  004EDA                     l1233:
  6549  004EDA  0012               	return		;funcret
  6550  004EDC                     __end_of___flge:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function ___fleq *****************
  6554 ;; Defined at:
  6555 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  ff1             4    0[COMRAM] long 
  6558 ;;  ff2             4    4[COMRAM] long 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6570 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;Total ram usage:       12 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_efgtoa
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text17
  6584  005556                     __ptext17:
  6585                           	callstack 0
  6586  005556                     ___fleq:
  6587                           	callstack 26
  6588  005556  0E00               	movlw	0
  6589  005558  1401               	andwf	___fleq@ff1^0,w,c
  6590  00555A  6E09               	movwf	??___fleq^0,c
  6591  00555C  0E00               	movlw	0
  6592  00555E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6593  005560  6E0A               	movwf	(??___fleq+1)^0,c
  6594  005562  0E80               	movlw	128
  6595  005564  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6596  005566  6E0B               	movwf	(??___fleq+2)^0,c
  6597  005568  0E7F               	movlw	127
  6598  00556A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6599  00556C  6E0C               	movwf	(??___fleq+3)^0,c
  6600  00556E  5009               	movf	??___fleq^0,w,c
  6601  005570  100A               	iorwf	(??___fleq+1)^0,w,c
  6602  005572  100B               	iorwf	(??___fleq+2)^0,w,c
  6603  005574  100C               	iorwf	(??___fleq+3)^0,w,c
  6604  005576  A4D8               	btfss	status,2,c
  6605  005578  EFC0  F02A         	goto	u5861
  6606  00557C  EFC2  F02A         	goto	u5860
  6607  005580                     u5861:
  6608  005580  EFCA  F02A         	goto	l5928
  6609  005584                     u5860:
  6610  005584  0E00               	movlw	0
  6611  005586  6E01               	movwf	___fleq@ff1^0,c
  6612  005588  0E00               	movlw	0
  6613  00558A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6614  00558C  0E00               	movlw	0
  6615  00558E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6616  005590  0E00               	movlw	0
  6617  005592  6E04               	movwf	(___fleq@ff1+3)^0,c
  6618  005594                     l5928:
  6619  005594  0E00               	movlw	0
  6620  005596  1405               	andwf	___fleq@ff2^0,w,c
  6621  005598  6E09               	movwf	??___fleq^0,c
  6622  00559A  0E00               	movlw	0
  6623  00559C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6624  00559E  6E0A               	movwf	(??___fleq+1)^0,c
  6625  0055A0  0E80               	movlw	128
  6626  0055A2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6627  0055A4  6E0B               	movwf	(??___fleq+2)^0,c
  6628  0055A6  0E7F               	movlw	127
  6629  0055A8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6630  0055AA  6E0C               	movwf	(??___fleq+3)^0,c
  6631  0055AC  5009               	movf	??___fleq^0,w,c
  6632  0055AE  100A               	iorwf	(??___fleq+1)^0,w,c
  6633  0055B0  100B               	iorwf	(??___fleq+2)^0,w,c
  6634  0055B2  100C               	iorwf	(??___fleq+3)^0,w,c
  6635  0055B4  A4D8               	btfss	status,2,c
  6636  0055B6  EFDF  F02A         	goto	u5871
  6637  0055BA  EFE1  F02A         	goto	u5870
  6638  0055BE                     u5871:
  6639  0055BE  EFE9  F02A         	goto	l5932
  6640  0055C2                     u5870:
  6641  0055C2  0E00               	movlw	0
  6642  0055C4  6E05               	movwf	___fleq@ff2^0,c
  6643  0055C6  0E00               	movlw	0
  6644  0055C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6645  0055CA  0E00               	movlw	0
  6646  0055CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6647  0055CE  0E00               	movlw	0
  6648  0055D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  6649  0055D2                     l5932:
  6650  0055D2  5005               	movf	___fleq@ff2^0,w,c
  6651  0055D4  1801               	xorwf	___fleq@ff1^0,w,c
  6652  0055D6  E10F               	bnz	u5880
  6653  0055D8  5006               	movf	(___fleq@ff2+1)^0,w,c
  6654  0055DA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6655  0055DC  E10C               	bnz	u5880
  6656  0055DE  5007               	movf	(___fleq@ff2+2)^0,w,c
  6657  0055E0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6658  0055E2  E109               	bnz	u5880
  6659  0055E4  5008               	movf	(___fleq@ff2+3)^0,w,c
  6660  0055E6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6661  0055E8  B4D8               	btfsc	status,2,c
  6662  0055EA  EFF9  F02A         	goto	u5881
  6663  0055EE  EFFB  F02A         	goto	u5880
  6664  0055F2                     u5881:
  6665  0055F2  EFFE  F02A         	goto	l5936
  6666  0055F6                     u5880:
  6667  0055F6  90D8               	bcf	status,0,c
  6668  0055F8  EFFF  F02A         	goto	l1222
  6669  0055FC                     l5936:
  6670  0055FC  80D8               	bsf	status,0,c
  6671  0055FE                     l1222:
  6672  0055FE  0012               	return		;funcret
  6673  005600                     __end_of___fleq:
  6674                           	callstack 0
  6675                           
  6676 ;; *************** function ___awmod *****************
  6677 ;; Defined at:
  6678 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  dividend        2    0[COMRAM] int 
  6681 ;;  divisor         2    2[COMRAM] int 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  sign            1    5[COMRAM] unsigned char 
  6684 ;;  counter         1    4[COMRAM] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2    0[COMRAM] int 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;Total ram usage:        6 bytes
  6699 ;; Hardware stack levels used: 1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_efgtoa
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text18
  6708  0054A6                     __ptext18:
  6709                           	callstack 0
  6710  0054A6                     ___awmod:
  6711                           	callstack 26
  6712  0054A6  0E00               	movlw	0
  6713  0054A8  6E06               	movwf	___awmod@sign^0,c
  6714  0054AA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6715  0054AC  EF5C  F02A         	goto	u5800
  6716  0054B0  EF5A  F02A         	goto	u5801
  6717  0054B4                     u5801:
  6718  0054B4  EF62  F02A         	goto	l5896
  6719  0054B8                     u5800:
  6720  0054B8  6C01               	negf	___awmod@dividend^0,c
  6721  0054BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6722  0054BC  B0D8               	btfsc	status,0,c
  6723  0054BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6724  0054C0  0E01               	movlw	1
  6725  0054C2  6E06               	movwf	___awmod@sign^0,c
  6726  0054C4                     l5896:
  6727  0054C4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6728  0054C6  EF69  F02A         	goto	u5810
  6729  0054CA  EF67  F02A         	goto	u5811
  6730  0054CE                     u5811:
  6731  0054CE  EF6D  F02A         	goto	l5900
  6732  0054D2                     u5810:
  6733  0054D2  6C03               	negf	___awmod@divisor^0,c
  6734  0054D4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6735  0054D6  B0D8               	btfsc	status,0,c
  6736  0054D8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6737  0054DA                     l5900:
  6738  0054DA  5003               	movf	___awmod@divisor^0,w,c
  6739  0054DC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6740  0054DE  B4D8               	btfsc	status,2,c
  6741  0054E0  EF74  F02A         	goto	u5821
  6742  0054E4  EF76  F02A         	goto	u5820
  6743  0054E8                     u5821:
  6744  0054E8  EF9A  F02A         	goto	l5916
  6745  0054EC                     u5820:
  6746  0054EC  0E01               	movlw	1
  6747  0054EE  6E05               	movwf	___awmod@counter^0,c
  6748  0054F0  EF7E  F02A         	goto	l5906
  6749  0054F4                     l5904:
  6750  0054F4  90D8               	bcf	status,0,c
  6751  0054F6  3603               	rlcf	___awmod@divisor^0,f,c
  6752  0054F8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6753  0054FA  2A05               	incf	___awmod@counter^0,f,c
  6754  0054FC                     l5906:
  6755  0054FC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6756  0054FE  EF83  F02A         	goto	u5831
  6757  005502  EF85  F02A         	goto	u5830
  6758  005506                     u5831:
  6759  005506  EF7A  F02A         	goto	l5904
  6760  00550A                     u5830:
  6761  00550A                     l5908:
  6762  00550A  5003               	movf	___awmod@divisor^0,w,c
  6763  00550C  5C01               	subwf	___awmod@dividend^0,w,c
  6764  00550E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6765  005510  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6766  005512  A0D8               	btfss	status,0,c
  6767  005514  EF8E  F02A         	goto	u5841
  6768  005518  EF90  F02A         	goto	u5840
  6769  00551C                     u5841:
  6770  00551C  EF94  F02A         	goto	l5912
  6771  005520                     u5840:
  6772  005520  5003               	movf	___awmod@divisor^0,w,c
  6773  005522  5E01               	subwf	___awmod@dividend^0,f,c
  6774  005524  5004               	movf	(___awmod@divisor+1)^0,w,c
  6775  005526  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6776  005528                     l5912:
  6777  005528  90D8               	bcf	status,0,c
  6778  00552A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6779  00552C  3203               	rrcf	___awmod@divisor^0,f,c
  6780  00552E  2E05               	decfsz	___awmod@counter^0,f,c
  6781  005530  EF85  F02A         	goto	l5908
  6782  005534                     l5916:
  6783  005534  5006               	movf	___awmod@sign^0,w,c
  6784  005536  B4D8               	btfsc	status,2,c
  6785  005538  EFA0  F02A         	goto	u5851
  6786  00553C  EFA2  F02A         	goto	u5850
  6787  005540                     u5851:
  6788  005540  EFA6  F02A         	goto	l5920
  6789  005544                     u5850:
  6790  005544  6C01               	negf	___awmod@dividend^0,c
  6791  005546  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6792  005548  B0D8               	btfsc	status,0,c
  6793  00554A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6794  00554C                     l5920:
  6795  00554C  C001  F001         	movff	___awmod@dividend,?___awmod
  6796  005550  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6797  005554  0012               	return		;funcret
  6798  005556                     __end_of___awmod:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function ___awdiv *****************
  6802 ;; Defined at:
  6803 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  dividend        2    0[COMRAM] int 
  6806 ;;  divisor         2    2[COMRAM] int 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  quotient        2    6[COMRAM] int 
  6809 ;;  sign            1    5[COMRAM] unsigned char 
  6810 ;;  counter         1    4[COMRAM] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  2    0[COMRAM] int 
  6813 ;; Registers used:
  6814 ;;		wreg, status,2, status,0
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        8 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_efgtoa
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text19
  6834  00532A                     __ptext19:
  6835                           	callstack 0
  6836  00532A                     ___awdiv:
  6837                           	callstack 26
  6838  00532A  0E00               	movlw	0
  6839  00532C  6E06               	movwf	___awdiv@sign^0,c
  6840  00532E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6841  005330  EF9E  F029         	goto	u5740
  6842  005334  EF9C  F029         	goto	u5741
  6843  005338                     u5741:
  6844  005338  EFA4  F029         	goto	l5852
  6845  00533C                     u5740:
  6846  00533C  6C03               	negf	___awdiv@divisor^0,c
  6847  00533E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6848  005340  B0D8               	btfsc	status,0,c
  6849  005342  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6850  005344  0E01               	movlw	1
  6851  005346  6E06               	movwf	___awdiv@sign^0,c
  6852  005348                     l5852:
  6853  005348  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6854  00534A  EFAB  F029         	goto	u5750
  6855  00534E  EFA9  F029         	goto	u5751
  6856  005352                     u5751:
  6857  005352  EFB1  F029         	goto	l5858
  6858  005356                     u5750:
  6859  005356  6C01               	negf	___awdiv@dividend^0,c
  6860  005358  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6861  00535A  B0D8               	btfsc	status,0,c
  6862  00535C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6863  00535E  0E01               	movlw	1
  6864  005360  1A06               	xorwf	___awdiv@sign^0,f,c
  6865  005362                     l5858:
  6866  005362  0E00               	movlw	0
  6867  005364  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6868  005366  0E00               	movlw	0
  6869  005368  6E07               	movwf	___awdiv@quotient^0,c
  6870  00536A  5003               	movf	___awdiv@divisor^0,w,c
  6871  00536C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6872  00536E  B4D8               	btfsc	status,2,c
  6873  005370  EFBC  F029         	goto	u5761
  6874  005374  EFBE  F029         	goto	u5760
  6875  005378                     u5761:
  6876  005378  EFE6  F029         	goto	l5880
  6877  00537C                     u5760:
  6878  00537C  0E01               	movlw	1
  6879  00537E  6E05               	movwf	___awdiv@counter^0,c
  6880  005380  EFC6  F029         	goto	l5866
  6881  005384                     l5864:
  6882  005384  90D8               	bcf	status,0,c
  6883  005386  3603               	rlcf	___awdiv@divisor^0,f,c
  6884  005388  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6885  00538A  2A05               	incf	___awdiv@counter^0,f,c
  6886  00538C                     l5866:
  6887  00538C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6888  00538E  EFCB  F029         	goto	u5771
  6889  005392  EFCD  F029         	goto	u5770
  6890  005396                     u5771:
  6891  005396  EFC2  F029         	goto	l5864
  6892  00539A                     u5770:
  6893  00539A                     l5868:
  6894  00539A  90D8               	bcf	status,0,c
  6895  00539C  3607               	rlcf	___awdiv@quotient^0,f,c
  6896  00539E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6897  0053A0  5003               	movf	___awdiv@divisor^0,w,c
  6898  0053A2  5C01               	subwf	___awdiv@dividend^0,w,c
  6899  0053A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6900  0053A6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6901  0053A8  A0D8               	btfss	status,0,c
  6902  0053AA  EFD9  F029         	goto	u5781
  6903  0053AE  EFDB  F029         	goto	u5780
  6904  0053B2                     u5781:
  6905  0053B2  EFE0  F029         	goto	l5876
  6906  0053B6                     u5780:
  6907  0053B6  5003               	movf	___awdiv@divisor^0,w,c
  6908  0053B8  5E01               	subwf	___awdiv@dividend^0,f,c
  6909  0053BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6910  0053BC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6911  0053BE  8007               	bsf	___awdiv@quotient^0,0,c
  6912  0053C0                     l5876:
  6913  0053C0  90D8               	bcf	status,0,c
  6914  0053C2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6915  0053C4  3203               	rrcf	___awdiv@divisor^0,f,c
  6916  0053C6  2E05               	decfsz	___awdiv@counter^0,f,c
  6917  0053C8  EFCD  F029         	goto	l5868
  6918  0053CC                     l5880:
  6919  0053CC  5006               	movf	___awdiv@sign^0,w,c
  6920  0053CE  B4D8               	btfsc	status,2,c
  6921  0053D0  EFEC  F029         	goto	u5791
  6922  0053D4  EFEE  F029         	goto	u5790
  6923  0053D8                     u5791:
  6924  0053D8  EFF2  F029         	goto	l5884
  6925  0053DC                     u5790:
  6926  0053DC  6C07               	negf	___awdiv@quotient^0,c
  6927  0053DE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6928  0053E0  B0D8               	btfsc	status,0,c
  6929  0053E2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6930  0053E4                     l5884:
  6931  0053E4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6932  0053E8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6933  0053EC  0012               	return		;funcret
  6934  0053EE                     __end_of___awdiv:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _dtoa *****************
  6938 ;; Defined at:
  6939 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6942 ;;		 -> sprintf@f(11), 
  6943 ;;  d               8   29[COMRAM] long long 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  n               8   53[COMRAM] long long 
  6946 ;;  i               2   61[COMRAM] int 
  6947 ;;  s               2   51[COMRAM] int 
  6948 ;;  w               2   49[COMRAM] int 
  6949 ;;  p               2   47[COMRAM] int 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  2   27[COMRAM] int 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6959 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;Total ram usage:       36 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 4
  6966 ;; This function calls:
  6967 ;;		___aodiv
  6968 ;;		___aomod
  6969 ;;		_abs
  6970 ;;		_pad
  6971 ;; This function is called by:
  6972 ;;		_vfpfcnvrt
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text20
  6977  0036C0                     __ptext20:
  6978                           	callstack 0
  6979  0036C0                     _dtoa:
  6980                           	callstack 23
  6981  0036C0                     
  6982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6983  0036C0  C01E  F036         	movff	dtoa@d,dtoa@n
  6984  0036C4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6985  0036C8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6986  0036CC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6987  0036D0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6988  0036D4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6989  0036D8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6990  0036DC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6991  0036E0                     
  6992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6993  0036E0  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6994  0036E2  EF75  F01B         	goto	u6371
  6995  0036E6  EF78  F01B         	goto	u6370
  6996  0036EA                     u6371:
  6997  0036EA  0E01               	movlw	1
  6998  0036EC  EF79  F01B         	goto	u6380
  6999  0036F0                     u6370:
  7000  0036F0  0E00               	movlw	0
  7001  0036F2                     u6380:
  7002  0036F2  6E34               	movwf	dtoa@s^0,c
  7003  0036F4  6A35               	clrf	(dtoa@s+1)^0,c
  7004                           
  7005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7006  0036F6  5034               	movf	dtoa@s^0,w,c
  7007  0036F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  7008  0036FA  B4D8               	btfsc	status,2,c
  7009  0036FC  EF82  F01B         	goto	u6391
  7010  003700  EF84  F01B         	goto	u6390
  7011  003704                     u6391:
  7012  003704  EF94  F01B         	goto	l6174
  7013  003708                     u6390:
  7014  003708                     
  7015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7016  003708  1E3D               	comf	(dtoa@n+7)^0,f,c
  7017  00370A  1E3C               	comf	(dtoa@n+6)^0,f,c
  7018  00370C  1E3B               	comf	(dtoa@n+5)^0,f,c
  7019  00370E  1E3A               	comf	(dtoa@n+4)^0,f,c
  7020  003710  1E39               	comf	(dtoa@n+3)^0,f,c
  7021  003712  1E38               	comf	(dtoa@n+2)^0,f,c
  7022  003714  1E37               	comf	(dtoa@n+1)^0,f,c
  7023  003716  6C36               	negf	dtoa@n^0,c
  7024  003718  0E00               	movlw	0
  7025  00371A  2237               	addwfc	(dtoa@n+1)^0,f,c
  7026  00371C  2238               	addwfc	(dtoa@n+2)^0,f,c
  7027  00371E  2239               	addwfc	(dtoa@n+3)^0,f,c
  7028  003720  223A               	addwfc	(dtoa@n+4)^0,f,c
  7029  003722  223B               	addwfc	(dtoa@n+5)^0,f,c
  7030  003724  223C               	addwfc	(dtoa@n+6)^0,f,c
  7031  003726  223D               	addwfc	(dtoa@n+7)^0,f,c
  7032  003728                     l6174:
  7033                           
  7034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7035  003728  0100               	movlb	0	; () banked
  7036  00372A  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  7037  00372C  EF9A  F01B         	goto	u6401
  7038  003730  EF9C  F01B         	goto	u6400
  7039  003734                     u6401:
  7040  003734  EF9D  F01B         	goto	l6178
  7041  003738                     u6400:
  7042  003738                     
  7043                           ; BSR set to: 0
  7044                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7045  003738  93EF               	bcf	_flags& (0+255),1,b
  7046  00373A                     l6178:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7050  00373A  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  7051  00373C  EFAA  F01B         	goto	u6410
  7052  003740  51EE               	movf	(_prec+1)& (0+255),w,b
  7053  003742  E106               	bnz	u6411
  7054  003744  05ED               	decf	_prec& (0+255),w,b
  7055  003746  B0D8               	btfsc	status,0,c
  7056  003748  EFA8  F01B         	goto	u6411
  7057  00374C  EFAA  F01B         	goto	u6410
  7058  003750                     u6411:
  7059  003750  EFB0  F01B         	goto	l1701
  7060  003754                     u6410:
  7061  003754                     
  7062                           ; BSR set to: 0
  7063  003754  0E00               	movlw	0
  7064  003756  6E31               	movwf	(dtoa@p+1)^0,c
  7065  003758  0E01               	movlw	1
  7066  00375A  6E30               	movwf	dtoa@p^0,c
  7067  00375C  EFB4  F01B         	goto	l1703
  7068  003760                     l1701:
  7069                           
  7070                           ; BSR set to: 0
  7071  003760  C0ED  F030         	movff	_prec,dtoa@p
  7072  003764  C0EE  F031         	movff	_prec+1,dtoa@p+1
  7073  003768                     l1703:
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7077  003768  C0EB  F032         	movff	_width,dtoa@w
  7078  00376C  C0EC  F033         	movff	_width+1,dtoa@w+1
  7079  003770                     
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7082  003770  5034               	movf	dtoa@s^0,w,c
  7083  003772  1035               	iorwf	(dtoa@s+1)^0,w,c
  7084  003774  A4D8               	btfss	status,2,c
  7085  003776  EFBF  F01B         	goto	u6421
  7086  00377A  EFC1  F01B         	goto	u6420
  7087  00377E                     u6421:
  7088  00377E  EFC8  F01B         	goto	l6186
  7089  003782                     u6420:
  7090  003782                     
  7091                           ; BSR set to: 0
  7092  003782  A5EF               	btfss	_flags& (0+255),2,b
  7093  003784  EFC6  F01B         	goto	u6431
  7094  003788  EFC8  F01B         	goto	u6430
  7095  00378C                     u6431:
  7096  00378C  EFCB  F01B         	goto	l6188
  7097  003790                     u6430:
  7098  003790                     l6186:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  7102  003790  0632               	decf	dtoa@w^0,f,c
  7103  003792  A0D8               	btfss	status,0,c
  7104  003794  0633               	decf	(dtoa@w+1)^0,f,c
  7105  003796                     l6188:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7109  003796  0E00               	movlw	0
  7110  003798  6E3F               	movwf	(dtoa@i+1)^0,c
  7111  00379A  0E4F               	movlw	79
  7112  00379C  6E3E               	movwf	dtoa@i^0,c
  7113  00379E                     
  7114                           ; BSR set to: 0
  7115                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7116  00379E  0E00               	movlw	0
  7117  0037A0  0101               	movlb	1	; () banked
  7118  0037A2  6F76               	movwf	(_dbuf+79)& (0+255),b
  7119                           
  7120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7121  0037A4  EF50  F01C         	goto	l6202
  7122  0037A8                     l6192:
  7123                           
  7124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  7125  0037A8  063E               	decf	dtoa@i^0,f,c
  7126  0037AA  A0D8               	btfss	status,0,c
  7127  0037AC  063F               	decf	(dtoa@i+1)^0,f,c
  7128  0037AE                     
  7129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7130  0037AE  0E27               	movlw	low _dbuf
  7131  0037B0  243E               	addwf	dtoa@i^0,w,c
  7132  0037B2  6ED9               	movwf	fsr2l,c
  7133  0037B4  0E01               	movlw	high _dbuf
  7134  0037B6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7135  0037B8  6EDA               	movwf	fsr2h,c
  7136  0037BA  C036  F001         	movff	dtoa@n,___aomod@dividend
  7137  0037BE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7138  0037C2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7139  0037C6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7140  0037CA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7141  0037CE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7142  0037D2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7143  0037D6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7144  0037DA  0E0A               	movlw	10
  7145  0037DC  6E09               	movwf	___aomod@divisor^0,c
  7146  0037DE  0E00               	movlw	0
  7147  0037E0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7148  0037E2  0E00               	movlw	0
  7149  0037E4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7150  0037E6  0E00               	movlw	0
  7151  0037E8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7152  0037EA  0E00               	movlw	0
  7153  0037EC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7154  0037EE  0E00               	movlw	0
  7155  0037F0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7156  0037F2  0E00               	movlw	0
  7157  0037F4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7158  0037F6  0E00               	movlw	0
  7159  0037F8  6E10               	movwf	(___aomod@divisor+7)^0,c
  7160  0037FA  EC29  F022         	call	___aomod	;wreg free
  7161  0037FE  C001  F026         	movff	?___aomod,??_dtoa
  7162  003802  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7163  003806  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7164  00380A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7165  00380E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7166  003812  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7167  003816  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7168  00381A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7169  00381E  C026  F013         	movff	??_dtoa,abs@a
  7170  003822  C028  F014         	movff	??_dtoa+2,abs@a+1
  7171  003826  EC35  F02F         	call	_abs	;wreg free
  7172  00382A  5013               	movf	?_abs^0,w,c
  7173  00382C  0F30               	addlw	48
  7174  00382E  6EDF               	movwf	indf2,c
  7175  003830                     
  7176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7177  003830  0630               	decf	dtoa@p^0,f,c
  7178  003832  A0D8               	btfss	status,0,c
  7179  003834  0631               	decf	(dtoa@p+1)^0,f,c
  7180  003836                     
  7181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7182  003836  0632               	decf	dtoa@w^0,f,c
  7183  003838  A0D8               	btfss	status,0,c
  7184  00383A  0633               	decf	(dtoa@w+1)^0,f,c
  7185  00383C                     
  7186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7187  00383C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7188  003840  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7189  003844  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7190  003848  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7191  00384C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7192  003850  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7193  003854  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7194  003858  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7195  00385C  0E0A               	movlw	10
  7196  00385E  6E09               	movwf	___aodiv@divisor^0,c
  7197  003860  0E00               	movlw	0
  7198  003862  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7199  003864  0E00               	movlw	0
  7200  003866  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7201  003868  0E00               	movlw	0
  7202  00386A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7203  00386C  0E00               	movlw	0
  7204  00386E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7205  003870  0E00               	movlw	0
  7206  003872  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7207  003874  0E00               	movlw	0
  7208  003876  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7209  003878  0E00               	movlw	0
  7210  00387A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7211  00387C  ECAA  F020         	call	___aodiv	;wreg free
  7212  003880  C001  F036         	movff	?___aodiv,dtoa@n
  7213  003884  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7214  003888  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7215  00388C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7216  003890  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7217  003894  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7218  003898  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7219  00389C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7220  0038A0                     l6202:
  7221                           
  7222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7223  0038A0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7224  0038A2  EF5B  F01C         	goto	u6441
  7225  0038A6  503F               	movf	(dtoa@i+1)^0,w,c
  7226  0038A8  E108               	bnz	u6440
  7227  0038AA  043E               	decf	dtoa@i^0,w,c
  7228  0038AC  A0D8               	btfss	status,0,c
  7229  0038AE  EF5B  F01C         	goto	u6441
  7230  0038B2  EF5D  F01C         	goto	u6440
  7231  0038B6                     u6441:
  7232  0038B6  EF8E  F01C         	goto	l6212
  7233  0038BA                     u6440:
  7234  0038BA  5036               	movf	dtoa@n^0,w,c
  7235  0038BC  1037               	iorwf	(dtoa@n+1)^0,w,c
  7236  0038BE  1038               	iorwf	(dtoa@n+2)^0,w,c
  7237  0038C0  1039               	iorwf	(dtoa@n+3)^0,w,c
  7238  0038C2  103A               	iorwf	(dtoa@n+4)^0,w,c
  7239  0038C4  103B               	iorwf	(dtoa@n+5)^0,w,c
  7240  0038C6  103C               	iorwf	(dtoa@n+6)^0,w,c
  7241  0038C8  103D               	iorwf	(dtoa@n+7)^0,w,c
  7242  0038CA  A4D8               	btfss	status,2,c
  7243  0038CC  EF6A  F01C         	goto	u6451
  7244  0038D0  EF6C  F01C         	goto	u6450
  7245  0038D4                     u6451:
  7246  0038D4  EFD4  F01B         	goto	l6192
  7247  0038D8                     u6450:
  7248  0038D8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7249  0038DA  EF79  F01C         	goto	u6460
  7250  0038DE  5031               	movf	(dtoa@p+1)^0,w,c
  7251  0038E0  E106               	bnz	u6461
  7252  0038E2  0430               	decf	dtoa@p^0,w,c
  7253  0038E4  B0D8               	btfsc	status,0,c
  7254  0038E6  EF77  F01C         	goto	u6461
  7255  0038EA  EF79  F01C         	goto	u6460
  7256  0038EE                     u6461:
  7257  0038EE  EFD4  F01B         	goto	l6192
  7258  0038F2                     u6460:
  7259  0038F2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7260  0038F4  EF84  F01C         	goto	u6471
  7261  0038F8  5033               	movf	(dtoa@w+1)^0,w,c
  7262  0038FA  E108               	bnz	u6470
  7263  0038FC  0432               	decf	dtoa@w^0,w,c
  7264  0038FE  A0D8               	btfss	status,0,c
  7265  003900  EF84  F01C         	goto	u6471
  7266  003904  EF86  F01C         	goto	u6470
  7267  003908                     u6471:
  7268  003908  EF8E  F01C         	goto	l6212
  7269  00390C                     u6470:
  7270  00390C  0100               	movlb	0	; () banked
  7271  00390E  B3EF               	btfsc	_flags& (0+255),1,b
  7272  003910  EF8C  F01C         	goto	u6481
  7273  003914  EF8E  F01C         	goto	u6480
  7274  003918                     u6481:
  7275  003918  EFD4  F01B         	goto	l6192
  7276  00391C                     u6480:
  7277  00391C                     l6212:
  7278                           
  7279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7280  00391C  5034               	movf	dtoa@s^0,w,c
  7281  00391E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7282  003920  A4D8               	btfss	status,2,c
  7283  003922  EF95  F01C         	goto	u6491
  7284  003926  EF97  F01C         	goto	u6490
  7285  00392A                     u6491:
  7286  00392A  EF9F  F01C         	goto	l6216
  7287  00392E                     u6490:
  7288  00392E  0100               	movlb	0	; () banked
  7289  003930  A5EF               	btfss	_flags& (0+255),2,b
  7290  003932  EF9D  F01C         	goto	u6501
  7291  003936  EF9F  F01C         	goto	u6500
  7292  00393A                     u6501:
  7293  00393A  EFBD  F01C         	goto	l6226
  7294  00393E                     u6500:
  7295  00393E                     l6216:
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7298  00393E  063E               	decf	dtoa@i^0,f,c
  7299  003940  A0D8               	btfss	status,0,c
  7300  003942  063F               	decf	(dtoa@i+1)^0,f,c
  7301  003944                     
  7302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7303  003944  5034               	movf	dtoa@s^0,w,c
  7304  003946  1035               	iorwf	(dtoa@s+1)^0,w,c
  7305  003948  A4D8               	btfss	status,2,c
  7306  00394A  EFA9  F01C         	goto	u6511
  7307  00394E  EFAB  F01C         	goto	u6510
  7308  003952                     u6511:
  7309  003952  EFB1  F01C         	goto	l6222
  7310  003956                     u6510:
  7311  003956  0E00               	movlw	0
  7312  003958  6E2F               	movwf	(_dtoa$2514+1)^0,c
  7313  00395A  0E2B               	movlw	43
  7314  00395C  6E2E               	movwf	_dtoa$2514^0,c
  7315  00395E  EFB5  F01C         	goto	l6224
  7316  003962                     l6222:
  7317  003962  0E00               	movlw	0
  7318  003964  6E2F               	movwf	(_dtoa$2514+1)^0,c
  7319  003966  0E2D               	movlw	45
  7320  003968  6E2E               	movwf	_dtoa$2514^0,c
  7321  00396A                     l6224:
  7322  00396A  0E27               	movlw	low _dbuf
  7323  00396C  243E               	addwf	dtoa@i^0,w,c
  7324  00396E  6ED9               	movwf	fsr2l,c
  7325  003970  0E01               	movlw	high _dbuf
  7326  003972  203F               	addwfc	(dtoa@i+1)^0,w,c
  7327  003974  6EDA               	movwf	fsr2h,c
  7328  003976  C02E  FFDF         	movff	_dtoa$2514,indf2
  7329  00397A                     l6226:
  7330                           
  7331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7332  00397A  C01C  F011         	movff	dtoa@fp,pad@fp
  7333  00397E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7334  003982  0E27               	movlw	low _dbuf
  7335  003984  243E               	addwf	dtoa@i^0,w,c
  7336  003986  6E13               	movwf	pad@buf^0,c
  7337  003988  0E01               	movlw	high _dbuf
  7338  00398A  203F               	addwfc	(dtoa@i+1)^0,w,c
  7339  00398C  6E14               	movwf	(pad@buf+1)^0,c
  7340  00398E  C032  F015         	movff	dtoa@w,pad@p
  7341  003992  C033  F016         	movff	dtoa@w+1,pad@p+1
  7342  003996  EC32  F029         	call	_pad	;wreg free
  7343  00399A  C011  F01C         	movff	?_pad,?_dtoa
  7344  00399E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7345  0039A2  0012               	return		;funcret
  7346  0039A4                     __end_of_dtoa:
  7347                           	callstack 0
  7348                           
  7349 ;; *************** function _pad *****************
  7350 ;; Defined at:
  7351 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7354 ;;		 -> sprintf@f(11), 
  7355 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7356 ;;		 -> dbuf(80), 
  7357 ;;  p               2   20[COMRAM] int 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  w               2   25[COMRAM] int 
  7360 ;;  i               2   23[COMRAM] int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2   16[COMRAM] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;Total ram usage:       11 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 3
  7377 ;; This function calls:
  7378 ;;		_fputc
  7379 ;;		_fputs
  7380 ;;		_strlen
  7381 ;; This function is called by:
  7382 ;;		_dtoa
  7383 ;;		_efgtoa
  7384 ;;		_utoa
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text21
  7389  005264                     __ptext21:
  7390                           	callstack 0
  7391  005264                     _pad:
  7392                           	callstack 23
  7393  005264                     
  7394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7395  005264  0100               	movlb	0	; () banked
  7396  005266  A1EF               	btfss	_flags& (0+255),0,b
  7397  005268  EF38  F029         	goto	u6091
  7398  00526C  EF3A  F029         	goto	u6090
  7399  005270                     u6091:
  7400  005270  EF44  F029         	goto	l6056
  7401  005274                     u6090:
  7402  005274                     
  7403                           ; BSR set to: 0
  7404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7405  005274  C013  F00A         	movff	pad@buf,fputs@s
  7406  005278  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7407  00527C  C011  F00C         	movff	pad@fp,fputs@fp
  7408  005280  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7409  005284  ECF1  F02E         	call	_fputs	;wreg free
  7410  005288                     l6056:
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7413  005288  BE16               	btfsc	(pad@p+1)^0,7,c
  7414  00528A  EF49  F029         	goto	u6101
  7415  00528E  EF4B  F029         	goto	u6100
  7416  005292                     u6101:
  7417  005292  EF51  F029         	goto	l6060
  7418  005296                     u6100:
  7419  005296  C015  F01A         	movff	pad@p,pad@w
  7420  00529A  C016  F01B         	movff	pad@p+1,pad@w+1
  7421  00529E  EF55  F029         	goto	l1690
  7422  0052A2                     l6060:
  7423  0052A2  0E00               	movlw	0
  7424  0052A4  6E1B               	movwf	(pad@w+1)^0,c
  7425  0052A6  0E00               	movlw	0
  7426  0052A8  6E1A               	movwf	pad@w^0,c
  7427  0052AA                     l1690:
  7428                           
  7429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7430  0052AA  0E00               	movlw	0
  7431  0052AC  6E19               	movwf	(pad@i+1)^0,c
  7432  0052AE  0E00               	movlw	0
  7433  0052B0  6E18               	movwf	pad@i^0,c
  7434                           
  7435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7436  0052B2  EF67  F029         	goto	l6066
  7437  0052B6                     l6062:
  7438                           
  7439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7440  0052B6  0E00               	movlw	0
  7441  0052B8  6E02               	movwf	(fputc@c+1)^0,c
  7442  0052BA  0E20               	movlw	32
  7443  0052BC  6E01               	movwf	fputc@c^0,c
  7444  0052BE  C011  F003         	movff	pad@fp,fputc@fp
  7445  0052C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7446  0052C6  ECCD  F028         	call	_fputc	;wreg free
  7447  0052CA                     
  7448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7449  0052CA  4A18               	infsnz	pad@i^0,f,c
  7450  0052CC  2A19               	incf	(pad@i+1)^0,f,c
  7451  0052CE                     l6066:
  7452                           
  7453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7454  0052CE  501A               	movf	pad@w^0,w,c
  7455  0052D0  5C18               	subwf	pad@i^0,w,c
  7456  0052D2  5019               	movf	(pad@i+1)^0,w,c
  7457  0052D4  0A80               	xorlw	128
  7458  0052D6  6E17               	movwf	??_pad^0,c
  7459  0052D8  501B               	movf	(pad@w+1)^0,w,c
  7460  0052DA  0A80               	xorlw	128
  7461  0052DC  5817               	subwfb	??_pad^0,w,c
  7462  0052DE  A0D8               	btfss	status,0,c
  7463  0052E0  EF74  F029         	goto	u6111
  7464  0052E4  EF76  F029         	goto	u6110
  7465  0052E8                     u6111:
  7466  0052E8  EF5B  F029         	goto	l6062
  7467  0052EC                     u6110:
  7468  0052EC                     
  7469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7470  0052EC  0100               	movlb	0	; () banked
  7471  0052EE  B1EF               	btfsc	_flags& (0+255),0,b
  7472  0052F0  EF7C  F029         	goto	u6121
  7473  0052F4  EF7E  F029         	goto	u6120
  7474  0052F8                     u6121:
  7475  0052F8  EF88  F029         	goto	l6070
  7476  0052FC                     u6120:
  7477  0052FC                     
  7478                           ; BSR set to: 0
  7479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7480  0052FC  C013  F00A         	movff	pad@buf,fputs@s
  7481  005300  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7482  005304  C011  F00C         	movff	pad@fp,fputs@fp
  7483  005308  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7484  00530C  ECF1  F02E         	call	_fputs	;wreg free
  7485  005310                     l6070:
  7486                           
  7487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7488  005310  C013  F001         	movff	pad@buf,strlen@s
  7489  005314  C014  F002         	movff	pad@buf+1,strlen@s+1
  7490  005318  ECE5  F02F         	call	_strlen	;wreg free
  7491  00531C  501A               	movf	pad@w^0,w,c
  7492  00531E  2401               	addwf	?_strlen^0,w,c
  7493  005320  6E11               	movwf	?_pad^0,c
  7494  005322  501B               	movf	(pad@w+1)^0,w,c
  7495  005324  2002               	addwfc	(?_strlen+1)^0,w,c
  7496  005326  6E12               	movwf	(?_pad+1)^0,c
  7497  005328  0012               	return		;funcret
  7498  00532A                     __end_of_pad:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _strlen *****************
  7502 ;; Defined at:
  7503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7506 ;;		 -> dbuf(80), arr(11), 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7509 ;;		 -> dbuf(80), arr(11), 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  2    0[COMRAM] unsigned int 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:        4 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;;		_pad
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text22
  7534  005FCA                     __ptext22:
  7535                           	callstack 0
  7536  005FCA                     _strlen:
  7537                           	callstack 30
  7538  005FCA  C001  F003         	movff	strlen@s,strlen@a
  7539  005FCE  C002  F004         	movff	strlen@s+1,strlen@a+1
  7540  005FD2  EFED  F02F         	goto	l5222
  7541  005FD6                     l5220:
  7542  005FD6  4A01               	infsnz	strlen@s^0,f,c
  7543  005FD8  2A02               	incf	(strlen@s+1)^0,f,c
  7544  005FDA                     l5222:
  7545  005FDA  C001  FFD9         	movff	strlen@s,fsr2l
  7546  005FDE  C002  FFDA         	movff	strlen@s+1,fsr2h
  7547  005FE2  50DF               	movf	indf2,w,c
  7548  005FE4  A4D8               	btfss	status,2,c
  7549  005FE6  EFF7  F02F         	goto	u4701
  7550  005FEA  EFF9  F02F         	goto	u4700
  7551  005FEE                     u4701:
  7552  005FEE  EFEB  F02F         	goto	l5220
  7553  005FF2                     u4700:
  7554  005FF2  5003               	movf	strlen@a^0,w,c
  7555  005FF4  5C01               	subwf	strlen@s^0,w,c
  7556  005FF6  6E01               	movwf	?_strlen^0,c
  7557  005FF8  5004               	movf	(strlen@a+1)^0,w,c
  7558  005FFA  5802               	subwfb	(strlen@s+1)^0,w,c
  7559  005FFC  6E02               	movwf	(?_strlen+1)^0,c
  7560  005FFE  0012               	return		;funcret
  7561  006000                     __end_of_strlen:
  7562                           	callstack 0
  7563                           
  7564 ;; *************** function _fputs *****************
  7565 ;; Defined at:
  7566 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7569 ;;		 -> dbuf(80), 
  7570 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7571 ;;		 -> sprintf@f(11), 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  i               2   14[COMRAM] int 
  7574 ;;  c               1   13[COMRAM] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  2    9[COMRAM] int 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7585 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;Total ram usage:        7 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 2
  7591 ;; This function calls:
  7592 ;;		_fputc
  7593 ;; This function is called by:
  7594 ;;		_pad
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text23
  7599  005DE2                     __ptext23:
  7600                           	callstack 0
  7601  005DE2                     _fputs:
  7602                           	callstack 23
  7603  005DE2  0E00               	movlw	0
  7604  005DE4  6E10               	movwf	(fputs@i+1)^0,c
  7605  005DE6  0E00               	movlw	0
  7606  005DE8  6E0F               	movwf	fputs@i^0,c
  7607  005DEA  EF02  F02F         	goto	l5436
  7608  005DEE                     l5432:
  7609  005DEE  C00E  F001         	movff	fputs@c,fputc@c
  7610  005DF2  6A02               	clrf	(fputc@c+1)^0,c
  7611  005DF4  C00C  F003         	movff	fputs@fp,fputc@fp
  7612  005DF8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7613  005DFC  ECCD  F028         	call	_fputc	;wreg free
  7614  005E00  4A0F               	infsnz	fputs@i^0,f,c
  7615  005E02  2A10               	incf	(fputs@i+1)^0,f,c
  7616  005E04                     l5436:
  7617  005E04  500F               	movf	fputs@i^0,w,c
  7618  005E06  240A               	addwf	fputs@s^0,w,c
  7619  005E08  6ED9               	movwf	fsr2l,c
  7620  005E0A  5010               	movf	(fputs@i+1)^0,w,c
  7621  005E0C  200B               	addwfc	(fputs@s+1)^0,w,c
  7622  005E0E  6EDA               	movwf	fsr2h,c
  7623  005E10  50DF               	movf	indf2,w,c
  7624  005E12  6E0E               	movwf	fputs@c^0,c
  7625  005E14  500E               	movf	fputs@c^0,w,c
  7626  005E16  A4D8               	btfss	status,2,c
  7627  005E18  EF10  F02F         	goto	u5101
  7628  005E1C  EF12  F02F         	goto	u5100
  7629  005E20                     u5101:
  7630  005E20  EFF7  F02E         	goto	l5432
  7631  005E24                     u5100:
  7632  005E24  0012               	return		;funcret
  7633  005E26                     __end_of_fputs:
  7634                           	callstack 0
  7635                           
  7636 ;; *************** function _fputc *****************
  7637 ;; Defined at:
  7638 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  c               2    0[COMRAM] int 
  7641 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7642 ;;		 -> sprintf@f(11), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  2    0[COMRAM] int 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;Total ram usage:        9 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 1
  7661 ;; This function calls:
  7662 ;;		_putch
  7663 ;; This function is called by:
  7664 ;;		_pad
  7665 ;;		_vfpfcnvrt
  7666 ;;		_fputs
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text24
  7671  00519A                     __ptext24:
  7672                           	callstack 0
  7673  00519A                     _fputc:
  7674                           	callstack 23
  7675  00519A  5003               	movf	fputc@fp^0,w,c
  7676  00519C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7677  00519E  B4D8               	btfsc	status,2,c
  7678  0051A0  EFD4  F028         	goto	u4621
  7679  0051A4  EFD6  F028         	goto	u4620
  7680  0051A8                     u4621:
  7681  0051A8  EFDF  F028         	goto	l5184
  7682  0051AC                     u4620:
  7683  0051AC  5003               	movf	fputc@fp^0,w,c
  7684  0051AE  1004               	iorwf	(fputc@fp+1)^0,w,c
  7685  0051B0  A4D8               	btfss	status,2,c
  7686  0051B2  EFDD  F028         	goto	u4631
  7687  0051B6  EFDF  F028         	goto	u4630
  7688  0051BA                     u4631:
  7689  0051BA  EFE4  F028         	goto	l5186
  7690  0051BE                     u4630:
  7691  0051BE                     l5184:
  7692  0051BE  5001               	movf	fputc@c^0,w,c
  7693  0051C0  EC58  F030         	call	_putch
  7694  0051C4  EF31  F029         	goto	l1899
  7695  0051C8                     l5186:
  7696  0051C8  EE20 F009          	lfsr	2,9
  7697  0051CC  5003               	movf	fputc@fp^0,w,c
  7698  0051CE  26D9               	addwf	fsr2l,f,c
  7699  0051D0  5004               	movf	(fputc@fp+1)^0,w,c
  7700  0051D2  22DA               	addwfc	fsr2h,f,c
  7701  0051D4  50DE               	movf	postinc2,w,c
  7702  0051D6  10DE               	iorwf	postinc2,w,c
  7703  0051D8  B4D8               	btfsc	status,2,c
  7704  0051DA  EFF1  F028         	goto	u4641
  7705  0051DE  EFF3  F028         	goto	u4640
  7706  0051E2                     u4641:
  7707  0051E2  EF0E  F029         	goto	l5190
  7708  0051E6                     u4640:
  7709  0051E6  EE20 F009          	lfsr	2,9
  7710  0051EA  5003               	movf	fputc@fp^0,w,c
  7711  0051EC  26D9               	addwf	fsr2l,f,c
  7712  0051EE  5004               	movf	(fputc@fp+1)^0,w,c
  7713  0051F0  22DA               	addwfc	fsr2h,f,c
  7714  0051F2  EE10 F003          	lfsr	1,3
  7715  0051F6  5003               	movf	fputc@fp^0,w,c
  7716  0051F8  26E1               	addwf	fsr1l,f,c
  7717  0051FA  5004               	movf	(fputc@fp+1)^0,w,c
  7718  0051FC  22E2               	addwfc	fsr1h,f,c
  7719  0051FE  50DE               	movf	postinc2,w,c
  7720  005200  5CE6               	subwf	postinc1,w,c
  7721  005202  50E6               	movf	postinc1,w,c
  7722  005204  0A80               	xorlw	128
  7723  005206  6E09               	movwf	(??_fputc+4)^0,c
  7724  005208  50DE               	movf	postinc2,w,c
  7725  00520A  0A80               	xorlw	128
  7726  00520C  5809               	subwfb	(??_fputc+4)^0,w,c
  7727  00520E  B0D8               	btfsc	status,0,c
  7728  005210  EF0C  F029         	goto	u4651
  7729  005214  EF0E  F029         	goto	u4650
  7730  005218                     u4651:
  7731  005218  EF31  F029         	goto	l1899
  7732  00521C                     u4650:
  7733  00521C                     l5190:
  7734  00521C  EE20 F003          	lfsr	2,3
  7735  005220  5003               	movf	fputc@fp^0,w,c
  7736  005222  26D9               	addwf	fsr2l,f,c
  7737  005224  5004               	movf	(fputc@fp+1)^0,w,c
  7738  005226  22DA               	addwfc	fsr2h,f,c
  7739  005228  CFDE F005          	movff	postinc2,??_fputc
  7740  00522C  CFDD F006          	movff	postdec2,??_fputc+1
  7741  005230  C003  FFD9         	movff	fputc@fp,fsr2l
  7742  005234  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7743  005238  CFDE F007          	movff	postinc2,??_fputc+2
  7744  00523C  CFDD F008          	movff	postdec2,??_fputc+3
  7745  005240  5005               	movf	??_fputc^0,w,c
  7746  005242  2407               	addwf	(??_fputc+2)^0,w,c
  7747  005244  6ED9               	movwf	fsr2l,c
  7748  005246  5006               	movf	(??_fputc+1)^0,w,c
  7749  005248  2008               	addwfc	(??_fputc+3)^0,w,c
  7750  00524A  6EDA               	movwf	fsr2h,c
  7751  00524C  C001  FFDF         	movff	fputc@c,indf2
  7752  005250  EE20 F003          	lfsr	2,3
  7753  005254  5003               	movf	fputc@fp^0,w,c
  7754  005256  26D9               	addwf	fsr2l,f,c
  7755  005258  5004               	movf	(fputc@fp+1)^0,w,c
  7756  00525A  22DA               	addwfc	fsr2h,f,c
  7757  00525C  2ADE               	incf	postinc2,f,c
  7758  00525E  0E00               	movlw	0
  7759  005260  22DD               	addwfc	postdec2,f,c
  7760  005262                     l1899:
  7761  005262  0012               	return		;funcret
  7762  005264                     __end_of_fputc:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _putch *****************
  7766 ;; Defined at:
  7767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  c               1    wreg     unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  c               1    0[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		wreg
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_fputc
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text25
  7795  0060B0                     __ptext25:
  7796                           	callstack 0
  7797  0060B0                     _putch:
  7798                           	callstack 23
  7799  0060B0  0012               	return		;funcret
  7800  0060B2                     __end_of_putch:
  7801                           	callstack 0
  7802                           
  7803 ;; *************** function _abs *****************
  7804 ;; Defined at:
  7805 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  a               2   18[COMRAM] int 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2   18[COMRAM] int 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;Total ram usage:        4 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_dtoa
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text26
  7833  005E6A                     __ptext26:
  7834                           	callstack 0
  7835  005E6A                     _abs:
  7836                           	callstack 26
  7837  005E6A  BE14               	btfsc	(abs@a+1)^0,7,c
  7838  005E6C  EF42  F02F         	goto	u6130
  7839  005E70  5014               	movf	(abs@a+1)^0,w,c
  7840  005E72  E106               	bnz	u6131
  7841  005E74  0413               	decf	abs@a^0,w,c
  7842  005E76  B0D8               	btfsc	status,0,c
  7843  005E78  EF40  F02F         	goto	u6131
  7844  005E7C  EF42  F02F         	goto	u6130
  7845  005E80                     u6131:
  7846  005E80  EF50  F02F         	goto	l1865
  7847  005E84                     u6130:
  7848  005E84  C013  F015         	movff	abs@a,??_abs
  7849  005E88  C014  F016         	movff	abs@a+1,??_abs+1
  7850  005E8C  1E15               	comf	??_abs^0,f,c
  7851  005E8E  1E16               	comf	(??_abs+1)^0,f,c
  7852  005E90  4A15               	infsnz	??_abs^0,f,c
  7853  005E92  2A16               	incf	(??_abs+1)^0,f,c
  7854  005E94  C015  F013         	movff	??_abs,?_abs
  7855  005E98  C016  F014         	movff	??_abs+1,?_abs+1
  7856  005E9C  EF54  F02F         	goto	l1868
  7857  005EA0                     l1865:
  7858  005EA0  C013  F013         	movff	abs@a,?_abs
  7859  005EA4  C014  F014         	movff	abs@a+1,?_abs+1
  7860  005EA8                     l1868:
  7861  005EA8  0012               	return		;funcret
  7862  005EAA                     __end_of_abs:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function ___aomod *****************
  7866 ;; Defined at:
  7867 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  dividend        8    0[COMRAM] long long 
  7870 ;;  divisor         8    8[COMRAM] long long 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  sign            1   17[COMRAM] unsigned char 
  7873 ;;  counter         1   16[COMRAM] unsigned char 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  8    0[COMRAM] long long 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7883 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;Total ram usage:       18 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_dtoa
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text27
  7897  004452                     __ptext27:
  7898                           	callstack 0
  7899  004452                     ___aomod:
  7900                           	callstack 26
  7901  004452  0E00               	movlw	0
  7902  004454  6E12               	movwf	___aomod@sign^0,c
  7903  004456  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7904  004458  EF32  F022         	goto	u5260
  7905  00445C  EF30  F022         	goto	u5261
  7906  004460                     u5261:
  7907  004460  EF44  F022         	goto	l5542
  7908  004464                     u5260:
  7909  004464  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7910  004466  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7911  004468  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7912  00446A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7913  00446C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7914  00446E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7915  004470  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7916  004472  6C01               	negf	___aomod@dividend^0,c
  7917  004474  0E00               	movlw	0
  7918  004476  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7919  004478  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7920  00447A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7921  00447C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7922  00447E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7923  004480  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7924  004482  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7925  004484  0E01               	movlw	1
  7926  004486  6E12               	movwf	___aomod@sign^0,c
  7927  004488                     l5542:
  7928  004488  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7929  00448A  EF4B  F022         	goto	u5270
  7930  00448E  EF49  F022         	goto	u5271
  7931  004492                     u5271:
  7932  004492  EF5B  F022         	goto	l5546
  7933  004496                     u5270:
  7934  004496  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7935  004498  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7936  00449A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7937  00449C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7938  00449E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7939  0044A0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7940  0044A2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7941  0044A4  6C09               	negf	___aomod@divisor^0,c
  7942  0044A6  0E00               	movlw	0
  7943  0044A8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7944  0044AA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7945  0044AC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7946  0044AE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7947  0044B0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7948  0044B2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7949  0044B4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7950  0044B6                     l5546:
  7951  0044B6  5009               	movf	___aomod@divisor^0,w,c
  7952  0044B8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7953  0044BA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7954  0044BC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7955  0044BE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7956  0044C0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7957  0044C2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7958  0044C4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7959  0044C6  B4D8               	btfsc	status,2,c
  7960  0044C8  EF68  F022         	goto	u5281
  7961  0044CC  EF6A  F022         	goto	u5280
  7962  0044D0                     u5281:
  7963  0044D0  EFB2  F022         	goto	l5562
  7964  0044D4                     u5280:
  7965  0044D4  0E01               	movlw	1
  7966  0044D6  6E11               	movwf	___aomod@counter^0,c
  7967  0044D8  EF78  F022         	goto	l5552
  7968  0044DC                     l5550:
  7969  0044DC  90D8               	bcf	status,0,c
  7970  0044DE  3609               	rlcf	___aomod@divisor^0,f,c
  7971  0044E0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7972  0044E2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7973  0044E4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7974  0044E6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7975  0044E8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7976  0044EA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7977  0044EC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7978  0044EE  2A11               	incf	___aomod@counter^0,f,c
  7979  0044F0                     l5552:
  7980  0044F0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7981  0044F2  EF7D  F022         	goto	u5291
  7982  0044F6  EF7F  F022         	goto	u5290
  7983  0044FA                     u5291:
  7984  0044FA  EF6E  F022         	goto	l5550
  7985  0044FE                     u5290:
  7986  0044FE                     l5554:
  7987  0044FE  5009               	movf	___aomod@divisor^0,w,c
  7988  004500  5C01               	subwf	___aomod@dividend^0,w,c
  7989  004502  500A               	movf	(___aomod@divisor+1)^0,w,c
  7990  004504  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7991  004506  500B               	movf	(___aomod@divisor+2)^0,w,c
  7992  004508  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7993  00450A  500C               	movf	(___aomod@divisor+3)^0,w,c
  7994  00450C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7995  00450E  500D               	movf	(___aomod@divisor+4)^0,w,c
  7996  004510  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7997  004512  500E               	movf	(___aomod@divisor+5)^0,w,c
  7998  004514  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7999  004516  500F               	movf	(___aomod@divisor+6)^0,w,c
  8000  004518  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8001  00451A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8002  00451C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8003  00451E  A0D8               	btfss	status,0,c
  8004  004520  EF94  F022         	goto	u5301
  8005  004524  EF96  F022         	goto	u5300
  8006  004528                     u5301:
  8007  004528  EFA6  F022         	goto	l5558
  8008  00452C                     u5300:
  8009  00452C  5009               	movf	___aomod@divisor^0,w,c
  8010  00452E  5E01               	subwf	___aomod@dividend^0,f,c
  8011  004530  500A               	movf	(___aomod@divisor+1)^0,w,c
  8012  004532  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8013  004534  500B               	movf	(___aomod@divisor+2)^0,w,c
  8014  004536  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8015  004538  500C               	movf	(___aomod@divisor+3)^0,w,c
  8016  00453A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8017  00453C  500D               	movf	(___aomod@divisor+4)^0,w,c
  8018  00453E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8019  004540  500E               	movf	(___aomod@divisor+5)^0,w,c
  8020  004542  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8021  004544  500F               	movf	(___aomod@divisor+6)^0,w,c
  8022  004546  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8023  004548  5010               	movf	(___aomod@divisor+7)^0,w,c
  8024  00454A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8025  00454C                     l5558:
  8026  00454C  90D8               	bcf	status,0,c
  8027  00454E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8028  004550  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8029  004552  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8030  004554  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8031  004556  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8032  004558  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8033  00455A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8034  00455C  3209               	rrcf	___aomod@divisor^0,f,c
  8035  00455E  2E11               	decfsz	___aomod@counter^0,f,c
  8036  004560  EF7F  F022         	goto	l5554
  8037  004564                     l5562:
  8038  004564  5012               	movf	___aomod@sign^0,w,c
  8039  004566  B4D8               	btfsc	status,2,c
  8040  004568  EFB8  F022         	goto	u5311
  8041  00456C  EFBA  F022         	goto	u5310
  8042  004570                     u5311:
  8043  004570  EFCA  F022         	goto	l5566
  8044  004574                     u5310:
  8045  004574  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8046  004576  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8047  004578  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8048  00457A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8049  00457C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8050  00457E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8051  004580  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8052  004582  6C01               	negf	___aomod@dividend^0,c
  8053  004584  0E00               	movlw	0
  8054  004586  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8055  004588  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8056  00458A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8057  00458C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8058  00458E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8059  004590  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8060  004592  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8061  004594                     l5566:
  8062  004594  C001  F001         	movff	___aomod@dividend,?___aomod
  8063  004598  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8064  00459C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8065  0045A0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8066  0045A4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8067  0045A8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8068  0045AC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8069  0045B0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8070  0045B4  0012               	return		;funcret
  8071  0045B6                     __end_of___aomod:
  8072                           	callstack 0
  8073                           
  8074 ;; *************** function ___aodiv *****************
  8075 ;; Defined at:
  8076 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  dividend        8    0[COMRAM] long long 
  8079 ;;  divisor         8    8[COMRAM] long long 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  quotient        8   18[COMRAM] long long 
  8082 ;;  sign            1   17[COMRAM] unsigned char 
  8083 ;;  counter         1   16[COMRAM] unsigned char 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  8    0[COMRAM] long long 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8093 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8094 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;Total ram usage:       26 bytes
  8098 ;; Hardware stack levels used: 1
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_dtoa
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text28
  8107  004154                     __ptext28:
  8108                           	callstack 0
  8109  004154                     ___aodiv:
  8110                           	callstack 26
  8111  004154  0E00               	movlw	0
  8112  004156  6E12               	movwf	___aodiv@sign^0,c
  8113  004158  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8114  00415A  EFB3  F020         	goto	u5190
  8115  00415E  EFB1  F020         	goto	u5191
  8116  004162                     u5191:
  8117  004162  EFC5  F020         	goto	l5498
  8118  004166                     u5190:
  8119  004166  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8120  004168  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8121  00416A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8122  00416C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8123  00416E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8124  004170  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8125  004172  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8126  004174  6C09               	negf	___aodiv@divisor^0,c
  8127  004176  0E00               	movlw	0
  8128  004178  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8129  00417A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8130  00417C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8131  00417E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8132  004180  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8133  004182  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8134  004184  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8135  004186  0E01               	movlw	1
  8136  004188  6E12               	movwf	___aodiv@sign^0,c
  8137  00418A                     l5498:
  8138  00418A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8139  00418C  EFCC  F020         	goto	u5200
  8140  004190  EFCA  F020         	goto	u5201
  8141  004194                     u5201:
  8142  004194  EFDE  F020         	goto	l5504
  8143  004198                     u5200:
  8144  004198  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8145  00419A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8146  00419C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8147  00419E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8148  0041A0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8149  0041A2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8150  0041A4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8151  0041A6  6C01               	negf	___aodiv@dividend^0,c
  8152  0041A8  0E00               	movlw	0
  8153  0041AA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8154  0041AC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8155  0041AE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8156  0041B0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8157  0041B2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8158  0041B4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8159  0041B6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8160  0041B8  0E01               	movlw	1
  8161  0041BA  1A12               	xorwf	___aodiv@sign^0,f,c
  8162  0041BC                     l5504:
  8163  0041BC  EE20  F013         	lfsr	2,___aodiv@quotient
  8164  0041C0  0E07               	movlw	7
  8165  0041C2                     u5211:
  8166  0041C2  6ADE               	clrf	postinc2,c
  8167  0041C4  06E8               	decf	wreg,f,c
  8168  0041C6  E2FD               	bc	u5211
  8169  0041C8  5009               	movf	___aodiv@divisor^0,w,c
  8170  0041CA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8171  0041CC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8172  0041CE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8173  0041D0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8174  0041D2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8175  0041D4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8176  0041D6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8177  0041D8  B4D8               	btfsc	status,2,c
  8178  0041DA  EFF1  F020         	goto	u5221
  8179  0041DE  EFF3  F020         	goto	u5220
  8180  0041E2                     u5221:
  8181  0041E2  EF45  F021         	goto	l5526
  8182  0041E6                     u5220:
  8183  0041E6  0E01               	movlw	1
  8184  0041E8  6E11               	movwf	___aodiv@counter^0,c
  8185  0041EA  EF01  F021         	goto	l5512
  8186  0041EE                     l5510:
  8187  0041EE  90D8               	bcf	status,0,c
  8188  0041F0  3609               	rlcf	___aodiv@divisor^0,f,c
  8189  0041F2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8190  0041F4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8191  0041F6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8192  0041F8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8193  0041FA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8194  0041FC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8195  0041FE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8196  004200  2A11               	incf	___aodiv@counter^0,f,c
  8197  004202                     l5512:
  8198  004202  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8199  004204  EF06  F021         	goto	u5231
  8200  004208  EF08  F021         	goto	u5230
  8201  00420C                     u5231:
  8202  00420C  EFF7  F020         	goto	l5510
  8203  004210                     u5230:
  8204  004210                     l5514:
  8205  004210  90D8               	bcf	status,0,c
  8206  004212  3613               	rlcf	___aodiv@quotient^0,f,c
  8207  004214  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8208  004216  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8209  004218  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8210  00421A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8211  00421C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8212  00421E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8213  004220  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8214  004222  5009               	movf	___aodiv@divisor^0,w,c
  8215  004224  5C01               	subwf	___aodiv@dividend^0,w,c
  8216  004226  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8217  004228  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8218  00422A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8219  00422C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8220  00422E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8221  004230  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8222  004232  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8223  004234  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8224  004236  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8225  004238  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8226  00423A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8227  00423C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8228  00423E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8229  004240  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8230  004242  A0D8               	btfss	status,0,c
  8231  004244  EF26  F021         	goto	u5241
  8232  004248  EF28  F021         	goto	u5240
  8233  00424C                     u5241:
  8234  00424C  EF39  F021         	goto	l5522
  8235  004250                     u5240:
  8236  004250  5009               	movf	___aodiv@divisor^0,w,c
  8237  004252  5E01               	subwf	___aodiv@dividend^0,f,c
  8238  004254  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8239  004256  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8240  004258  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8241  00425A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8242  00425C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8243  00425E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8244  004260  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8245  004262  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8246  004264  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8247  004266  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8248  004268  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8249  00426A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8250  00426C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8251  00426E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8252  004270  8013               	bsf	___aodiv@quotient^0,0,c
  8253  004272                     l5522:
  8254  004272  90D8               	bcf	status,0,c
  8255  004274  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8256  004276  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8257  004278  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8258  00427A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8259  00427C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8260  00427E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8261  004280  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8262  004282  3209               	rrcf	___aodiv@divisor^0,f,c
  8263  004284  2E11               	decfsz	___aodiv@counter^0,f,c
  8264  004286  EF08  F021         	goto	l5514
  8265  00428A                     l5526:
  8266  00428A  5012               	movf	___aodiv@sign^0,w,c
  8267  00428C  B4D8               	btfsc	status,2,c
  8268  00428E  EF4B  F021         	goto	u5251
  8269  004292  EF4D  F021         	goto	u5250
  8270  004296                     u5251:
  8271  004296  EF5D  F021         	goto	l5530
  8272  00429A                     u5250:
  8273  00429A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8274  00429C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8275  00429E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8276  0042A0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8277  0042A2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8278  0042A4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8279  0042A6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8280  0042A8  6C13               	negf	___aodiv@quotient^0,c
  8281  0042AA  0E00               	movlw	0
  8282  0042AC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8283  0042AE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8284  0042B0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8285  0042B2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8286  0042B4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8287  0042B6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8288  0042B8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8289  0042BA                     l5530:
  8290  0042BA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8291  0042BE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8292  0042C2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8293  0042C6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8294  0042CA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8295  0042CE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8296  0042D2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8297  0042D6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8298  0042DA  0012               	return		;funcret
  8299  0042DC                     __end_of___aodiv:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _memset *****************
  8303 ;; Defined at:
  8304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  dest            2    0[COMRAM] PTR void 
  8307 ;;		 -> postfix(100), infix(100), 
  8308 ;;  c               2    2[COMRAM] int 
  8309 ;;  n               2    4[COMRAM] unsigned int 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  s               2   10[COMRAM] PTR unsigned char 
  8312 ;;		 -> postfix(100), infix(100), 
  8313 ;;  k               2    8[COMRAM] unsigned int 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  2    0[COMRAM] PTR void 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8323 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;Total ram usage:       12 bytes
  8328 ;; Hardware stack levels used: 1
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_main
  8333 ;;		_convert_uint32_to_string
  8334 ;;		_convert_uint16_to_string
  8335 ;;		_convert_uint8_to_string
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text29
  8340  0042DC                     __ptext29:
  8341                           	callstack 0
  8342  0042DC                     _memset:
  8343                           	callstack 30
  8344  0042DC  C001  F00B         	movff	memset@dest,memset@s
  8345  0042E0  C002  F00C         	movff	memset@dest+1,memset@s+1
  8346  0042E4  5005               	movf	memset@n^0,w,c
  8347  0042E6  1006               	iorwf	(memset@n+1)^0,w,c
  8348  0042E8  A4D8               	btfss	status,2,c
  8349  0042EA  EF79  F021         	goto	u7721
  8350  0042EE  EF7B  F021         	goto	u7720
  8351  0042F2                     u7721:
  8352  0042F2  EF7D  F021         	goto	l7100
  8353  0042F6                     u7720:
  8354  0042F6  EF28  F022         	goto	l1638
  8355  0042FA                     l7100:
  8356  0042FA  C00B  FFD9         	movff	memset@s,fsr2l
  8357  0042FE  C00C  FFDA         	movff	memset@s+1,fsr2h
  8358  004302  C003  FFDF         	movff	memset@c,indf2
  8359  004306  5005               	movf	memset@n^0,w,c
  8360  004308  240B               	addwf	memset@s^0,w,c
  8361  00430A  6E07               	movwf	??_memset^0,c
  8362  00430C  5006               	movf	(memset@n+1)^0,w,c
  8363  00430E  200C               	addwfc	(memset@s+1)^0,w,c
  8364  004310  6E08               	movwf	(??_memset+1)^0,c
  8365  004312  0EFF               	movlw	255
  8366  004314  2407               	addwf	??_memset^0,w,c
  8367  004316  6ED9               	movwf	fsr2l,c
  8368  004318  0EFF               	movlw	255
  8369  00431A  2008               	addwfc	(??_memset+1)^0,w,c
  8370  00431C  6EDA               	movwf	fsr2h,c
  8371  00431E  C003  FFDF         	movff	memset@c,indf2
  8372  004322  5006               	movf	(memset@n+1)^0,w,c
  8373  004324  E107               	bnz	u7731
  8374  004326  0E03               	movlw	3
  8375  004328  5C05               	subwf	memset@n^0,w,c
  8376  00432A  B0D8               	btfsc	status,0,c
  8377  00432C  EF9A  F021         	goto	u7731
  8378  004330  EF9C  F021         	goto	u7730
  8379  004334                     u7731:
  8380  004334  EF9E  F021         	goto	l7106
  8381  004338                     u7730:
  8382  004338  EF28  F022         	goto	l1638
  8383  00433C                     l7106:
  8384  00433C  EE20 F001          	lfsr	2,1
  8385  004340  500B               	movf	memset@s^0,w,c
  8386  004342  26D9               	addwf	fsr2l,f,c
  8387  004344  500C               	movf	(memset@s+1)^0,w,c
  8388  004346  22DA               	addwfc	fsr2h,f,c
  8389  004348  C003  FFDF         	movff	memset@c,indf2
  8390  00434C  EE20 F002          	lfsr	2,2
  8391  004350  500B               	movf	memset@s^0,w,c
  8392  004352  26D9               	addwf	fsr2l,f,c
  8393  004354  500C               	movf	(memset@s+1)^0,w,c
  8394  004356  22DA               	addwfc	fsr2h,f,c
  8395  004358  C003  FFDF         	movff	memset@c,indf2
  8396  00435C  5005               	movf	memset@n^0,w,c
  8397  00435E  240B               	addwf	memset@s^0,w,c
  8398  004360  6E07               	movwf	??_memset^0,c
  8399  004362  5006               	movf	(memset@n+1)^0,w,c
  8400  004364  200C               	addwfc	(memset@s+1)^0,w,c
  8401  004366  6E08               	movwf	(??_memset+1)^0,c
  8402  004368  0EFE               	movlw	254
  8403  00436A  2407               	addwf	??_memset^0,w,c
  8404  00436C  6ED9               	movwf	fsr2l,c
  8405  00436E  0EFF               	movlw	255
  8406  004370  2008               	addwfc	(??_memset+1)^0,w,c
  8407  004372  6EDA               	movwf	fsr2h,c
  8408  004374  C003  FFDF         	movff	memset@c,indf2
  8409  004378  5005               	movf	memset@n^0,w,c
  8410  00437A  240B               	addwf	memset@s^0,w,c
  8411  00437C  6E07               	movwf	??_memset^0,c
  8412  00437E  5006               	movf	(memset@n+1)^0,w,c
  8413  004380  200C               	addwfc	(memset@s+1)^0,w,c
  8414  004382  6E08               	movwf	(??_memset+1)^0,c
  8415  004384  0EFD               	movlw	253
  8416  004386  2407               	addwf	??_memset^0,w,c
  8417  004388  6ED9               	movwf	fsr2l,c
  8418  00438A  0EFF               	movlw	255
  8419  00438C  2008               	addwfc	(??_memset+1)^0,w,c
  8420  00438E  6EDA               	movwf	fsr2h,c
  8421  004390  C003  FFDF         	movff	memset@c,indf2
  8422  004394  5006               	movf	(memset@n+1)^0,w,c
  8423  004396  E107               	bnz	u7741
  8424  004398  0E07               	movlw	7
  8425  00439A  5C05               	subwf	memset@n^0,w,c
  8426  00439C  B0D8               	btfsc	status,0,c
  8427  00439E  EFD3  F021         	goto	u7741
  8428  0043A2  EFD5  F021         	goto	u7740
  8429  0043A6                     u7741:
  8430  0043A6  EFD7  F021         	goto	l7112
  8431  0043AA                     u7740:
  8432  0043AA  EF28  F022         	goto	l1638
  8433  0043AE                     l7112:
  8434  0043AE  EE20 F003          	lfsr	2,3
  8435  0043B2  500B               	movf	memset@s^0,w,c
  8436  0043B4  26D9               	addwf	fsr2l,f,c
  8437  0043B6  500C               	movf	(memset@s+1)^0,w,c
  8438  0043B8  22DA               	addwfc	fsr2h,f,c
  8439  0043BA  C003  FFDF         	movff	memset@c,indf2
  8440  0043BE  5005               	movf	memset@n^0,w,c
  8441  0043C0  240B               	addwf	memset@s^0,w,c
  8442  0043C2  6E07               	movwf	??_memset^0,c
  8443  0043C4  5006               	movf	(memset@n+1)^0,w,c
  8444  0043C6  200C               	addwfc	(memset@s+1)^0,w,c
  8445  0043C8  6E08               	movwf	(??_memset+1)^0,c
  8446  0043CA  0EFC               	movlw	252
  8447  0043CC  2407               	addwf	??_memset^0,w,c
  8448  0043CE  6ED9               	movwf	fsr2l,c
  8449  0043D0  0EFF               	movlw	255
  8450  0043D2  2008               	addwfc	(??_memset+1)^0,w,c
  8451  0043D4  6EDA               	movwf	fsr2h,c
  8452  0043D6  C003  FFDF         	movff	memset@c,indf2
  8453  0043DA  5006               	movf	(memset@n+1)^0,w,c
  8454  0043DC  E107               	bnz	u7751
  8455  0043DE  0E09               	movlw	9
  8456  0043E0  5C05               	subwf	memset@n^0,w,c
  8457  0043E2  B0D8               	btfsc	status,0,c
  8458  0043E4  EFF6  F021         	goto	u7751
  8459  0043E8  EFF8  F021         	goto	u7750
  8460  0043EC                     u7751:
  8461  0043EC  EFFA  F021         	goto	l7118
  8462  0043F0                     u7750:
  8463  0043F0  EF28  F022         	goto	l1638
  8464  0043F4                     l7118:
  8465  0043F4  C00B  F007         	movff	memset@s,??_memset
  8466  0043F8  C00C  F008         	movff	memset@s+1,??_memset+1
  8467  0043FC  1E07               	comf	??_memset^0,f,c
  8468  0043FE  1E08               	comf	(??_memset+1)^0,f,c
  8469  004400  4A07               	infsnz	??_memset^0,f,c
  8470  004402  2A08               	incf	(??_memset+1)^0,f,c
  8471  004404  0E03               	movlw	3
  8472  004406  1407               	andwf	??_memset^0,w,c
  8473  004408  6E09               	movwf	memset@k^0,c
  8474  00440A  6A0A               	clrf	(memset@k+1)^0,c
  8475  00440C  5009               	movf	memset@k^0,w,c
  8476  00440E  260B               	addwf	memset@s^0,f,c
  8477  004410  500A               	movf	(memset@k+1)^0,w,c
  8478  004412  220C               	addwfc	(memset@s+1)^0,f,c
  8479  004414  5009               	movf	memset@k^0,w,c
  8480  004416  5E05               	subwf	memset@n^0,f,c
  8481  004418  500A               	movf	(memset@k+1)^0,w,c
  8482  00441A  5A06               	subwfb	(memset@n+1)^0,f,c
  8483  00441C  0EFC               	movlw	252
  8484  00441E  1605               	andwf	memset@n^0,f,c
  8485  004420  0EFF               	movlw	255
  8486  004422  1606               	andwf	(memset@n+1)^0,f,c
  8487  004424  EF1F  F022         	goto	l7126
  8488  004428                     l7120:
  8489  004428  C00B  FFD9         	movff	memset@s,fsr2l
  8490  00442C  C00C  FFDA         	movff	memset@s+1,fsr2h
  8491  004430  C003  FFDF         	movff	memset@c,indf2
  8492  004434  0605               	decf	memset@n^0,f,c
  8493  004436  A0D8               	btfss	status,0,c
  8494  004438  0606               	decf	(memset@n+1)^0,f,c
  8495  00443A  4A0B               	infsnz	memset@s^0,f,c
  8496  00443C  2A0C               	incf	(memset@s+1)^0,f,c
  8497  00443E                     l7126:
  8498  00443E  5005               	movf	memset@n^0,w,c
  8499  004440  1006               	iorwf	(memset@n+1)^0,w,c
  8500  004442  A4D8               	btfss	status,2,c
  8501  004444  EF26  F022         	goto	u7761
  8502  004448  EF28  F022         	goto	u7760
  8503  00444C                     u7761:
  8504  00444C  EF14  F022         	goto	l7120
  8505  004450                     u7760:
  8506  004450                     l1638:
  8507  004450  0012               	return		;funcret
  8508  004452                     __end_of_memset:
  8509                           	callstack 0
  8510                           
  8511 ;; *************** function _led_turn_on *****************
  8512 ;; Defined at:
  8513 ;;		line 40 in file "ECU_layer/LED/ecu_led.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  led             2   10[COMRAM] PTR const struct .
  8516 ;;		 -> led_1(1), 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;  pin_obj         1   13[COMRAM] struct .
  8519 ;;  ret             1    0        unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      unsigned char 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;Total ram usage:        4 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 1
  8536 ;; This function calls:
  8537 ;;		_gpio_pin_write_logic
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text30
  8544  005842                     __ptext30:
  8545                           	callstack 0
  8546  005842                     _led_turn_on:
  8547                           	callstack 29
  8548  005842                     
  8549                           ;ECU_layer/LED/ecu_led.c: 42:     if(((void*)0) == led){
  8550  005842  500B               	movf	led_turn_on@led^0,w,c
  8551  005844  100C               	iorwf	(led_turn_on@led+1)^0,w,c
  8552  005846  A4D8               	btfss	status,2,c
  8553  005848  EF28  F02C         	goto	u7831
  8554  00584C  EF2A  F02C         	goto	u7830
  8555  005850                     u7831:
  8556  005850  EF2C  F02C         	goto	l281
  8557  005854                     u7830:
  8558  005854                     
  8559                           ;ECU_layer/LED/ecu_led.c: 44:     }
  8560  005854  EF5B  F02C         	goto	l285
  8561  005858                     l281:
  8562                           
  8563                           ;ECU_layer/LED/ecu_led.c: 46:         pin_config_t pin_obj = {
  8564  005858  C0FA  F00E         	movff	led_turn_on@F3050,led_turn_on@pin_obj
  8565  00585C  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  8566  005860  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  8567  005864  50DF               	movf	223,w,c
  8568  005866  0B0F               	andlw	15
  8569  005868  6E0D               	movwf	??_led_turn_on^0,c
  8570  00586A  500E               	movf	led_turn_on@pin_obj^0,w,c
  8571  00586C  180D               	xorwf	??_led_turn_on^0,w,c
  8572  00586E  0BF8               	andlw	-8
  8573  005870  180D               	xorwf	??_led_turn_on^0,w,c
  8574  005872  6E0E               	movwf	led_turn_on@pin_obj^0,c
  8575  005874  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  8576  005878  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  8577  00587C  38DF               	swapf	223,w,c
  8578  00587E  0B07               	andlw	7
  8579  005880  6E0D               	movwf	??_led_turn_on^0,c
  8580  005882  460D               	rlncf	??_led_turn_on^0,f,c
  8581  005884  460D               	rlncf	??_led_turn_on^0,f,c
  8582  005886  460D               	rlncf	??_led_turn_on^0,f,c
  8583  005888  500E               	movf	led_turn_on@pin_obj^0,w,c
  8584  00588A  180D               	xorwf	??_led_turn_on^0,w,c
  8585  00588C  0BC7               	andlw	-57
  8586  00588E  180D               	xorwf	??_led_turn_on^0,w,c
  8587  005890  6E0E               	movwf	led_turn_on@pin_obj^0,c
  8588  005892  9C0E               	bcf	led_turn_on@pin_obj^0,6,c
  8589  005894  C00B  FFD9         	movff	led_turn_on@led,fsr2l
  8590  005898  C00C  FFDA         	movff	led_turn_on@led+1,fsr2h
  8591  00589C  AEDF               	btfss	indf2,7,c
  8592  00589E  D002               	bra	u7845
  8593  0058A0  8E0E               	bsf	led_turn_on@pin_obj^0,7,c
  8594  0058A2  D001               	bra	u7847
  8595  0058A4                     u7845:
  8596  0058A4  9E0E               	bcf	led_turn_on@pin_obj^0,7,c
  8597  0058A6                     u7847:
  8598  0058A6                     
  8599                           ;ECU_layer/LED/ecu_led.c: 52:         gpio_pin_write_logic(&pin_obj, GPIO_HIGH);
  8600  0058A6  0E0E               	movlw	low led_turn_on@pin_obj
  8601  0058A8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8602  0058AA  0E00               	movlw	high led_turn_on@pin_obj
  8603  0058AC  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8604  0058AE  0E01               	movlw	1
  8605  0058B0  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8606  0058B2  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
  8607  0058B6                     l285:
  8608  0058B6  0012               	return		;funcret
  8609  0058B8                     __end_of_led_turn_on:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _led_turn_off *****************
  8613 ;; Defined at:
  8614 ;;		line 63 in file "ECU_layer/LED/ecu_led.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  led             2   10[COMRAM] PTR const struct .
  8617 ;;		 -> led_1(1), 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  pin_obj         1   13[COMRAM] struct .
  8620 ;;  ret             1    0        unsigned char 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      unsigned char 
  8623 ;; Registers used:
  8624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;Total ram usage:        4 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; Hardware stack levels required when called: 1
  8637 ;; This function calls:
  8638 ;;		_gpio_pin_write_logic
  8639 ;; This function is called by:
  8640 ;;		_main
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text31
  8645  0058B8                     __ptext31:
  8646                           	callstack 0
  8647  0058B8                     _led_turn_off:
  8648                           	callstack 29
  8649  0058B8                     
  8650                           ;ECU_layer/LED/ecu_led.c: 65:     if(((void*)0) == led){
  8651  0058B8  500B               	movf	led_turn_off@led^0,w,c
  8652  0058BA  100C               	iorwf	(led_turn_off@led+1)^0,w,c
  8653  0058BC  A4D8               	btfss	status,2,c
  8654  0058BE  EF63  F02C         	goto	u7851
  8655  0058C2  EF65  F02C         	goto	u7850
  8656  0058C6                     u7851:
  8657  0058C6  EF67  F02C         	goto	l288
  8658  0058CA                     u7850:
  8659  0058CA                     
  8660                           ;ECU_layer/LED/ecu_led.c: 67:     }
  8661  0058CA  EF96  F02C         	goto	l292
  8662  0058CE                     l288:
  8663                           
  8664                           ;ECU_layer/LED/ecu_led.c: 69:        pin_config_t pin_obj = {
  8665  0058CE  C0F9  F00E         	movff	led_turn_off@F3055,led_turn_off@pin_obj
  8666  0058D2  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  8667  0058D6  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  8668  0058DA  50DF               	movf	223,w,c
  8669  0058DC  0B0F               	andlw	15
  8670  0058DE  6E0D               	movwf	??_led_turn_off^0,c
  8671  0058E0  500E               	movf	led_turn_off@pin_obj^0,w,c
  8672  0058E2  180D               	xorwf	??_led_turn_off^0,w,c
  8673  0058E4  0BF8               	andlw	-8
  8674  0058E6  180D               	xorwf	??_led_turn_off^0,w,c
  8675  0058E8  6E0E               	movwf	led_turn_off@pin_obj^0,c
  8676  0058EA  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  8677  0058EE  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  8678  0058F2  38DF               	swapf	223,w,c
  8679  0058F4  0B07               	andlw	7
  8680  0058F6  6E0D               	movwf	??_led_turn_off^0,c
  8681  0058F8  460D               	rlncf	??_led_turn_off^0,f,c
  8682  0058FA  460D               	rlncf	??_led_turn_off^0,f,c
  8683  0058FC  460D               	rlncf	??_led_turn_off^0,f,c
  8684  0058FE  500E               	movf	led_turn_off@pin_obj^0,w,c
  8685  005900  180D               	xorwf	??_led_turn_off^0,w,c
  8686  005902  0BC7               	andlw	-57
  8687  005904  180D               	xorwf	??_led_turn_off^0,w,c
  8688  005906  6E0E               	movwf	led_turn_off@pin_obj^0,c
  8689  005908  9C0E               	bcf	led_turn_off@pin_obj^0,6,c
  8690  00590A  C00B  FFD9         	movff	led_turn_off@led,fsr2l
  8691  00590E  C00C  FFDA         	movff	led_turn_off@led+1,fsr2h
  8692  005912  AEDF               	btfss	indf2,7,c
  8693  005914  D002               	bra	u7865
  8694  005916  8E0E               	bsf	led_turn_off@pin_obj^0,7,c
  8695  005918  D001               	bra	u7867
  8696  00591A                     u7865:
  8697  00591A  9E0E               	bcf	led_turn_off@pin_obj^0,7,c
  8698  00591C                     u7867:
  8699  00591C                     
  8700                           ;ECU_layer/LED/ecu_led.c: 75:         gpio_pin_write_logic(&pin_obj, GPIO_LOW);
  8701  00591C  0E0E               	movlw	low led_turn_off@pin_obj
  8702  00591E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8703  005920  0E00               	movlw	high led_turn_off@pin_obj
  8704  005922  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8705  005924  0E00               	movlw	0
  8706  005926  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8707  005928  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
  8708  00592C                     l292:
  8709  00592C  0012               	return		;funcret
  8710  00592E                     __end_of_led_turn_off:
  8711                           	callstack 0
  8712                           
  8713 ;; *************** function _lcd_4bit_send_string_pos *****************
  8714 ;; Defined at:
  8715 ;;		line 101 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  lcd             2   25[COMRAM] PTR const struct .
  8718 ;;		 -> lcd_1(6), 
  8719 ;;  row             1   27[COMRAM] unsigned char 
  8720 ;;  column          1   28[COMRAM] unsigned char 
  8721 ;;  str             2   29[COMRAM] PTR unsigned char 
  8722 ;;		 -> arr(11), STR_4(6), 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  ret             1   31[COMRAM] unsigned char 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      unsigned char 
  8727 ;; Registers used:
  8728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8734 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;Total ram usage:        7 bytes
  8739 ;; Hardware stack levels used: 1
  8740 ;; Hardware stack levels required when called: 4
  8741 ;; This function calls:
  8742 ;;		_lcd_4bit_send_char_data
  8743 ;;		_lcd_4bits_set_cursor
  8744 ;; This function is called by:
  8745 ;;		_main
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text32
  8750  0056A8                     __ptext32:
  8751                           	callstack 0
  8752  0056A8                     _lcd_4bit_send_string_pos:
  8753                           	callstack 26
  8754  0056A8                     
  8755                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 103:     if(((void*)0) == lcd){
  8756  0056A8  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  8757  0056AA  101B               	iorwf	(lcd_4bit_send_string_pos@lcd+1)^0,w,c
  8758  0056AC  A4D8               	btfss	status,2,c
  8759  0056AE  EF5B  F02B         	goto	u7641
  8760  0056B2  EF5D  F02B         	goto	u7640
  8761  0056B6                     u7641:
  8762  0056B6  EF61  F02B         	goto	l7046
  8763  0056BA                     u7640:
  8764  0056BA                     
  8765                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 104:         ret = (Std_ReturnType)0x00;
  8766  0056BA  0E00               	movlw	0
  8767  0056BC  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  8768                           
  8769                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 105:     }
  8770  0056BE  EFA2  F02B         	goto	l7054
  8771  0056C2                     l7046:
  8772                           
  8773                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 107:         ret = lcd_4bits_set_cursor(lcd, row, colu
      +                          mn);
  8774  0056C2  C01A  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  8775  0056C6  C01B  F014         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  8776  0056CA  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bits_set_cursor@row
  8777  0056CE  C01D  F016         	movff	lcd_4bit_send_string_pos@column,lcd_4bits_set_cursor@column
  8778  0056D2  EC00  F02B         	call	_lcd_4bits_set_cursor	;wreg free
  8779  0056D6  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  8780                           
  8781                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 108:         while(*str){
  8782  0056D8  EF89  F02B         	goto	l7052
  8783  0056DC                     l7048:
  8784                           
  8785                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 109:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  8786  0056DC  C01A  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  8787  0056E0  C01B  F010         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  8788  0056E4  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8789  0056E8  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8790  0056EC  0E00               	movlw	low (__smallconst shr (0+16))
  8791  0056EE  6EF8               	movwf	tblptru,c
  8792  0056F0  0E0F               	movlw	(high __ramtop+-1)
  8793  0056F2  64F7               	cpfsgt	tblptrh,c
  8794  0056F4  D003               	bra	u7657
  8795  0056F6  0008               	tblrd		*
  8796  0056F8  50F5               	movf	tablat,w,c
  8797  0056FA  D005               	bra	u7650
  8798  0056FC                     u7657:
  8799  0056FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8800  005700  CFF7 FFEA          	movff	tblptrh,fsr0h
  8801  005704  50EF               	movf	indf0,w,c
  8802  005706                     u7650:
  8803  005706  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
  8804  005708  EC97  F02C         	call	_lcd_4bit_send_char_data	;wreg free
  8805  00570C  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
  8806  00570E  4A1E               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  8807  005710  2A1F               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  8808  005712                     l7052:
  8809                           
  8810                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 108:         while(*str){
  8811  005712  C01E  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8812  005716  C01F  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8813  00571A  0E00               	movlw	low (__smallconst shr (0+16))
  8814  00571C  6EF8               	movwf	tblptru,c
  8815  00571E  0E0F               	movlw	(high __ramtop+-1)
  8816  005720  64F7               	cpfsgt	tblptrh,c
  8817  005722  D003               	bra	u7667
  8818  005724  0008               	tblrd		*
  8819  005726  50F5               	movf	tablat,w,c
  8820  005728  D005               	bra	u7660
  8821  00572A                     u7667:
  8822  00572A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8823  00572E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8824  005732  50EF               	movf	indf0,w,c
  8825  005734                     u7660:
  8826  005734  0900               	iorlw	0
  8827  005736  A4D8               	btfss	status,2,c
  8828  005738  EFA0  F02B         	goto	u7671
  8829  00573C  EFA2  F02B         	goto	u7670
  8830  005740                     u7671:
  8831  005740  EF6E  F02B         	goto	l7048
  8832  005744                     u7670:
  8833  005744                     l7054:
  8834                           
  8835                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 112:     return ret;
  8836  005744  5020               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  8837  005746  0012               	return		;funcret
  8838  005748                     __end_of_lcd_4bit_send_string_pos:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  8842 ;; Defined at:
  8843 ;;		line 76 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  lcd             2   25[COMRAM] PTR const struct .
  8846 ;;		 -> lcd_1(6), 
  8847 ;;  row             1   27[COMRAM] unsigned char 
  8848 ;;  column          1   28[COMRAM] unsigned char 
  8849 ;;  data            1   29[COMRAM] unsigned char 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  ret             1   30[COMRAM] unsigned char 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      unsigned char 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8861 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;Total ram usage:        6 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; Hardware stack levels required when called: 4
  8868 ;; This function calls:
  8869 ;;		_lcd_4bit_send_char_data
  8870 ;;		_lcd_4bits_set_cursor
  8871 ;; This function is called by:
  8872 ;;		_main
  8873 ;;		_lcd_4bit_send_custom_char
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text33
  8878  005D10                     __ptext33:
  8879                           	callstack 0
  8880  005D10                     _lcd_4bit_send_char_data_pos:
  8881                           	callstack 26
  8882  005D10                     
  8883                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 78:     if(((void*)0) == lcd){
  8884  005D10  501A               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  8885  005D12  101B               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)^0,w,c
  8886  005D14  A4D8               	btfss	status,2,c
  8887  005D16  EF8F  F02E         	goto	u7631
  8888  005D1A  EF91  F02E         	goto	u7630
  8889  005D1E                     u7631:
  8890  005D1E  EF95  F02E         	goto	l7034
  8891  005D22                     u7630:
  8892  005D22                     
  8893                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 79:         ret = (Std_ReturnType)0x00;
  8894  005D22  0E00               	movlw	0
  8895  005D24  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8896                           
  8897                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 80:     }
  8898  005D26  EFA9  F02E         	goto	l7036
  8899  005D2A                     l7034:
  8900                           
  8901                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 82:         ret = lcd_4bits_set_cursor(lcd, row, colum
      +                          n);
  8902  005D2A  C01A  F013         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bits_set_cursor@lcd
  8903  005D2E  C01B  F014         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  8904  005D32  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bits_set_cursor@row
  8905  005D36  C01D  F016         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bits_set_cursor@column
  8906  005D3A  EC00  F02B         	call	_lcd_4bits_set_cursor	;wreg free
  8907  005D3E  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8908                           
  8909                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 83:         ret = lcd_4bit_send_char_data(lcd, data);
  8910  005D40  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  8911  005D44  C01B  F010         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  8912  005D48  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  8913  005D4C  EC97  F02C         	call	_lcd_4bit_send_char_data	;wreg free
  8914  005D50  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8915  005D52                     l7036:
  8916                           
  8917                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 85:     return ret;
  8918  005D52  501F               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  8919  005D54  0012               	return		;funcret
  8920  005D56                     __end_of_lcd_4bit_send_char_data_pos:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _lcd_4bits_set_cursor *****************
  8924 ;; Defined at:
  8925 ;;		line 324 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  lcd             2   18[COMRAM] PTR const struct .
  8928 ;;		 -> lcd_1(6), 
  8929 ;;  row             1   20[COMRAM] unsigned char 
  8930 ;;  column          1   21[COMRAM] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  ret             1   24[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      unsigned char 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        7 bytes
  8947 ;; Hardware stack levels used: 1
  8948 ;; Hardware stack levels required when called: 3
  8949 ;; This function calls:
  8950 ;;		_lcd_4bit_send_command
  8951 ;; This function is called by:
  8952 ;;		_lcd_4bit_send_char_data_pos
  8953 ;;		_lcd_4bit_send_string_pos
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text34
  8958  005600                     __ptext34:
  8959                           	callstack 0
  8960  005600                     _lcd_4bits_set_cursor:
  8961                           	callstack 26
  8962  005600                     
  8963                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 325:     Std_ReturnType ret = (Std_ReturnType)0x01;
  8964  005600  0E01               	movlw	1
  8965  005602  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  8966  005604                     
  8967                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 326:     column--;
  8968  005604  0616               	decf	lcd_4bits_set_cursor@column^0,f,c
  8969                           
  8970                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 327:     switch (row){
  8971  005606  EF35  F02B         	goto	l6836
  8972  00560A                     l6828:
  8973  00560A  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  8974  00560E  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  8975  005612  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  8976  005614  0F80               	addlw	128
  8977  005616  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8978  005618  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  8979  00561C  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  8980                           
  8981                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 329:                    break;
  8982  00561E  EF52  F02B         	goto	l6838
  8983  005622                     l6830:
  8984  005622  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  8985  005626  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  8986  00562A  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  8987  00562C  0FC0               	addlw	192
  8988  00562E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  8989  005630  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  8990  005634  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  8991                           
  8992                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 331:                    break;
  8993  005636  EF52  F02B         	goto	l6838
  8994  00563A                     l6832:
  8995  00563A  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  8996  00563E  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  8997  005642  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  8998  005644  0F94               	addlw	148
  8999  005646  6E11               	movwf	lcd_4bit_send_command@command^0,c
  9000  005648  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  9001  00564C  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  9002                           
  9003                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 333:                    break;
  9004  00564E  EF52  F02B         	goto	l6838
  9005  005652                     l6834:
  9006  005652  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  9007  005656  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  9008  00565A  5016               	movf	lcd_4bits_set_cursor@column^0,w,c
  9009  00565C  0FD4               	addlw	212
  9010  00565E  6E11               	movwf	lcd_4bit_send_command@command^0,c
  9011  005660  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
  9012  005664  6E19               	movwf	lcd_4bits_set_cursor@ret^0,c
  9013                           
  9014                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 335:                    break;
  9015  005666  EF52  F02B         	goto	l6838
  9016  00566A                     l6836:
  9017  00566A  5015               	movf	lcd_4bits_set_cursor@row^0,w,c
  9018  00566C  6E17               	movwf	??_lcd_4bits_set_cursor^0,c
  9019  00566E  6A18               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  9020                           
  9021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9022                           ; Switch size 1, requested type "simple"
  9023                           ; Number of cases is 1, Range of values is 0 to 0
  9024                           ; switch strategies available:
  9025                           ; Name         Instructions Cycles
  9026                           ; simple_byte            4     3 (average)
  9027                           ;	Chosen strategy is simple_byte
  9028  005670  5018               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  9029  005672  0A00               	xorlw	0	; case 0
  9030  005674  B4D8               	btfsc	status,2,c
  9031  005676  EF3F  F02B         	goto	l8168
  9032  00567A  EF52  F02B         	goto	l6838
  9033  00567E                     l8168:
  9034                           
  9035                           ; Switch size 1, requested type "simple"
  9036                           ; Number of cases is 4, Range of values is 1 to 4
  9037                           ; switch strategies available:
  9038                           ; Name         Instructions Cycles
  9039                           ; simple_byte           13     7 (average)
  9040                           ;	Chosen strategy is simple_byte
  9041  00567E  5017               	movf	??_lcd_4bits_set_cursor^0,w,c
  9042  005680  0A01               	xorlw	1	; case 1
  9043  005682  B4D8               	btfsc	status,2,c
  9044  005684  EF05  F02B         	goto	l6828
  9045  005688  0A03               	xorlw	3	; case 2
  9046  00568A  B4D8               	btfsc	status,2,c
  9047  00568C  EF11  F02B         	goto	l6830
  9048  005690  0A01               	xorlw	1	; case 3
  9049  005692  B4D8               	btfsc	status,2,c
  9050  005694  EF1D  F02B         	goto	l6832
  9051  005698  0A07               	xorlw	7	; case 4
  9052  00569A  B4D8               	btfsc	status,2,c
  9053  00569C  EF29  F02B         	goto	l6834
  9054  0056A0  EF52  F02B         	goto	l6838
  9055  0056A4                     l6838:
  9056                           
  9057                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 338:     return ret;
  9058  0056A4  5019               	movf	lcd_4bits_set_cursor@ret^0,w,c
  9059  0056A6  0012               	return		;funcret
  9060  0056A8                     __end_of_lcd_4bits_set_cursor:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function _lcd_4bit_send_char_data *****************
  9064 ;; Defined at:
  9065 ;;		line 61 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  lcd             2   14[COMRAM] PTR const struct .
  9068 ;;		 -> lcd_1(6), 
  9069 ;;  data            1   16[COMRAM] unsigned char 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  ret             1   17[COMRAM] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9081 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;Total ram usage:        4 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 2
  9088 ;; This function calls:
  9089 ;;		_gpio_pin_write_logic
  9090 ;;		_lcd_4bits_send_enable_signal
  9091 ;;		_lcd_send_4bits
  9092 ;; This function is called by:
  9093 ;;		_lcd_4bit_send_char_data_pos
  9094 ;;		_lcd_4bit_send_string_pos
  9095 ;;		_lcd_4bit_send_string
  9096 ;;		_lcd_4bit_send_custom_char
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text35
  9101  00592E                     __ptext35:
  9102                           	callstack 0
  9103  00592E                     _lcd_4bit_send_char_data:
  9104                           	callstack 27
  9105  00592E                     
  9106                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  9107  00592E  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  9108  005930  1010               	iorwf	(lcd_4bit_send_char_data@lcd+1)^0,w,c
  9109  005932  A4D8               	btfss	status,2,c
  9110  005934  EF9E  F02C         	goto	u7381
  9111  005938  EFA0  F02C         	goto	u7380
  9112  00593C                     u7381:
  9113  00593C  EFA4  F02C         	goto	l6818
  9114  005940                     u7380:
  9115  005940                     
  9116                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  9117  005940  0E00               	movlw	0
  9118  005942  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9119                           
  9120                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  9121  005944  EFCE  F02C         	goto	l6820
  9122  005948                     l6818:
  9123                           
  9124                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  9125  005948  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  9126  00594C  C010  F002         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@_pin_config+1
  9127  005950  0E01               	movlw	1
  9128  005952  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  9129  005954  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
  9130  005958  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9131                           
  9132                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, data >> 4);
  9133  00595A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  9134  00595E  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  9135  005962  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
  9136  005964  0B0F               	andlw	15
  9137  005966  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
  9138  005968  ECAB  F02D         	call	_lcd_send_4bits	;wreg free
  9139  00596C  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9140                           
  9141                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bits_send_enable_signal(lcd);
  9142  00596E  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  9143  005972  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  9144  005976  EC55  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
  9145  00597A  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9146                           
  9147                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, data >> 0);
  9148  00597C  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  9149  005980  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  9150  005984  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  9151  005988  ECAB  F02D         	call	_lcd_send_4bits	;wreg free
  9152  00598C  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9153                           
  9154                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bits_send_enable_signal(lcd);
  9155  00598E  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  9156  005992  C010  F00C         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bits_send_enable_signal@lcd+1
  9157  005996  EC55  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
  9158  00599A  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
  9159  00599C                     l6820:
  9160                           
  9161                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  9162  00599C  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
  9163  00599E  0012               	return		;funcret
  9164  0059A0                     __end_of_lcd_4bit_send_char_data:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _keypad_get_value *****************
  9168 ;; Defined at:
  9169 ;;		line 56 in file "ECU_layer/KeyPad/ecu_keypad.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  9172 ;;		 -> keypad_1(10), 
  9173 ;;  value           2   12[COMRAM] PTR unsigned char 
  9174 ;;		 -> val(1), 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  l_columns_co    1   20[COMRAM] unsigned char 
  9177 ;;  l_row_counte    1   19[COMRAM] unsigned char 
  9178 ;;  l_counter       1   18[COMRAM] unsigned char 
  9179 ;;  column_logic    1   17[COMRAM] enum E2965
  9180 ;;  ret             1   16[COMRAM] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      unsigned char 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;Total ram usage:       11 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; Hardware stack levels required when called: 1
  9197 ;; This function calls:
  9198 ;;		_gpio_pin_read_logic
  9199 ;;		_gpio_pin_write_logic
  9200 ;; This function is called by:
  9201 ;;		_main
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text36
  9206  004BB0                     __ptext36:
  9207                           	callstack 0
  9208  004BB0                     _keypad_get_value:
  9209                           	callstack 29
  9210  004BB0  0E00               	movlw	0
  9211  004BB2  6E14               	movwf	keypad_get_value@l_row_counter^0,c
  9212  004BB4  0E00               	movlw	0
  9213  004BB6  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  9214  004BB8  0E00               	movlw	0
  9215  004BBA  6E13               	movwf	keypad_get_value@l_counter^0,c
  9216  004BBC  0E00               	movlw	0
  9217  004BBE  6E12               	movwf	keypad_get_value@column_logic^0,c
  9218  004BC0  500B               	movf	keypad_get_value@_keypad_obj^0,w,c
  9219  004BC2  100C               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  9220  004BC4  B4D8               	btfsc	status,2,c
  9221  004BC6  EFE7  F025         	goto	u7771
  9222  004BCA  EFE9  F025         	goto	u7770
  9223  004BCE                     u7771:
  9224  004BCE  EFF2  F025         	goto	l7146
  9225  004BD2                     u7770:
  9226  004BD2  500D               	movf	keypad_get_value@value^0,w,c
  9227  004BD4  100E               	iorwf	(keypad_get_value@value+1)^0,w,c
  9228  004BD6  A4D8               	btfss	status,2,c
  9229  004BD8  EFF0  F025         	goto	u7781
  9230  004BDC  EFF2  F025         	goto	u7780
  9231  004BE0                     u7781:
  9232  004BE0  EFF6  F025         	goto	l7148
  9233  004BE4                     u7780:
  9234  004BE4                     l7146:
  9235  004BE4  0E00               	movlw	0
  9236  004BE6  6E11               	movwf	keypad_get_value@ret^0,c
  9237  004BE8  EF67  F026         	goto	l7190
  9238  004BEC                     l7148:
  9239  004BEC  0E00               	movlw	0
  9240  004BEE  6E14               	movwf	keypad_get_value@l_row_counter^0,c
  9241  004BF0                     l7154:
  9242  004BF0  0E00               	movlw	0
  9243  004BF2  6E13               	movwf	keypad_get_value@l_counter^0,c
  9244  004BF4                     l7160:
  9245  004BF4  5013               	movf	keypad_get_value@l_counter^0,w,c
  9246  004BF6  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  9247  004BF8  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  9248  004BFA  0E00               	movlw	0
  9249  004BFC  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  9250  004BFE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  9251  004C00  0E00               	movlw	0
  9252  004C02  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  9253  004C04  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
  9254  004C08  2A13               	incf	keypad_get_value@l_counter^0,f,c
  9255  004C0A  0E03               	movlw	3
  9256  004C0C  6413               	cpfsgt	keypad_get_value@l_counter^0,c
  9257  004C0E  EF0B  F026         	goto	u7791
  9258  004C12  EF0D  F026         	goto	u7790
  9259  004C16                     u7791:
  9260  004C16  EFFA  F025         	goto	l7160
  9261  004C1A                     u7790:
  9262  004C1A  5014               	movf	keypad_get_value@l_row_counter^0,w,c
  9263  004C1C  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  9264  004C1E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  9265  004C20  0E00               	movlw	0
  9266  004C22  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  9267  004C24  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  9268  004C26  0E01               	movlw	1
  9269  004C28  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  9270  004C2A  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
  9271  004C2E  0E82               	movlw	130
  9272  004C30  6E0F               	movwf	??_keypad_get_value^0,c
  9273  004C32  0EDE               	movlw	222
  9274  004C34                     u8827:
  9275  004C34  2EE8               	decfsz	wreg,f,c
  9276  004C36  D7FE               	bra	u8827
  9277  004C38  2E0F               	decfsz	??_keypad_get_value^0,f,c
  9278  004C3A  D7FC               	bra	u8827
  9279  004C3C  0E00               	movlw	0
  9280  004C3E  6E15               	movwf	keypad_get_value@l_columns_counter^0,c
  9281  004C40                     l7176:
  9282  004C40  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  9283  004C42  240B               	addwf	keypad_get_value@_keypad_obj^0,w,c
  9284  004C44  6E0F               	movwf	??_keypad_get_value^0,c
  9285  004C46  0E00               	movlw	0
  9286  004C48  200C               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  9287  004C4A  6E10               	movwf	(??_keypad_get_value+1)^0,c
  9288  004C4C  0E04               	movlw	4
  9289  004C4E  240F               	addwf	??_keypad_get_value^0,w,c
  9290  004C50  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  9291  004C52  0E00               	movlw	0
  9292  004C54  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
  9293  004C56  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  9294  004C58  0E12               	movlw	low keypad_get_value@column_logic
  9295  004C5A  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  9296  004C5C  0E00               	movlw	high keypad_get_value@column_logic
  9297  004C5E  6E04               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  9298  004C60  ECF7  F029         	call	_gpio_pin_read_logic	;wreg free
  9299  004C64  6E11               	movwf	keypad_get_value@ret^0,c
  9300  004C66  0412               	decf	keypad_get_value@column_logic^0,w,c
  9301  004C68  A4D8               	btfss	status,2,c
  9302  004C6A  EF39  F026         	goto	u7801
  9303  004C6E  EF3B  F026         	goto	u7800
  9304  004C72                     u7801:
  9305  004C72  EF55  F026         	goto	l7182
  9306  004C76                     u7800:
  9307  004C76  5014               	movf	keypad_get_value@l_row_counter^0,w,c
  9308  004C78  0D06               	mullw	6
  9309  004C7A  0E01               	movlw	low _btn_values
  9310  004C7C  6E0F               	movwf	??_keypad_get_value^0,c
  9311  004C7E  0E10               	movlw	high _btn_values
  9312  004C80  6E10               	movwf	(??_keypad_get_value+1)^0,c
  9313  004C82  50F3               	movf	243,w,c
  9314  004C84  260F               	addwf	??_keypad_get_value^0,f,c
  9315  004C86  50F4               	movf	244,w,c
  9316  004C88  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  9317  004C8A  5015               	movf	keypad_get_value@l_columns_counter^0,w,c
  9318  004C8C  260F               	addwf	??_keypad_get_value^0,f,c
  9319  004C8E  0E00               	movlw	0
  9320  004C90  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  9321  004C92  C00F  FFF6         	movff	??_keypad_get_value,tblptrl
  9322  004C96  C010  FFF7         	movff	??_keypad_get_value+1,tblptrh
  9323  004C9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9324  004C9A  6AF8               	clrf	tblptru,c
  9325  004C9C                     	endif
  9326  004C9C                     	if	0	;tblptru may be non-zero
  9327  004C9C                     	endif
  9328  004C9C  C00D  FFD9         	movff	keypad_get_value@value,fsr2l
  9329  004CA0  C00E  FFDA         	movff	keypad_get_value@value+1,fsr2h
  9330  004CA4  0008               	tblrd		*
  9331  004CA6  CFF5 FFDF          	movff	tablat,indf2
  9332  004CAA                     l7182:
  9333  004CAA  2A15               	incf	keypad_get_value@l_columns_counter^0,f,c
  9334  004CAC  0E05               	movlw	5
  9335  004CAE  6415               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  9336  004CB0  EF5C  F026         	goto	u7811
  9337  004CB4  EF5E  F026         	goto	u7810
  9338  004CB8                     u7811:
  9339  004CB8  EF20  F026         	goto	l7176
  9340  004CBC                     u7810:
  9341  004CBC  2A14               	incf	keypad_get_value@l_row_counter^0,f,c
  9342  004CBE  0E03               	movlw	3
  9343  004CC0  6414               	cpfsgt	keypad_get_value@l_row_counter^0,c
  9344  004CC2  EF65  F026         	goto	u7821
  9345  004CC6  EF67  F026         	goto	u7820
  9346  004CCA                     u7821:
  9347  004CCA  EFF8  F025         	goto	l7154
  9348  004CCE                     u7820:
  9349  004CCE                     l7190:
  9350  004CCE  5011               	movf	keypad_get_value@ret^0,w,c
  9351  004CD0  0012               	return		;funcret
  9352  004CD2                     __end_of_keypad_get_value:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _gpio_pin_read_logic *****************
  9356 ;; Defined at:
  9357 ;;		line 106 in file "MCAL_layer/GPIO/hal_gpio.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  9360 ;;		 -> keypad_1.keypad_column_pins(6), keypad_1(10), 
  9361 ;;  logic           2    2[COMRAM] PTR enum E2965
  9362 ;;		 -> keypad_get_value@column_logic(1), button_read_state@Pin_Logic_Status(1), 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;  ret             1    9[COMRAM] unsigned char 
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      unsigned char 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;Total ram usage:       10 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_keypad_get_value
  9384 ;;		_button_read_state
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text37
  9389  0053EE                     __ptext37:
  9390                           	callstack 0
  9391  0053EE                     _gpio_pin_read_logic:
  9392                           	callstack 29
  9393  0053EE                     
  9394                           ;MCAL_layer/GPIO/hal_gpio.c: 107:     Std_ReturnType ret = (Std_ReturnType)0x01;
  9395  0053EE  0E01               	movlw	1
  9396  0053F0  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  9397  0053F2                     
  9398                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1){
  9399  0053F2  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  9400  0053F4  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  9401  0053F6  B4D8               	btfsc	status,2,c
  9402  0053F8  EF00  F02A         	goto	u7341
  9403  0053FC  EF02  F02A         	goto	u7340
  9404  005400                     u7341:
  9405  005400  EF1C  F02A         	goto	l6804
  9406  005404                     u7340:
  9407  005404  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  9408  005406  1004               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  9409  005408  B4D8               	btfsc	status,2,c
  9410  00540A  EF09  F02A         	goto	u7351
  9411  00540E  EF0B  F02A         	goto	u7350
  9412  005412                     u7351:
  9413  005412  EF1C  F02A         	goto	l6804
  9414  005416                     u7350:
  9415  005416  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  9416  00541A  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  9417  00541E  30DF               	rrcf	223,w,c
  9418  005420  32E8               	rrcf	wreg,f,c
  9419  005422  32E8               	rrcf	wreg,f,c
  9420  005424  0B07               	andlw	7
  9421  005426  6E05               	movwf	??_gpio_pin_read_logic^0,c
  9422  005428  0E07               	movlw	7
  9423  00542A  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
  9424  00542C  EF1A  F02A         	goto	u7361
  9425  005430  EF1C  F02A         	goto	u7360
  9426  005434                     u7361:
  9427  005434  EF20  F02A         	goto	l6806
  9428  005438                     u7360:
  9429  005438                     l6804:
  9430                           
  9431                           ;MCAL_layer/GPIO/hal_gpio.c: 109:         ret = (Std_ReturnType)0x00;
  9432  005438  0E00               	movlw	0
  9433  00543A  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  9434                           
  9435                           ;MCAL_layer/GPIO/hal_gpio.c: 110:     }
  9436  00543C  EF51  F02A         	goto	l6808
  9437  005440                     l6806:
  9438                           
  9439                           ;MCAL_layer/GPIO/hal_gpio.c: 112:         *logic = ((*port_registers[_pin_config->port] 
      +                          >> _pin_config->pin) & (uint8)1);
  9440  005440  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  9441  005444  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  9442  005448  30DF               	rrcf	223,w,c
  9443  00544A  32E8               	rrcf	wreg,f,c
  9444  00544C  32E8               	rrcf	wreg,f,c
  9445  00544E  0B07               	andlw	7
  9446  005450  6E05               	movwf	??_gpio_pin_read_logic^0,c
  9447  005452  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  9448  005456  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  9449  00545A  50DF               	movf	223,w,c
  9450  00545C  0B07               	andlw	7
  9451  00545E  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  9452  005460  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  9453  005462  0D02               	mullw	2
  9454  005464  0E86               	movlw	low _port_registers
  9455  005466  24F3               	addwf	243,w,c
  9456  005468  6ED9               	movwf	fsr2l,c
  9457  00546A  0E01               	movlw	high _port_registers
  9458  00546C  20F4               	addwfc	prodh,w,c
  9459  00546E  6EDA               	movwf	fsr2h,c
  9460  005470  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  9461  005474  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  9462  005478  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  9463  00547C  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  9464  005480  50DF               	movf	indf2,w,c
  9465  005482  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  9466  005484  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  9467  005486  EF47  F02A         	goto	u7374
  9468  00548A                     u7375:
  9469  00548A  90D8               	bcf	status,0,c
  9470  00548C  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  9471  00548E                     u7374:
  9472  00548E  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  9473  005490  EF45  F02A         	goto	u7375
  9474  005494  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  9475  005496  0B01               	andlw	1
  9476  005498  C003  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  9477  00549C  C004  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  9478  0054A0  6EDF               	movwf	indf2,c
  9479  0054A2                     l6808:
  9480                           
  9481                           ;MCAL_layer/GPIO/hal_gpio.c: 114:     return ret;
  9482  0054A2  500A               	movf	gpio_pin_read_logic@ret^0,w,c
  9483  0054A4  0012               	return		;funcret
  9484  0054A6                     __end_of_gpio_pin_read_logic:
  9485                           	callstack 0
  9486                           
  9487 ;; *************** function _infixToPostfix *****************
  9488 ;; Defined at:
  9489 ;;		line 74 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  infix           2    5[COMRAM] PTR const unsigned char 
  9492 ;;		 -> infix(100), 
  9493 ;;  postfix         2    7[COMRAM] PTR unsigned char 
  9494 ;;		 -> postfix(100), 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  current         1   12[COMRAM] unsigned char 
  9497 ;;  operatorStac  102   17[COMRAM] struct Stack
  9498 ;;  j               2   15[COMRAM] int 
  9499 ;;  i               2   13[COMRAM] int 
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      void 
  9502 ;; Registers used:
  9503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Locals:       107       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;      Totals:       114       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9513 ;;Total ram usage:      114 bytes
  9514 ;; Hardware stack levels used: 1
  9515 ;; Hardware stack levels required when called: 1
  9516 ;; This function calls:
  9517 ;;		_check_digit
  9518 ;;		_initialize
  9519 ;;		_pop
  9520 ;;		_precedence
  9521 ;;		_push
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text38
  9528  003DBA                     __ptext38:
  9529                           	callstack 0
  9530  003DBA                     _infixToPostfix:
  9531                           	callstack 29
  9532  003DBA                     
  9533                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 75:     struct Stack operatorStack;;Algori
      +                          thms/Infix_to_postfix/infix_to_post.c: 76:     initialize(&operatorStack);
  9534  003DBA  0E12               	movlw	low infixToPostfix@operatorStack
  9535  003DBC  6E01               	movwf	initialize@stack^0,c
  9536  003DBE  0E00               	movlw	high infixToPostfix@operatorStack
  9537  003DC0  6E02               	movwf	(initialize@stack+1)^0,c
  9538  003DC2  EC3F  F030         	call	_initialize	;wreg free
  9539  003DC6                     
  9540                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 78:     int i = 0;
  9541  003DC6  0E00               	movlw	0
  9542  003DC8  6E0F               	movwf	(infixToPostfix@i+1)^0,c
  9543  003DCA  0E00               	movlw	0
  9544  003DCC  6E0E               	movwf	infixToPostfix@i^0,c
  9545  003DCE                     
  9546                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 79:     int j = 0;
  9547  003DCE  0E00               	movlw	0
  9548  003DD0  6E11               	movwf	(infixToPostfix@j+1)^0,c
  9549  003DD2  0E00               	movlw	0
  9550  003DD4  6E10               	movwf	infixToPostfix@j^0,c
  9551                           
  9552                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 80:     while (infix[i] != '\0') {
  9553  003DD6  EF9C  F01F         	goto	l7308
  9554  003DDA                     l7272:
  9555                           
  9556                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 81:         char current = infix[i];
  9557  003DDA  500E               	movf	infixToPostfix@i^0,w,c
  9558  003DDC  2406               	addwf	infixToPostfix@infix^0,w,c
  9559  003DDE  6ED9               	movwf	fsr2l,c
  9560  003DE0  500F               	movf	(infixToPostfix@i+1)^0,w,c
  9561  003DE2  2007               	addwfc	(infixToPostfix@infix+1)^0,w,c
  9562  003DE4  6EDA               	movwf	fsr2h,c
  9563  003DE6  50DF               	movf	indf2,w,c
  9564  003DE8  6E0D               	movwf	infixToPostfix@current^0,c
  9565  003DEA                     
  9566                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 83:         if (current == ' ') {
  9567  003DEA  0E20               	movlw	32
  9568  003DEC  180D               	xorwf	infixToPostfix@current^0,w,c
  9569  003DEE  A4D8               	btfss	status,2,c
  9570  003DF0  EFFC  F01E         	goto	u7901
  9571  003DF4  EFFE  F01E         	goto	u7900
  9572  003DF8                     u7901:
  9573  003DF8  EF02  F01F         	goto	l7278
  9574  003DFC                     u7900:
  9575  003DFC                     l7276:
  9576                           
  9577                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 84:             i++;
  9578  003DFC  4A0E               	infsnz	infixToPostfix@i^0,f,c
  9579  003DFE  2A0F               	incf	(infixToPostfix@i+1)^0,f,c
  9580                           
  9581                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 85:             continue;
  9582  003E00  EF9C  F01F         	goto	l7308
  9583  003E04                     l7278:
  9584                           
  9585                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 88:         if (check_digit(current) || cu
      +                          rrent == '.') {
  9586  003E04  500D               	movf	infixToPostfix@current^0,w,c
  9587  003E06  ECC9  F02F         	call	_check_digit
  9588  003E0A  5001               	movf	?_check_digit^0,w,c
  9589  003E0C  1002               	iorwf	(?_check_digit+1)^0,w,c
  9590  003E0E  A4D8               	btfss	status,2,c
  9591  003E10  EF0C  F01F         	goto	u7911
  9592  003E14  EF0E  F01F         	goto	u7910
  9593  003E18                     u7911:
  9594  003E18  EF2B  F01F         	goto	l7288
  9595  003E1C                     u7910:
  9596  003E1C  0E2E               	movlw	46
  9597  003E1E  180D               	xorwf	infixToPostfix@current^0,w,c
  9598  003E20  A4D8               	btfss	status,2,c
  9599  003E22  EF15  F01F         	goto	u7921
  9600  003E26  EF17  F01F         	goto	u7920
  9601  003E2A                     u7921:
  9602  003E2A  EF69  F01F         	goto	l7300
  9603  003E2E                     u7920:
  9604  003E2E  EF2B  F01F         	goto	l7288
  9605  003E32                     l7282:
  9606                           
  9607                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 90:                 postfix[j++] = infix[i
      +                          ++];
  9608  003E32  500E               	movf	infixToPostfix@i^0,w,c
  9609  003E34  2406               	addwf	infixToPostfix@infix^0,w,c
  9610  003E36  6ED9               	movwf	fsr2l,c
  9611  003E38  500F               	movf	(infixToPostfix@i+1)^0,w,c
  9612  003E3A  2007               	addwfc	(infixToPostfix@infix+1)^0,w,c
  9613  003E3C  6EDA               	movwf	fsr2h,c
  9614  003E3E  5010               	movf	infixToPostfix@j^0,w,c
  9615  003E40  2408               	addwf	infixToPostfix@postfix^0,w,c
  9616  003E42  6EE1               	movwf	fsr1l,c
  9617  003E44  5011               	movf	(infixToPostfix@j+1)^0,w,c
  9618  003E46  2009               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  9619  003E48  6EE2               	movwf	fsr1h,c
  9620  003E4A  CFDF FFE7          	movff	indf2,indf1
  9621  003E4E  4A0E               	infsnz	infixToPostfix@i^0,f,c
  9622  003E50  2A0F               	incf	(infixToPostfix@i+1)^0,f,c
  9623  003E52  4A10               	infsnz	infixToPostfix@j^0,f,c
  9624  003E54  2A11               	incf	(infixToPostfix@j+1)^0,f,c
  9625  003E56                     l7288:
  9626                           
  9627                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 89:             while (check_digit(infix[i
      +                          ]) || infix[i] == '.') {
  9628  003E56  500E               	movf	infixToPostfix@i^0,w,c
  9629  003E58  2406               	addwf	infixToPostfix@infix^0,w,c
  9630  003E5A  6ED9               	movwf	fsr2l,c
  9631  003E5C  500F               	movf	(infixToPostfix@i+1)^0,w,c
  9632  003E5E  2007               	addwfc	(infixToPostfix@infix+1)^0,w,c
  9633  003E60  6EDA               	movwf	fsr2h,c
  9634  003E62  50DF               	movf	indf2,w,c
  9635  003E64  ECC9  F02F         	call	_check_digit
  9636  003E68  5001               	movf	?_check_digit^0,w,c
  9637  003E6A  1002               	iorwf	(?_check_digit+1)^0,w,c
  9638  003E6C  A4D8               	btfss	status,2,c
  9639  003E6E  EF3B  F01F         	goto	u7931
  9640  003E72  EF3D  F01F         	goto	u7930
  9641  003E76                     u7931:
  9642  003E76  EF19  F01F         	goto	l7282
  9643  003E7A                     u7930:
  9644  003E7A  500E               	movf	infixToPostfix@i^0,w,c
  9645  003E7C  2406               	addwf	infixToPostfix@infix^0,w,c
  9646  003E7E  6ED9               	movwf	fsr2l,c
  9647  003E80  500F               	movf	(infixToPostfix@i+1)^0,w,c
  9648  003E82  2007               	addwfc	(infixToPostfix@infix+1)^0,w,c
  9649  003E84  6EDA               	movwf	fsr2h,c
  9650  003E86  0E2E               	movlw	46
  9651  003E88  18DE               	xorwf	postinc2,w,c
  9652  003E8A  B4D8               	btfsc	status,2,c
  9653  003E8C  EF4A  F01F         	goto	u7941
  9654  003E90  EF4C  F01F         	goto	u7940
  9655  003E94                     u7941:
  9656  003E94  EF19  F01F         	goto	l7282
  9657  003E98                     u7940:
  9658  003E98                     
  9659                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 92:             postfix[j++] = ' ';
  9660  003E98  5010               	movf	infixToPostfix@j^0,w,c
  9661  003E9A  2408               	addwf	infixToPostfix@postfix^0,w,c
  9662  003E9C  6ED9               	movwf	fsr2l,c
  9663  003E9E  5011               	movf	(infixToPostfix@j+1)^0,w,c
  9664  003EA0  2009               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  9665  003EA2  6EDA               	movwf	fsr2h,c
  9666  003EA4  0E20               	movlw	32
  9667  003EA6  6EDF               	movwf	indf2,c
  9668  003EA8  4A10               	infsnz	infixToPostfix@j^0,f,c
  9669  003EAA  2A11               	incf	(infixToPostfix@j+1)^0,f,c
  9670                           
  9671                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 93:         }else {
  9672  003EAC  EF9C  F01F         	goto	l7308
  9673  003EB0                     l7296:
  9674                           
  9675                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 95:                 postfix[j++] = pop(&op
      +                          eratorStack);
  9676  003EB0  0E12               	movlw	low infixToPostfix@operatorStack
  9677  003EB2  6E01               	movwf	pop@stack^0,c
  9678  003EB4  0E00               	movlw	high infixToPostfix@operatorStack
  9679  003EB6  6E02               	movwf	(pop@stack+1)^0,c
  9680  003EB8  EC16  F030         	call	_pop	;wreg free
  9681  003EBC  6E0A               	movwf	??_infixToPostfix^0,c
  9682  003EBE  5010               	movf	infixToPostfix@j^0,w,c
  9683  003EC0  2408               	addwf	infixToPostfix@postfix^0,w,c
  9684  003EC2  6ED9               	movwf	fsr2l,c
  9685  003EC4  5011               	movf	(infixToPostfix@j+1)^0,w,c
  9686  003EC6  2009               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  9687  003EC8  6EDA               	movwf	fsr2h,c
  9688  003ECA  C00A  FFDF         	movff	??_infixToPostfix,indf2
  9689  003ECE  4A10               	infsnz	infixToPostfix@j^0,f,c
  9690  003ED0  2A11               	incf	(infixToPostfix@j+1)^0,f,c
  9691  003ED2                     l7300:
  9692                           
  9693                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 94:             while (operatorStack.top !
      +                          = -1 && precedence(current) <= precedence(operatorStack.data[operatorStack.top])) {
  9694  003ED2  2876               	incf	(infixToPostfix@operatorStack+100)^0,w,c
  9695  003ED4  E108               	bnz	u7950
  9696  003ED6  2877               	incf	(infixToPostfix@operatorStack+101)^0,w,c
  9697  003ED8  B4D8               	btfsc	status,2,c
  9698  003EDA  EF71  F01F         	goto	u7951
  9699  003EDE  EF73  F01F         	goto	u7950
  9700  003EE2                     u7951:
  9701  003EE2  EF92  F01F         	goto	l7304
  9702  003EE6                     u7950:
  9703  003EE6  0E12               	movlw	low infixToPostfix@operatorStack
  9704  003EE8  2476               	addwf	(infixToPostfix@operatorStack+100)^0,w,c
  9705  003EEA  6ED9               	movwf	fsr2l,c
  9706  003EEC  0E00               	movlw	high infixToPostfix@operatorStack
  9707  003EEE  2077               	addwfc	(infixToPostfix@operatorStack+101)^0,w,c
  9708  003EF0  6EDA               	movwf	fsr2h,c
  9709  003EF2  50DF               	movf	indf2,w,c
  9710  003EF4  EC3F  F02D         	call	_precedence
  9711  003EF8  C001  F00A         	movff	?_precedence,??_infixToPostfix
  9712  003EFC  C002  F00B         	movff	?_precedence+1,??_infixToPostfix+1
  9713  003F00  500D               	movf	infixToPostfix@current^0,w,c
  9714  003F02  EC3F  F02D         	call	_precedence
  9715  003F06  5001               	movf	?_precedence^0,w,c
  9716  003F08  5C0A               	subwf	??_infixToPostfix^0,w,c
  9717  003F0A  500B               	movf	(??_infixToPostfix+1)^0,w,c
  9718  003F0C  0A80               	xorlw	128
  9719  003F0E  6E0C               	movwf	(??_infixToPostfix+2)^0,c
  9720  003F10  5002               	movf	(?_precedence+1)^0,w,c
  9721  003F12  0A80               	xorlw	128
  9722  003F14  580C               	subwfb	(??_infixToPostfix+2)^0,w,c
  9723  003F16  B0D8               	btfsc	status,0,c
  9724  003F18  EF90  F01F         	goto	u7961
  9725  003F1C  EF92  F01F         	goto	u7960
  9726  003F20                     u7961:
  9727  003F20  EF58  F01F         	goto	l7296
  9728  003F24                     u7960:
  9729  003F24                     l7304:
  9730                           
  9731                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 97:             push(&operatorStack, curre
      +                          nt);
  9732  003F24  0E12               	movlw	low infixToPostfix@operatorStack
  9733  003F26  6E01               	movwf	push@stack^0,c
  9734  003F28  0E00               	movlw	high infixToPostfix@operatorStack
  9735  003F2A  6E02               	movwf	(push@stack+1)^0,c
  9736  003F2C  C00D  F003         	movff	infixToPostfix@current,push@c
  9737  003F30  EC00  F030         	call	_push	;wreg free
  9738  003F34  EFFE  F01E         	goto	l7276
  9739  003F38                     l7308:
  9740                           
  9741                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 80:     while (infix[i] != '\0') {
  9742  003F38  500E               	movf	infixToPostfix@i^0,w,c
  9743  003F3A  2406               	addwf	infixToPostfix@infix^0,w,c
  9744  003F3C  6ED9               	movwf	fsr2l,c
  9745  003F3E  500F               	movf	(infixToPostfix@i+1)^0,w,c
  9746  003F40  2007               	addwfc	(infixToPostfix@infix+1)^0,w,c
  9747  003F42  6EDA               	movwf	fsr2h,c
  9748  003F44  50DF               	movf	indf2,w,c
  9749  003F46  A4D8               	btfss	status,2,c
  9750  003F48  EFA8  F01F         	goto	u7971
  9751  003F4C  EFAA  F01F         	goto	u7970
  9752  003F50                     u7971:
  9753  003F50  EFED  F01E         	goto	l7272
  9754  003F54                     u7970:
  9755  003F54  EFBD  F01F         	goto	l7314
  9756  003F58                     l7310:
  9757                           
  9758                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 103:         postfix[j++] = pop(&operatorS
      +                          tack);
  9759  003F58  0E12               	movlw	low infixToPostfix@operatorStack
  9760  003F5A  6E01               	movwf	pop@stack^0,c
  9761  003F5C  0E00               	movlw	high infixToPostfix@operatorStack
  9762  003F5E  6E02               	movwf	(pop@stack+1)^0,c
  9763  003F60  EC16  F030         	call	_pop	;wreg free
  9764  003F64  6E0A               	movwf	??_infixToPostfix^0,c
  9765  003F66  5010               	movf	infixToPostfix@j^0,w,c
  9766  003F68  2408               	addwf	infixToPostfix@postfix^0,w,c
  9767  003F6A  6ED9               	movwf	fsr2l,c
  9768  003F6C  5011               	movf	(infixToPostfix@j+1)^0,w,c
  9769  003F6E  2009               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  9770  003F70  6EDA               	movwf	fsr2h,c
  9771  003F72  C00A  FFDF         	movff	??_infixToPostfix,indf2
  9772  003F76  4A10               	infsnz	infixToPostfix@j^0,f,c
  9773  003F78  2A11               	incf	(infixToPostfix@j+1)^0,f,c
  9774  003F7A                     l7314:
  9775                           
  9776                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 102:     while (operatorStack.top != -1) {
  9777  003F7A  2876               	incf	(infixToPostfix@operatorStack+100)^0,w,c
  9778  003F7C  E106               	bnz	u7981
  9779  003F7E  2877               	incf	(infixToPostfix@operatorStack+101)^0,w,c
  9780  003F80  A4D8               	btfss	status,2,c
  9781  003F82  EFC5  F01F         	goto	u7981
  9782  003F86  EFC7  F01F         	goto	u7980
  9783  003F8A                     u7981:
  9784  003F8A  EFAC  F01F         	goto	l7310
  9785  003F8E                     u7980:
  9786  003F8E                     
  9787                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 106:     postfix[j] = '\0';
  9788  003F8E  5010               	movf	infixToPostfix@j^0,w,c
  9789  003F90  2408               	addwf	infixToPostfix@postfix^0,w,c
  9790  003F92  6ED9               	movwf	fsr2l,c
  9791  003F94  5011               	movf	(infixToPostfix@j+1)^0,w,c
  9792  003F96  2009               	addwfc	(infixToPostfix@postfix+1)^0,w,c
  9793  003F98  6EDA               	movwf	fsr2h,c
  9794  003F9A  0E00               	movlw	0
  9795  003F9C  6EDF               	movwf	indf2,c
  9796  003F9E  0012               	return		;funcret
  9797  003FA0                     __end_of_infixToPostfix:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _push *****************
  9801 ;; Defined at:
  9802 ;;		line 38 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  stack           2    0[COMRAM] PTR struct Stack
  9805 ;;		 -> infixToPostfix@operatorStack(102), 
  9806 ;;  c               1    2[COMRAM] unsigned char 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;Total ram usage:        5 bytes
  9823 ;; Hardware stack levels used: 1
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_infixToPostfix
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text39
  9832  006000                     __ptext39:
  9833                           	callstack 0
  9834  006000                     _push:
  9835                           	callstack 29
  9836  006000                     
  9837                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 39:     stack->data[++stack->top] = c;
  9838  006000  EE20 F064          	lfsr	2,100
  9839  006004  5001               	movf	push@stack^0,w,c
  9840  006006  26D9               	addwf	fsr2l,f,c
  9841  006008  5002               	movf	(push@stack+1)^0,w,c
  9842  00600A  22DA               	addwfc	fsr2h,f,c
  9843  00600C  2ADE               	incf	postinc2,f,c
  9844  00600E  0E00               	movlw	0
  9845  006010  22DD               	addwfc	postdec2,f,c
  9846  006012  CFDE F004          	movff	postinc2,??_push
  9847  006016  CFDD F005          	movff	postdec2,??_push+1
  9848  00601A  5004               	movf	??_push^0,w,c
  9849  00601C  2401               	addwf	push@stack^0,w,c
  9850  00601E  6ED9               	movwf	fsr2l,c
  9851  006020  5005               	movf	(??_push+1)^0,w,c
  9852  006022  2002               	addwfc	(push@stack+1)^0,w,c
  9853  006024  6EDA               	movwf	fsr2h,c
  9854  006026  C003  FFDF         	movff	push@c,indf2
  9855  00602A  0012               	return		;funcret
  9856  00602C                     __end_of_push:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _precedence *****************
  9860 ;; Defined at:
  9861 ;;		line 53 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  op              1    wreg     unsigned char 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  op              1    2[COMRAM] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  2    0[COMRAM] int 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;Total ram usage:        3 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_infixToPostfix
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text40
  9889  005A7E                     __ptext40:
  9890                           	callstack 0
  9891  005A7E                     _precedence:
  9892                           	callstack 29
  9893                           
  9894                           ;incstack = 0
  9895                           ;precedence@op stored from wreg
  9896  005A7E  6E03               	movwf	precedence@op^0,c
  9897  005A80                     
  9898                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 54:     if (op == '+' || op == '-')
  9899  005A80  0E2B               	movlw	43
  9900  005A82  1803               	xorwf	precedence@op^0,w,c
  9901  005A84  B4D8               	btfsc	status,2,c
  9902  005A86  EF47  F02D         	goto	u7441
  9903  005A8A  EF49  F02D         	goto	u7440
  9904  005A8E                     u7441:
  9905  005A8E  EF52  F02D         	goto	l6924
  9906  005A92                     u7440:
  9907  005A92  0E2D               	movlw	45
  9908  005A94  1803               	xorwf	precedence@op^0,w,c
  9909  005A96  A4D8               	btfss	status,2,c
  9910  005A98  EF50  F02D         	goto	u7451
  9911  005A9C  EF52  F02D         	goto	u7450
  9912  005AA0                     u7451:
  9913  005AA0  EF58  F02D         	goto	l6928
  9914  005AA4                     u7450:
  9915  005AA4                     l6924:
  9916                           
  9917                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 55:         return 1;
  9918  005AA4  0E00               	movlw	0
  9919  005AA6  6E02               	movwf	(?_precedence+1)^0,c
  9920  005AA8  0E01               	movlw	1
  9921  005AAA  6E01               	movwf	?_precedence^0,c
  9922  005AAC  EF74  F02D         	goto	l907
  9923  005AB0                     l6928:
  9924                           
  9925                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 56:     if (op == '*' || op == '/')
  9926  005AB0  0E2A               	movlw	42
  9927  005AB2  1803               	xorwf	precedence@op^0,w,c
  9928  005AB4  B4D8               	btfsc	status,2,c
  9929  005AB6  EF5F  F02D         	goto	u7461
  9930  005ABA  EF61  F02D         	goto	u7460
  9931  005ABE                     u7461:
  9932  005ABE  EF6A  F02D         	goto	l6932
  9933  005AC2                     u7460:
  9934  005AC2  0E2F               	movlw	47
  9935  005AC4  1803               	xorwf	precedence@op^0,w,c
  9936  005AC6  A4D8               	btfss	status,2,c
  9937  005AC8  EF68  F02D         	goto	u7471
  9938  005ACC  EF6A  F02D         	goto	u7470
  9939  005AD0                     u7471:
  9940  005AD0  EF70  F02D         	goto	l6936
  9941  005AD4                     u7470:
  9942  005AD4                     l6932:
  9943                           
  9944                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 57:         return 2;
  9945  005AD4  0E00               	movlw	0
  9946  005AD6  6E02               	movwf	(?_precedence+1)^0,c
  9947  005AD8  0E02               	movlw	2
  9948  005ADA  6E01               	movwf	?_precedence^0,c
  9949  005ADC  EF74  F02D         	goto	l907
  9950  005AE0                     l6936:
  9951                           
  9952                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 58:     return 0;
  9953  005AE0  0E00               	movlw	0
  9954  005AE2  6E02               	movwf	(?_precedence+1)^0,c
  9955  005AE4  0E00               	movlw	0
  9956  005AE6  6E01               	movwf	?_precedence^0,c
  9957  005AE8                     l907:
  9958  005AE8  0012               	return		;funcret
  9959  005AEA                     __end_of_precedence:
  9960                           	callstack 0
  9961                           
  9962 ;; *************** function _pop *****************
  9963 ;; Defined at:
  9964 ;;		line 43 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  stack           2    0[COMRAM] PTR struct Stack
  9967 ;;		 -> infixToPostfix@operatorStack(102), 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      unsigned char 
  9972 ;; Registers used:
  9973 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;Total ram usage:        4 bytes
  9984 ;; Hardware stack levels used: 1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_infixToPostfix
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text41
  9993  00602C                     __ptext41:
  9994                           	callstack 0
  9995  00602C                     _pop:
  9996                           	callstack 29
  9997  00602C                     
  9998                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 44:     return stack->data[stack->top--];
  9999  00602C  EE20 F064          	lfsr	2,100
 10000  006030  5001               	movf	pop@stack^0,w,c
 10001  006032  26D9               	addwf	fsr2l,f,c
 10002  006034  5002               	movf	(pop@stack+1)^0,w,c
 10003  006036  22DA               	addwfc	fsr2h,f,c
 10004  006038  CFDF F003          	movff	indf2,??_pop
 10005  00603C  0E01               	movlw	1
 10006  00603E  5EDE               	subwf	postinc2,f,c
 10007  006040  CFDF F004          	movff	indf2,??_pop+1
 10008  006044  0E00               	movlw	0
 10009  006046  5ADD               	subwfb	postdec2,f,c
 10010  006048  5003               	movf	??_pop^0,w,c
 10011  00604A  2401               	addwf	pop@stack^0,w,c
 10012  00604C  6ED9               	movwf	fsr2l,c
 10013  00604E  5004               	movf	(??_pop+1)^0,w,c
 10014  006050  2002               	addwfc	(pop@stack+1)^0,w,c
 10015  006052  6EDA               	movwf	fsr2h,c
 10016  006054  50DF               	movf	indf2,w,c
 10017  006056  0012               	return		;funcret
 10018  006058                     __end_of_pop:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _initialize *****************
 10022 ;; Defined at:
 10023 ;;		line 33 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  stack           2    0[COMRAM] PTR struct Stack
 10026 ;;		 -> infixToPostfix@operatorStack(102), 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  1    wreg      void 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;Total ram usage:        2 bytes
 10043 ;; Hardware stack levels used: 1
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_infixToPostfix
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text42
 10052  00607E                     __ptext42:
 10053                           	callstack 0
 10054  00607E                     _initialize:
 10055                           	callstack 29
 10056  00607E                     
 10057                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 34:     stack->top = -1;
 10058  00607E  EE20 F064          	lfsr	2,100
 10059  006082  5001               	movf	initialize@stack^0,w,c
 10060  006084  26D9               	addwf	fsr2l,f,c
 10061  006086  5002               	movf	(initialize@stack+1)^0,w,c
 10062  006088  22DA               	addwfc	fsr2h,f,c
 10063  00608A  0EFF               	movlw	255
 10064  00608C  6EDE               	movwf	postinc2,c
 10065  00608E  0EFF               	movlw	255
 10066  006090  6EDD               	movwf	postdec2,c
 10067  006092  0012               	return		;funcret
 10068  006094                     __end_of_initialize:
 10069                           	callstack 0
 10070                           
 10071 ;; *************** function _evaluatePostfix *****************
 10072 ;; Defined at:
 10073 ;;		line 110 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  postfix         2   80[COMRAM] PTR const unsigned char 
 10076 ;;		 -> postfix(100), 
 10077 ;;  result          2   82[COMRAM] PTR float 
 10078 ;;		 -> result(4), 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  operand1        4    4[BANK0 ] float 
 10081 ;;  operand2        4    0[BANK0 ] float 
 10082 ;;  num             4   14[BANK0 ] float 
 10083 ;;  fractionalMu    4   10[BANK0 ] float 
 10084 ;;  isFractional    2    8[BANK0 ] int 
 10085 ;;  current         1   18[BANK0 ] unsigned char 
 10086 ;;  operandStack   82   19[BANK0 ] struct Stack_t
 10087 ;;  i               2  101[BANK0 ] int 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;      Locals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10099 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10100 ;;      Totals:         8     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10101 ;;Total ram usage:      111 bytes
 10102 ;; Hardware stack levels used: 1
 10103 ;; Hardware stack levels required when called: 3
 10104 ;; This function calls:
 10105 ;;		___fladd
 10106 ;;		___fldiv
 10107 ;;		___flmul
 10108 ;;		___xxtofl
 10109 ;;		_check_digit
 10110 ;;		_doMath
 10111 ;;		_initialize_t
 10112 ;;		_pop_t
 10113 ;;		_push_t
 10114 ;; This function is called by:
 10115 ;;		_main
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text43
 10120  00335E                     __ptext43:
 10121                           	callstack 0
 10122  00335E                     _evaluatePostfix:
 10123                           	callstack 27
 10124  00335E                     
 10125                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 111:     struct Stack_t operandStack;;Algo
      +                          rithms/Infix_to_postfix/infix_to_post.c: 112:     initialize_t(&operandStack);
 10126  00335E  0E93               	movlw	low evaluatePostfix@operandStack
 10127  003360  6E01               	movwf	initialize_t@stack^0,c
 10128  003362  0E00               	movlw	high evaluatePostfix@operandStack
 10129  003364  6E02               	movwf	(initialize_t@stack+1)^0,c
 10130  003366  EC4A  F030         	call	_initialize_t	;wreg free
 10131  00336A                     
 10132                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 114:     int i = 0;
 10133  00336A  0E00               	movlw	0
 10134  00336C  0100               	movlb	0	; () banked
 10135  00336E  6FE6               	movwf	(evaluatePostfix@i+1)& (0+255),b
 10136  003370  0E00               	movlw	0
 10137  003372  6FE5               	movwf	evaluatePostfix@i& (0+255),b
 10138                           
 10139                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 115:     while (postfix[i] != '\0') {
 10140  003374  EF3E  F01B         	goto	l7364
 10141  003378                     l7322:
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 116:         char current = postfix[i];
 10145  003378  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10146  00337A  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10147  00337C  6ED9               	movwf	fsr2l,c
 10148  00337E  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10149  003380  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10150  003382  6EDA               	movwf	fsr2h,c
 10151  003384  50DF               	movf	indf2,w,c
 10152  003386  6F92               	movwf	evaluatePostfix@current& (0+255),b
 10153  003388                     
 10154                           ; BSR set to: 0
 10155                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 118:         if (check_digit(current) || c
      +                          urrent == '.') {
 10156  003388  5192               	movf	evaluatePostfix@current& (0+255),w,b
 10157  00338A  ECC9  F02F         	call	_check_digit
 10158  00338E  5001               	movf	?_check_digit^0,w,c
 10159  003390  1002               	iorwf	(?_check_digit+1)^0,w,c
 10160  003392  A4D8               	btfss	status,2,c
 10161  003394  EFCE  F019         	goto	u7991
 10162  003398  EFD0  F019         	goto	u7990
 10163  00339C                     u7991:
 10164  00339C  EFDA  F019         	goto	l7328
 10165  0033A0                     u7990:
 10166  0033A0  0E2E               	movlw	46
 10167  0033A2  0100               	movlb	0	; () banked
 10168  0033A4  1992               	xorwf	evaluatePostfix@current& (0+255),w,b
 10169  0033A6  A4D8               	btfss	status,2,c
 10170  0033A8  EFD8  F019         	goto	u8001
 10171  0033AC  EFDA  F019         	goto	u8000
 10172  0033B0                     u8001:
 10173  0033B0  EFF0  F01A         	goto	l7354
 10174  0033B4                     u8000:
 10175  0033B4                     l7328:
 10176                           
 10177                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 119:             float num = 0.0;
 10178  0033B4  0E00               	movlw	0
 10179  0033B6  0100               	movlb	0	; () banked
 10180  0033B8  6F8E               	movwf	evaluatePostfix@num& (0+255),b
 10181  0033BA  0E00               	movlw	0
 10182  0033BC  6F8F               	movwf	(evaluatePostfix@num+1)& (0+255),b
 10183  0033BE  0E00               	movlw	0
 10184  0033C0  6F90               	movwf	(evaluatePostfix@num+2)& (0+255),b
 10185  0033C2  0E00               	movlw	0
 10186  0033C4  6F91               	movwf	(evaluatePostfix@num+3)& (0+255),b
 10187                           
 10188                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 120:             int isFractional = 0;
 10189  0033C6  0E00               	movlw	0
 10190  0033C8  6F89               	movwf	(evaluatePostfix@isFractional+1)& (0+255),b
 10191  0033CA  0E00               	movlw	0
 10192  0033CC  6F88               	movwf	evaluatePostfix@isFractional& (0+255),b
 10193                           
 10194                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 121:             float fractionalMultiplie
      +                          r = 0.1;
 10195  0033CE  0ECD               	movlw	205
 10196  0033D0  6F8A               	movwf	evaluatePostfix@fractionalMultiplier& (0+255),b
 10197  0033D2  0ECC               	movlw	204
 10198  0033D4  6F8B               	movwf	(evaluatePostfix@fractionalMultiplier+1)& (0+255),b
 10199  0033D6  0ECC               	movlw	204
 10200  0033D8  6F8C               	movwf	(evaluatePostfix@fractionalMultiplier+2)& (0+255),b
 10201  0033DA  0E3D               	movlw	61
 10202  0033DC  6F8D               	movwf	(evaluatePostfix@fractionalMultiplier+3)& (0+255),b
 10203                           
 10204                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 123:             while (check_digit(postfi
      +                          x[i]) || postfix[i] == '.') {
 10205  0033DE  EFBE  F01A         	goto	l7346
 10206  0033E2                     l7330:
 10207                           
 10208                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 124:                 if (postfix[i] == '.'
      +                          ) {
 10209  0033E2  0100               	movlb	0	; () banked
 10210  0033E4  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10211  0033E6  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10212  0033E8  6ED9               	movwf	fsr2l,c
 10213  0033EA  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10214  0033EC  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10215  0033EE  6EDA               	movwf	fsr2h,c
 10216  0033F0  0E2E               	movlw	46
 10217  0033F2  18DE               	xorwf	postinc2,w,c
 10218  0033F4  A4D8               	btfss	status,2,c
 10219  0033F6  EFFF  F019         	goto	u8011
 10220  0033FA  EF01  F01A         	goto	u8010
 10221  0033FE                     u8011:
 10222  0033FE  EF0A  F01A         	goto	l7336
 10223  003402                     u8010:
 10224  003402                     
 10225                           ; BSR set to: 0
 10226                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 125:                     isFractional = 1;
 10227  003402  0E00               	movlw	0
 10228  003404  6F89               	movwf	(evaluatePostfix@isFractional+1)& (0+255),b
 10229  003406  0E01               	movlw	1
 10230  003408  6F88               	movwf	evaluatePostfix@isFractional& (0+255),b
 10231  00340A                     l7334:
 10232                           
 10233                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 126:                     i++;
 10234  00340A  0100               	movlb	0	; () banked
 10235  00340C  4BE5               	infsnz	evaluatePostfix@i& (0+255),f,b
 10236  00340E  2BE6               	incf	(evaluatePostfix@i+1)& (0+255),f,b
 10237                           
 10238                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 127:                     continue;
 10239  003410  EFBE  F01A         	goto	l7346
 10240  003414                     l7336:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 130:                 if (!isFractional) {
 10244  003414  5188               	movf	evaluatePostfix@isFractional& (0+255),w,b
 10245  003416  1189               	iorwf	(evaluatePostfix@isFractional+1)& (0+255),w,b
 10246  003418  A4D8               	btfss	status,2,c
 10247  00341A  EF11  F01A         	goto	u8021
 10248  00341E  EF13  F01A         	goto	u8020
 10249  003422                     u8021:
 10250  003422  EF5C  F01A         	goto	l7340
 10251  003426                     u8020:
 10252  003426                     
 10253                           ; BSR set to: 0
 10254                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 131:                     num = num * 10 + 
      +                          (postfix[i] - '0');
 10255  003426  0E00               	movlw	0
 10256  003428  6E13               	movwf	___flmul@a^0,c
 10257  00342A  0E00               	movlw	0
 10258  00342C  6E14               	movwf	(___flmul@a+1)^0,c
 10259  00342E  0E20               	movlw	32
 10260  003430  6E15               	movwf	(___flmul@a+2)^0,c
 10261  003432  0E41               	movlw	65
 10262  003434  6E16               	movwf	(___flmul@a+3)^0,c
 10263  003436  C08E  F00F         	movff	evaluatePostfix@num,___flmul@b
 10264  00343A  C08F  F010         	movff	evaluatePostfix@num+1,___flmul@b+1
 10265  00343E  C090  F011         	movff	evaluatePostfix@num+2,___flmul@b+2
 10266  003442  C091  F012         	movff	evaluatePostfix@num+3,___flmul@b+3
 10267  003446  ECCD  F015         	call	___flmul	;wreg free
 10268  00344A  C00F  F028         	movff	?___flmul,___fladd@b
 10269  00344E  C010  F029         	movff	?___flmul+1,___fladd@b+1
 10270  003452  C011  F02A         	movff	?___flmul+2,___fladd@b+2
 10271  003456  C012  F02B         	movff	?___flmul+3,___fladd@b+3
 10272  00345A  0ED0               	movlw	208
 10273  00345C  6E55               	movwf	??_evaluatePostfix^0,c
 10274  00345E  0EFF               	movlw	255
 10275  003460  6E56               	movwf	(??_evaluatePostfix+1)^0,c
 10276  003462  0100               	movlb	0	; () banked
 10277  003464  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10278  003466  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10279  003468  6ED9               	movwf	fsr2l,c
 10280  00346A  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10281  00346C  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10282  00346E  6EDA               	movwf	fsr2h,c
 10283  003470  50DF               	movf	indf2,w,c
 10284  003472  6E57               	movwf	(??_evaluatePostfix+2)^0,c
 10285  003474  6A58               	clrf	(??_evaluatePostfix+3)^0,c
 10286  003476  5055               	movf	??_evaluatePostfix^0,w,c
 10287  003478  2657               	addwf	(??_evaluatePostfix+2)^0,f,c
 10288  00347A  5056               	movf	(??_evaluatePostfix+1)^0,w,c
 10289  00347C  2258               	addwfc	(??_evaluatePostfix+3)^0,f,c
 10290  00347E  C057  F001         	movff	??_evaluatePostfix+2,___xxtofl@val
 10291  003482  C058  F002         	movff	??_evaluatePostfix+3,___xxtofl@val+1
 10292  003486  6A03               	clrf	(___xxtofl@val+2)^0,c
 10293  003488  6A04               	clrf	(___xxtofl@val+3)^0,c
 10294  00348A  0E00               	movlw	0
 10295  00348C  ECD0  F01F         	call	___xxtofl
 10296  003490  C001  F02C         	movff	?___xxtofl,___fladd@a
 10297  003494  C002  F02D         	movff	?___xxtofl+1,___fladd@a+1
 10298  003498  C003  F02E         	movff	?___xxtofl+2,___fladd@a+2
 10299  00349C  C004  F02F         	movff	?___xxtofl+3,___fladd@a+3
 10300  0034A0  EC3D  F011         	call	___fladd	;wreg free
 10301  0034A4  C028  F08E         	movff	?___fladd,evaluatePostfix@num
 10302  0034A8  C029  F08F         	movff	?___fladd+1,evaluatePostfix@num+1
 10303  0034AC  C02A  F090         	movff	?___fladd+2,evaluatePostfix@num+2
 10304  0034B0  C02B  F091         	movff	?___fladd+3,evaluatePostfix@num+3
 10305                           
 10306                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 132:                 } else {
 10307  0034B4  EF05  F01A         	goto	l7334
 10308  0034B8                     l7340:
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 133:                     num += (postfix[i
      +                          ] - '0') * fractionalMultiplier;
 10312  0034B8  C08E  F028         	movff	evaluatePostfix@num,___fladd@b
 10313  0034BC  C08F  F029         	movff	evaluatePostfix@num+1,___fladd@b+1
 10314  0034C0  C090  F02A         	movff	evaluatePostfix@num+2,___fladd@b+2
 10315  0034C4  C091  F02B         	movff	evaluatePostfix@num+3,___fladd@b+3
 10316  0034C8  C08A  F013         	movff	evaluatePostfix@fractionalMultiplier,___flmul@a
 10317  0034CC  C08B  F014         	movff	evaluatePostfix@fractionalMultiplier+1,___flmul@a+1
 10318  0034D0  C08C  F015         	movff	evaluatePostfix@fractionalMultiplier+2,___flmul@a+2
 10319  0034D4  C08D  F016         	movff	evaluatePostfix@fractionalMultiplier+3,___flmul@a+3
 10320  0034D8  0ED0               	movlw	208
 10321  0034DA  6E55               	movwf	??_evaluatePostfix^0,c
 10322  0034DC  0EFF               	movlw	255
 10323  0034DE  6E56               	movwf	(??_evaluatePostfix+1)^0,c
 10324  0034E0  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10325  0034E2  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10326  0034E4  6ED9               	movwf	fsr2l,c
 10327  0034E6  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10328  0034E8  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10329  0034EA  6EDA               	movwf	fsr2h,c
 10330  0034EC  50DF               	movf	indf2,w,c
 10331  0034EE  6E57               	movwf	(??_evaluatePostfix+2)^0,c
 10332  0034F0  6A58               	clrf	(??_evaluatePostfix+3)^0,c
 10333  0034F2  5055               	movf	??_evaluatePostfix^0,w,c
 10334  0034F4  2657               	addwf	(??_evaluatePostfix+2)^0,f,c
 10335  0034F6  5056               	movf	(??_evaluatePostfix+1)^0,w,c
 10336  0034F8  2258               	addwfc	(??_evaluatePostfix+3)^0,f,c
 10337  0034FA  C057  F001         	movff	??_evaluatePostfix+2,___xxtofl@val
 10338  0034FE  C058  F002         	movff	??_evaluatePostfix+3,___xxtofl@val+1
 10339  003502  6A03               	clrf	(___xxtofl@val+2)^0,c
 10340  003504  6A04               	clrf	(___xxtofl@val+3)^0,c
 10341  003506  0E00               	movlw	0
 10342  003508  ECD0  F01F         	call	___xxtofl
 10343  00350C  C001  F00F         	movff	?___xxtofl,___flmul@b
 10344  003510  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
 10345  003514  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
 10346  003518  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
 10347  00351C  ECCD  F015         	call	___flmul	;wreg free
 10348  003520  C00F  F02C         	movff	?___flmul,___fladd@a
 10349  003524  C010  F02D         	movff	?___flmul+1,___fladd@a+1
 10350  003528  C011  F02E         	movff	?___flmul+2,___fladd@a+2
 10351  00352C  C012  F02F         	movff	?___flmul+3,___fladd@a+3
 10352  003530  EC3D  F011         	call	___fladd	;wreg free
 10353  003534  C028  F08E         	movff	?___fladd,evaluatePostfix@num
 10354  003538  C029  F08F         	movff	?___fladd+1,evaluatePostfix@num+1
 10355  00353C  C02A  F090         	movff	?___fladd+2,evaluatePostfix@num+2
 10356  003540  C02B  F091         	movff	?___fladd+3,evaluatePostfix@num+3
 10357  003544                     
 10358                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 134:                     fractionalMultipl
      +                          ier /= 10;
 10359  003544  C08A  F001         	movff	evaluatePostfix@fractionalMultiplier,___fldiv@b
 10360  003548  C08B  F002         	movff	evaluatePostfix@fractionalMultiplier+1,___fldiv@b+1
 10361  00354C  C08C  F003         	movff	evaluatePostfix@fractionalMultiplier+2,___fldiv@b+2
 10362  003550  C08D  F004         	movff	evaluatePostfix@fractionalMultiplier+3,___fldiv@b+3
 10363  003554  0E00               	movlw	0
 10364  003556  6E05               	movwf	___fldiv@a^0,c
 10365  003558  0E00               	movlw	0
 10366  00355A  6E06               	movwf	(___fldiv@a+1)^0,c
 10367  00355C  0E20               	movlw	32
 10368  00355E  6E07               	movwf	(___fldiv@a+2)^0,c
 10369  003560  0E41               	movlw	65
 10370  003562  6E08               	movwf	(___fldiv@a+3)^0,c
 10371  003564  ECE2  F017         	call	___fldiv	;wreg free
 10372  003568  C001  F08A         	movff	?___fldiv,evaluatePostfix@fractionalMultiplier
 10373  00356C  C002  F08B         	movff	?___fldiv+1,evaluatePostfix@fractionalMultiplier+1
 10374  003570  C003  F08C         	movff	?___fldiv+2,evaluatePostfix@fractionalMultiplier+2
 10375  003574  C004  F08D         	movff	?___fldiv+3,evaluatePostfix@fractionalMultiplier+3
 10376  003578  EF05  F01A         	goto	l7334
 10377  00357C                     l7346:
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 123:             while (check_digit(postfi
      +                          x[i]) || postfix[i] == '.') {
 10381  00357C  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10382  00357E  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10383  003580  6ED9               	movwf	fsr2l,c
 10384  003582  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10385  003584  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10386  003586  6EDA               	movwf	fsr2h,c
 10387  003588  50DF               	movf	indf2,w,c
 10388  00358A  ECC9  F02F         	call	_check_digit
 10389  00358E  5001               	movf	?_check_digit^0,w,c
 10390  003590  1002               	iorwf	(?_check_digit+1)^0,w,c
 10391  003592  A4D8               	btfss	status,2,c
 10392  003594  EFCE  F01A         	goto	u8031
 10393  003598  EFD0  F01A         	goto	u8030
 10394  00359C                     u8031:
 10395  00359C  EFF1  F019         	goto	l7330
 10396  0035A0                     u8030:
 10397  0035A0  0100               	movlb	0	; () banked
 10398  0035A2  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10399  0035A4  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10400  0035A6  6ED9               	movwf	fsr2l,c
 10401  0035A8  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10402  0035AA  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10403  0035AC  6EDA               	movwf	fsr2h,c
 10404  0035AE  0E2E               	movlw	46
 10405  0035B0  18DE               	xorwf	postinc2,w,c
 10406  0035B2  B4D8               	btfsc	status,2,c
 10407  0035B4  EFDE  F01A         	goto	u8041
 10408  0035B8  EFE0  F01A         	goto	u8040
 10409  0035BC                     u8041:
 10410  0035BC  EFF1  F019         	goto	l7330
 10411  0035C0                     u8040:
 10412  0035C0                     
 10413                           ; BSR set to: 0
 10414                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 138:             push_t(&operandStack, num
      +                          );
 10415  0035C0  0E93               	movlw	low evaluatePostfix@operandStack
 10416  0035C2  6E49               	movwf	push_t@stack^0,c
 10417  0035C4  0E00               	movlw	high evaluatePostfix@operandStack
 10418  0035C6  6E4A               	movwf	(push_t@stack+1)^0,c
 10419  0035C8  C08E  F04B         	movff	evaluatePostfix@num,push_t@c
 10420  0035CC  C08F  F04C         	movff	evaluatePostfix@num+1,push_t@c+1
 10421  0035D0  C090  F04D         	movff	evaluatePostfix@num+2,push_t@c+2
 10422  0035D4  C091  F04E         	movff	evaluatePostfix@num+3,push_t@c+3
 10423  0035D8  EC13  F02F         	call	_push_t	;wreg free
 10424  0035DC                     
 10425                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 140:         } else if (current == ' ') {
 10426  0035DC  EF3E  F01B         	goto	l7364
 10427  0035E0                     l7354:
 10428                           
 10429                           ; BSR set to: 0
 10430  0035E0  0E20               	movlw	32
 10431  0035E2  1992               	xorwf	evaluatePostfix@current& (0+255),w,b
 10432  0035E4  A4D8               	btfss	status,2,c
 10433  0035E6  EFF7  F01A         	goto	u8051
 10434  0035EA  EFF9  F01A         	goto	u8050
 10435  0035EE                     u8051:
 10436  0035EE  EFFE  F01A         	goto	l7358
 10437  0035F2                     u8050:
 10438  0035F2                     l7356:
 10439                           
 10440                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 141:             i++;
 10441  0035F2  0100               	movlb	0	; () banked
 10442  0035F4  4BE5               	infsnz	evaluatePostfix@i& (0+255),f,b
 10443  0035F6  2BE6               	incf	(evaluatePostfix@i+1)& (0+255),f,b
 10444                           
 10445                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 142:         } else {
 10446  0035F8  EF3E  F01B         	goto	l7364
 10447  0035FC                     l7358:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 143:             float operand2 = pop_t(&o
      +                          perandStack);
 10451  0035FC  0E93               	movlw	low evaluatePostfix@operandStack
 10452  0035FE  6E01               	movwf	pop_t@stack^0,c
 10453  003600  0E00               	movlw	high evaluatePostfix@operandStack
 10454  003602  6E02               	movwf	(pop_t@stack+1)^0,c
 10455  003604  ECAB  F02E         	call	_pop_t	;wreg free
 10456  003608  C001  F080         	movff	?_pop_t,evaluatePostfix@operand2
 10457  00360C  C002  F081         	movff	?_pop_t+1,evaluatePostfix@operand2+1
 10458  003610  C003  F082         	movff	?_pop_t+2,evaluatePostfix@operand2+2
 10459  003614  C004  F083         	movff	?_pop_t+3,evaluatePostfix@operand2+3
 10460                           
 10461                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 144:             float operand1 = pop_t(&o
      +                          perandStack);
 10462  003618  0E93               	movlw	low evaluatePostfix@operandStack
 10463  00361A  6E01               	movwf	pop_t@stack^0,c
 10464  00361C  0E00               	movlw	high evaluatePostfix@operandStack
 10465  00361E  6E02               	movwf	(pop_t@stack+1)^0,c
 10466  003620  ECAB  F02E         	call	_pop_t	;wreg free
 10467  003624  C001  F084         	movff	?_pop_t,evaluatePostfix@operand1
 10468  003628  C002  F085         	movff	?_pop_t+1,evaluatePostfix@operand1+1
 10469  00362C  C003  F086         	movff	?_pop_t+2,evaluatePostfix@operand1+2
 10470  003630  C004  F087         	movff	?_pop_t+3,evaluatePostfix@operand1+3
 10471  003634                     
 10472                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 145:             push_t(&operandStack, doM
      +                          ath(current, operand1, operand2));
 10473  003634  0E93               	movlw	low evaluatePostfix@operandStack
 10474  003636  6E49               	movwf	push_t@stack^0,c
 10475  003638  0E00               	movlw	high evaluatePostfix@operandStack
 10476  00363A  6E4A               	movwf	(push_t@stack+1)^0,c
 10477  00363C  C084  F040         	movff	evaluatePostfix@operand1,doMath@op1
 10478  003640  C085  F041         	movff	evaluatePostfix@operand1+1,doMath@op1+1
 10479  003644  C086  F042         	movff	evaluatePostfix@operand1+2,doMath@op1+2
 10480  003648  C087  F043         	movff	evaluatePostfix@operand1+3,doMath@op1+3
 10481  00364C  C080  F044         	movff	evaluatePostfix@operand2,doMath@op2
 10482  003650  C081  F045         	movff	evaluatePostfix@operand2+1,doMath@op2+1
 10483  003654  C082  F046         	movff	evaluatePostfix@operand2+2,doMath@op2+2
 10484  003658  C083  F047         	movff	evaluatePostfix@operand2+3,doMath@op2+3
 10485  00365C  0100               	movlb	0	; () banked
 10486  00365E  5192               	movf	evaluatePostfix@current& (0+255),w,b
 10487  003660  EC7D  F023         	call	_doMath
 10488  003664  C040  F04B         	movff	?_doMath,push_t@c
 10489  003668  C041  F04C         	movff	?_doMath+1,push_t@c+1
 10490  00366C  C042  F04D         	movff	?_doMath+2,push_t@c+2
 10491  003670  C043  F04E         	movff	?_doMath+3,push_t@c+3
 10492  003674  EC13  F02F         	call	_push_t	;wreg free
 10493  003678  EFF9  F01A         	goto	l7356
 10494  00367C                     l7364:
 10495                           
 10496                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 115:     while (postfix[i] != '\0') {
 10497  00367C  0100               	movlb	0	; () banked
 10498  00367E  51E5               	movf	evaluatePostfix@i& (0+255),w,b
 10499  003680  2451               	addwf	evaluatePostfix@postfix^0,w,c
 10500  003682  6ED9               	movwf	fsr2l,c
 10501  003684  51E6               	movf	(evaluatePostfix@i+1)& (0+255),w,b
 10502  003686  2052               	addwfc	(evaluatePostfix@postfix+1)^0,w,c
 10503  003688  6EDA               	movwf	fsr2h,c
 10504  00368A  50DF               	movf	indf2,w,c
 10505  00368C  A4D8               	btfss	status,2,c
 10506  00368E  EF4B  F01B         	goto	u8061
 10507  003692  EF4D  F01B         	goto	u8060
 10508  003696                     u8061:
 10509  003696  EFBC  F019         	goto	l7322
 10510  00369A                     u8060:
 10511  00369A                     
 10512                           ; BSR set to: 0
 10513                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 150:     *result = (float)pop_t(&operandSt
      +                          ack);
 10514  00369A  0E93               	movlw	low evaluatePostfix@operandStack
 10515  00369C  6E01               	movwf	pop_t@stack^0,c
 10516  00369E  0E00               	movlw	high evaluatePostfix@operandStack
 10517  0036A0  6E02               	movwf	(pop_t@stack+1)^0,c
 10518  0036A2  ECAB  F02E         	call	_pop_t	;wreg free
 10519  0036A6  C053  FFD9         	movff	evaluatePostfix@result,fsr2l
 10520  0036AA  C054  FFDA         	movff	evaluatePostfix@result+1,fsr2h
 10521  0036AE  C001  FFDE         	movff	?_pop_t,postinc2
 10522  0036B2  C002  FFDE         	movff	?_pop_t+1,postinc2
 10523  0036B6  C003  FFDE         	movff	?_pop_t+2,postinc2
 10524  0036BA  C004  FFDE         	movff	?_pop_t+3,postinc2
 10525  0036BE  0012               	return		;funcret
 10526  0036C0                     __end_of_evaluatePostfix:
 10527                           	callstack 0
 10528                           
 10529 ;; *************** function _push_t *****************
 10530 ;; Defined at:
 10531 ;;		line 21 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  stack           2   72[COMRAM] PTR struct Stack_t
 10534 ;;		 -> evaluatePostfix@operandStack(82), 
 10535 ;;  c               4   74[COMRAM] float 
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10547 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;Total ram usage:        8 bytes
 10552 ;; Hardware stack levels used: 1
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_evaluatePostfix
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text44
 10561  005E26                     __ptext44:
 10562                           	callstack 0
 10563  005E26                     _push_t:
 10564                           	callstack 29
 10565  005E26                     
 10566                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 22:     stack->data[++stack->top] = c;
 10567  005E26  EE20 F050          	lfsr	2,80
 10568  005E2A  5049               	movf	push_t@stack^0,w,c
 10569  005E2C  26D9               	addwf	fsr2l,f,c
 10570  005E2E  504A               	movf	(push_t@stack+1)^0,w,c
 10571  005E30  22DA               	addwfc	fsr2h,f,c
 10572  005E32  2ADE               	incf	postinc2,f,c
 10573  005E34  0E00               	movlw	0
 10574  005E36  22DD               	addwfc	postdec2,f,c
 10575  005E38  CFDE F04F          	movff	postinc2,??_push_t
 10576  005E3C  CFDD F050          	movff	postdec2,??_push_t+1
 10577  005E40  90D8               	bcf	status,0,c
 10578  005E42  364F               	rlcf	??_push_t^0,f,c
 10579  005E44  3650               	rlcf	(??_push_t+1)^0,f,c
 10580  005E46  90D8               	bcf	status,0,c
 10581  005E48  364F               	rlcf	??_push_t^0,f,c
 10582  005E4A  3650               	rlcf	(??_push_t+1)^0,f,c
 10583  005E4C  504F               	movf	??_push_t^0,w,c
 10584  005E4E  2449               	addwf	push_t@stack^0,w,c
 10585  005E50  6ED9               	movwf	fsr2l,c
 10586  005E52  5050               	movf	(??_push_t+1)^0,w,c
 10587  005E54  204A               	addwfc	(push_t@stack+1)^0,w,c
 10588  005E56  6EDA               	movwf	fsr2h,c
 10589  005E58  C04B  FFDE         	movff	push_t@c,postinc2
 10590  005E5C  C04C  FFDE         	movff	push_t@c+1,postinc2
 10591  005E60  C04D  FFDE         	movff	push_t@c+2,postinc2
 10592  005E64  C04E  FFDE         	movff	push_t@c+3,postinc2
 10593  005E68  0012               	return		;funcret
 10594  005E6A                     __end_of_push_t:
 10595                           	callstack 0
 10596                           
 10597 ;; *************** function _pop_t *****************
 10598 ;; Defined at:
 10599 ;;		line 26 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  stack           2    0[COMRAM] PTR struct Stack_t
 10602 ;;		 -> evaluatePostfix@operandStack(82), 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  4    0[COMRAM] float 
 10607 ;; Registers used:
 10608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10618 ;;Total ram usage:        6 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_evaluatePostfix
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text45
 10628  005D56                     __ptext45:
 10629                           	callstack 0
 10630  005D56                     _pop_t:
 10631                           	callstack 29
 10632  005D56                     
 10633                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 27:     return stack->data[stack->top--];
 10634  005D56  EE20 F050          	lfsr	2,80
 10635  005D5A  5001               	movf	pop_t@stack^0,w,c
 10636  005D5C  26D9               	addwf	fsr2l,f,c
 10637  005D5E  5002               	movf	(pop_t@stack+1)^0,w,c
 10638  005D60  22DA               	addwfc	fsr2h,f,c
 10639  005D62  CFDF F005          	movff	indf2,??_pop_t
 10640  005D66  0E01               	movlw	1
 10641  005D68  5EDE               	subwf	postinc2,f,c
 10642  005D6A  CFDF F006          	movff	indf2,??_pop_t+1
 10643  005D6E  0E00               	movlw	0
 10644  005D70  5ADD               	subwfb	postdec2,f,c
 10645  005D72  90D8               	bcf	status,0,c
 10646  005D74  3605               	rlcf	??_pop_t^0,f,c
 10647  005D76  3606               	rlcf	(??_pop_t+1)^0,f,c
 10648  005D78  90D8               	bcf	status,0,c
 10649  005D7A  3605               	rlcf	??_pop_t^0,f,c
 10650  005D7C  3606               	rlcf	(??_pop_t+1)^0,f,c
 10651  005D7E  5005               	movf	??_pop_t^0,w,c
 10652  005D80  2401               	addwf	pop_t@stack^0,w,c
 10653  005D82  6ED9               	movwf	fsr2l,c
 10654  005D84  5006               	movf	(??_pop_t+1)^0,w,c
 10655  005D86  2002               	addwfc	(pop_t@stack+1)^0,w,c
 10656  005D88  6EDA               	movwf	fsr2h,c
 10657  005D8A  CFDE F001          	movff	postinc2,?_pop_t
 10658  005D8E  CFDE F002          	movff	postinc2,?_pop_t+1
 10659  005D92  CFDE F003          	movff	postinc2,?_pop_t+2
 10660  005D96  CFDE F004          	movff	postinc2,?_pop_t+3
 10661  005D9A  0012               	return		;funcret
 10662  005D9C                     __end_of_pop_t:
 10663                           	callstack 0
 10664                           
 10665 ;; *************** function _initialize_t *****************
 10666 ;; Defined at:
 10667 ;;		line 16 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;  stack           2    0[COMRAM] PTR struct Stack_t
 10670 ;;		 -> evaluatePostfix@operandStack(82), 
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;Total ram usage:        2 bytes
 10687 ;; Hardware stack levels used: 1
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_evaluatePostfix
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           	psect	text46
 10696  006094                     __ptext46:
 10697                           	callstack 0
 10698  006094                     _initialize_t:
 10699                           	callstack 29
 10700  006094                     
 10701                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 17:     stack->top = -1;
 10702  006094  EE20 F050          	lfsr	2,80
 10703  006098  5001               	movf	initialize_t@stack^0,w,c
 10704  00609A  26D9               	addwf	fsr2l,f,c
 10705  00609C  5002               	movf	(initialize_t@stack+1)^0,w,c
 10706  00609E  22DA               	addwfc	fsr2h,f,c
 10707  0060A0  0EFF               	movlw	255
 10708  0060A2  6EDE               	movwf	postinc2,c
 10709  0060A4  0EFF               	movlw	255
 10710  0060A6  6EDD               	movwf	postdec2,c
 10711  0060A8  0012               	return		;funcret
 10712  0060AA                     __end_of_initialize_t:
 10713                           	callstack 0
 10714                           
 10715 ;; *************** function _doMath *****************
 10716 ;; Defined at:
 10717 ;;		line 61 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  op              1    wreg     unsigned char 
 10720 ;;  op1             4   63[COMRAM] float 
 10721 ;;  op2             4   67[COMRAM] float 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  op              1   71[COMRAM] unsigned char 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  4   63[COMRAM] float 
 10726 ;; Registers used:
 10727 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10733 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;Total ram usage:        9 bytes
 10738 ;; Hardware stack levels used: 1
 10739 ;; Hardware stack levels required when called: 2
 10740 ;; This function calls:
 10741 ;;		___fladd
 10742 ;;		___fldiv
 10743 ;;		___flmul
 10744 ;;		___flsub
 10745 ;; This function is called by:
 10746 ;;		_evaluatePostfix
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text47
 10751  0046FA                     __ptext47:
 10752                           	callstack 0
 10753  0046FA                     _doMath:
 10754                           	callstack 27
 10755                           
 10756                           ;incstack = 0
 10757                           ;doMath@op stored from wreg
 10758  0046FA  6E48               	movwf	doMath@op^0,c
 10759  0046FC                     
 10760                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 62:     if (op == '*')
 10761  0046FC  0E2A               	movlw	42
 10762  0046FE  1848               	xorwf	doMath@op^0,w,c
 10763  004700  A4D8               	btfss	status,2,c
 10764  004702  EF85  F023         	goto	u7481
 10765  004706  EF87  F023         	goto	u7480
 10766  00470A                     u7481:
 10767  00470A  EFA3  F023         	goto	l6948
 10768  00470E                     u7480:
 10769  00470E                     
 10770                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 63:         return (float)(op1*op2);
 10771  00470E  C040  F00F         	movff	doMath@op1,___flmul@b
 10772  004712  C041  F010         	movff	doMath@op1+1,___flmul@b+1
 10773  004716  C042  F011         	movff	doMath@op1+2,___flmul@b+2
 10774  00471A  C043  F012         	movff	doMath@op1+3,___flmul@b+3
 10775  00471E  C044  F013         	movff	doMath@op2,___flmul@a
 10776  004722  C045  F014         	movff	doMath@op2+1,___flmul@a+1
 10777  004726  C046  F015         	movff	doMath@op2+2,___flmul@a+2
 10778  00472A  C047  F016         	movff	doMath@op2+3,___flmul@a+3
 10779  00472E  ECCD  F015         	call	___flmul	;wreg free
 10780  004732  C00F  F040         	movff	?___flmul,?_doMath
 10781  004736  C010  F041         	movff	?___flmul+1,?_doMath+1
 10782  00473A  C011  F042         	movff	?___flmul+2,?_doMath+2
 10783  00473E  C012  F043         	movff	?___flmul+3,?_doMath+3
 10784  004742  EF1A  F024         	goto	l914
 10785  004746                     l6948:
 10786  004746  0E2F               	movlw	47
 10787  004748  1848               	xorwf	doMath@op^0,w,c
 10788  00474A  A4D8               	btfss	status,2,c
 10789  00474C  EFAA  F023         	goto	u7491
 10790  004750  EFAC  F023         	goto	u7490
 10791  004754                     u7491:
 10792  004754  EFC8  F023         	goto	l6956
 10793  004758                     u7490:
 10794  004758                     
 10795                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 65:         return (float)(op1/op2);
 10796  004758  C040  F001         	movff	doMath@op1,___fldiv@b
 10797  00475C  C041  F002         	movff	doMath@op1+1,___fldiv@b+1
 10798  004760  C042  F003         	movff	doMath@op1+2,___fldiv@b+2
 10799  004764  C043  F004         	movff	doMath@op1+3,___fldiv@b+3
 10800  004768  C044  F005         	movff	doMath@op2,___fldiv@a
 10801  00476C  C045  F006         	movff	doMath@op2+1,___fldiv@a+1
 10802  004770  C046  F007         	movff	doMath@op2+2,___fldiv@a+2
 10803  004774  C047  F008         	movff	doMath@op2+3,___fldiv@a+3
 10804  004778  ECE2  F017         	call	___fldiv	;wreg free
 10805  00477C  C001  F040         	movff	?___fldiv,?_doMath
 10806  004780  C002  F041         	movff	?___fldiv+1,?_doMath+1
 10807  004784  C003  F042         	movff	?___fldiv+2,?_doMath+2
 10808  004788  C004  F043         	movff	?___fldiv+3,?_doMath+3
 10809  00478C  EF1A  F024         	goto	l914
 10810  004790                     l6956:
 10811  004790  0E2B               	movlw	43
 10812  004792  1848               	xorwf	doMath@op^0,w,c
 10813  004794  A4D8               	btfss	status,2,c
 10814  004796  EFCF  F023         	goto	u7501
 10815  00479A  EFD1  F023         	goto	u7500
 10816  00479E                     u7501:
 10817  00479E  EFED  F023         	goto	l6964
 10818  0047A2                     u7500:
 10819  0047A2                     
 10820                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 67:         return (float)(op1+op2);
 10821  0047A2  C040  F028         	movff	doMath@op1,___fladd@b
 10822  0047A6  C041  F029         	movff	doMath@op1+1,___fladd@b+1
 10823  0047AA  C042  F02A         	movff	doMath@op1+2,___fladd@b+2
 10824  0047AE  C043  F02B         	movff	doMath@op1+3,___fladd@b+3
 10825  0047B2  C044  F02C         	movff	doMath@op2,___fladd@a
 10826  0047B6  C045  F02D         	movff	doMath@op2+1,___fladd@a+1
 10827  0047BA  C046  F02E         	movff	doMath@op2+2,___fladd@a+2
 10828  0047BE  C047  F02F         	movff	doMath@op2+3,___fladd@a+3
 10829  0047C2  EC3D  F011         	call	___fladd	;wreg free
 10830  0047C6  C028  F040         	movff	?___fladd,?_doMath
 10831  0047CA  C029  F041         	movff	?___fladd+1,?_doMath+1
 10832  0047CE  C02A  F042         	movff	?___fladd+2,?_doMath+2
 10833  0047D2  C02B  F043         	movff	?___fladd+3,?_doMath+3
 10834  0047D6  EF1A  F024         	goto	l914
 10835  0047DA                     l6964:
 10836  0047DA  0E2D               	movlw	45
 10837  0047DC  1848               	xorwf	doMath@op^0,w,c
 10838  0047DE  A4D8               	btfss	status,2,c
 10839  0047E0  EFF4  F023         	goto	u7511
 10840  0047E4  EFF6  F023         	goto	u7510
 10841  0047E8                     u7511:
 10842  0047E8  EF12  F024         	goto	l917
 10843  0047EC                     u7510:
 10844  0047EC                     
 10845                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 69:         return (float)(op1-op2);
 10846  0047EC  C040  F038         	movff	doMath@op1,___flsub@b
 10847  0047F0  C041  F039         	movff	doMath@op1+1,___flsub@b+1
 10848  0047F4  C042  F03A         	movff	doMath@op1+2,___flsub@b+2
 10849  0047F8  C043  F03B         	movff	doMath@op1+3,___flsub@b+3
 10850  0047FC  C044  F03C         	movff	doMath@op2,___flsub@a
 10851  004800  C045  F03D         	movff	doMath@op2+1,___flsub@a+1
 10852  004804  C046  F03E         	movff	doMath@op2+2,___flsub@a+2
 10853  004808  C047  F03F         	movff	doMath@op2+3,___flsub@a+3
 10854  00480C  ECCE  F02E         	call	___flsub	;wreg free
 10855  004810  C038  F040         	movff	?___flsub,?_doMath
 10856  004814  C039  F041         	movff	?___flsub+1,?_doMath+1
 10857  004818  C03A  F042         	movff	?___flsub+2,?_doMath+2
 10858  00481C  C03B  F043         	movff	?___flsub+3,?_doMath+3
 10859  004820  EF1A  F024         	goto	l914
 10860  004824                     l917:
 10861  004824                     
 10862                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 70:     return 0.0;
 10863  004824  0E00               	movlw	0
 10864  004826  6E40               	movwf	?_doMath^0,c
 10865  004828  0E00               	movlw	0
 10866  00482A  6E41               	movwf	(?_doMath+1)^0,c
 10867  00482C  0E00               	movlw	0
 10868  00482E  6E42               	movwf	(?_doMath+2)^0,c
 10869  004830  0E00               	movlw	0
 10870  004832  6E43               	movwf	(?_doMath+3)^0,c
 10871  004834                     l914:
 10872  004834  0012               	return		;funcret
 10873  004836                     __end_of_doMath:
 10874                           	callstack 0
 10875                           
 10876 ;; *************** function ___flsub *****************
 10877 ;; Defined at:
 10878 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  b               4   55[COMRAM] float 
 10881 ;;  a               4   59[COMRAM] float 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  4   55[COMRAM] float 
 10886 ;; Registers used:
 10887 ;;		wreg, status,2, status,0, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10893 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;Total ram usage:        8 bytes
 10898 ;; Hardware stack levels used: 1
 10899 ;; Hardware stack levels required when called: 1
 10900 ;; This function calls:
 10901 ;;		___fladd
 10902 ;; This function is called by:
 10903 ;;		_doMath
 10904 ;;		_efgtoa
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text48
 10909  005D9C                     __ptext48:
 10910                           	callstack 0
 10911  005D9C                     ___flsub:
 10912                           	callstack 25
 10913  005D9C  0E00               	movlw	0
 10914  005D9E  1A3C               	xorwf	___flsub@a^0,f,c
 10915  005DA0  0E00               	movlw	0
 10916  005DA2  1A3D               	xorwf	(___flsub@a+1)^0,f,c
 10917  005DA4  0E00               	movlw	0
 10918  005DA6  1A3E               	xorwf	(___flsub@a+2)^0,f,c
 10919  005DA8  0E80               	movlw	128
 10920  005DAA  1A3F               	xorwf	(___flsub@a+3)^0,f,c
 10921  005DAC  C038  F028         	movff	___flsub@b,___fladd@b
 10922  005DB0  C039  F029         	movff	___flsub@b+1,___fladd@b+1
 10923  005DB4  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
 10924  005DB8  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
 10925  005DBC  C03C  F02C         	movff	___flsub@a,___fladd@a
 10926  005DC0  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
 10927  005DC4  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
 10928  005DC8  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
 10929  005DCC  EC3D  F011         	call	___fladd	;wreg free
 10930  005DD0  C028  F038         	movff	?___fladd,?___flsub
 10931  005DD4  C029  F039         	movff	?___fladd+1,?___flsub+1
 10932  005DD8  C02A  F03A         	movff	?___fladd+2,?___flsub+2
 10933  005DDC  C02B  F03B         	movff	?___fladd+3,?___flsub+3
 10934  005DE0  0012               	return		;funcret
 10935  005DE2                     __end_of___flsub:
 10936                           	callstack 0
 10937                           
 10938 ;; *************** function ___fladd *****************
 10939 ;; Defined at:
 10940 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  b               4   39[COMRAM] float 
 10943 ;;  a               4   43[COMRAM] float 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  grs             1   54[COMRAM] unsigned char 
 10946 ;;  bexp            1   53[COMRAM] unsigned char 
 10947 ;;  aexp            1   52[COMRAM] unsigned char 
 10948 ;;  signs           1   51[COMRAM] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  4   39[COMRAM] unsigned char 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10958 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10961 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10962 ;;Total ram usage:       16 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_doMath
 10968 ;;		_evaluatePostfix
 10969 ;;		___flsub
 10970 ;;		_efgtoa
 10971 ;;		_I2C_Master_Mode_Clock_Configurations
 10972 ;;		_EUSART_Baud_Rate_Calculation
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text49
 10977  00227A                     __ptext49:
 10978                           	callstack 0
 10979  00227A                     ___fladd:
 10980                           	callstack 25
 10981  00227A  502B               	movf	(___fladd@b+3)^0,w,c
 10982  00227C  0B80               	andlw	128
 10983  00227E  6E34               	movwf	___fladd@signs^0,c
 10984  002280  502B               	movf	(___fladd@b+3)^0,w,c
 10985  002282  242B               	addwf	(___fladd@b+3)^0,w,c
 10986  002284  6E36               	movwf	___fladd@bexp^0,c
 10987  002286  AE2A               	btfss	(___fladd@b+2)^0,7,c
 10988  002288  EF48  F011         	goto	u4711
 10989  00228C  EF4A  F011         	goto	u4710
 10990  002290                     u4711:
 10991  002290  EF4B  F011         	goto	l5234
 10992  002294                     u4710:
 10993  002294  8036               	bsf	___fladd@bexp^0,0,c
 10994  002296                     l5234:
 10995  002296  5036               	movf	___fladd@bexp^0,w,c
 10996  002298  B4D8               	btfsc	status,2,c
 10997  00229A  EF51  F011         	goto	u4721
 10998  00229E  EF53  F011         	goto	u4720
 10999  0022A2                     u4721:
 11000  0022A2  EF68  F011         	goto	l5244
 11001  0022A6                     u4720:
 11002  0022A6  2836               	incf	___fladd@bexp^0,w,c
 11003  0022A8  A4D8               	btfss	status,2,c
 11004  0022AA  EF59  F011         	goto	u4731
 11005  0022AE  EF5B  F011         	goto	u4730
 11006  0022B2                     u4731:
 11007  0022B2  EF63  F011         	goto	l5240
 11008  0022B6                     u4730:
 11009  0022B6  0E00               	movlw	0
 11010  0022B8  6E28               	movwf	___fladd@b^0,c
 11011  0022BA  0E00               	movlw	0
 11012  0022BC  6E29               	movwf	(___fladd@b+1)^0,c
 11013  0022BE  0E00               	movlw	0
 11014  0022C0  6E2A               	movwf	(___fladd@b+2)^0,c
 11015  0022C2  0E00               	movlw	0
 11016  0022C4  6E2B               	movwf	(___fladd@b+3)^0,c
 11017  0022C6                     l5240:
 11018  0022C6  8E2A               	bsf	(___fladd@b+2)^0,7,c
 11019  0022C8  0E00               	movlw	0
 11020  0022CA  6E2B               	movwf	(___fladd@b+3)^0,c
 11021  0022CC  EF70  F011         	goto	l5246
 11022  0022D0                     l5244:
 11023  0022D0  0E00               	movlw	0
 11024  0022D2  6E28               	movwf	___fladd@b^0,c
 11025  0022D4  0E00               	movlw	0
 11026  0022D6  6E29               	movwf	(___fladd@b+1)^0,c
 11027  0022D8  0E00               	movlw	0
 11028  0022DA  6E2A               	movwf	(___fladd@b+2)^0,c
 11029  0022DC  0E00               	movlw	0
 11030  0022DE  6E2B               	movwf	(___fladd@b+3)^0,c
 11031  0022E0                     l5246:
 11032  0022E0  502F               	movf	(___fladd@a+3)^0,w,c
 11033  0022E2  0B80               	andlw	128
 11034  0022E4  6E35               	movwf	___fladd@aexp^0,c
 11035  0022E6  5034               	movf	___fladd@signs^0,w,c
 11036  0022E8  1835               	xorwf	___fladd@aexp^0,w,c
 11037  0022EA  B4D8               	btfsc	status,2,c
 11038  0022EC  EF7A  F011         	goto	u4741
 11039  0022F0  EF7C  F011         	goto	u4740
 11040  0022F4                     u4741:
 11041  0022F4  EF7D  F011         	goto	l5252
 11042  0022F8                     u4740:
 11043  0022F8  8C34               	bsf	___fladd@signs^0,6,c
 11044  0022FA                     l5252:
 11045  0022FA  502F               	movf	(___fladd@a+3)^0,w,c
 11046  0022FC  242F               	addwf	(___fladd@a+3)^0,w,c
 11047  0022FE  6E35               	movwf	___fladd@aexp^0,c
 11048  002300  AE2E               	btfss	(___fladd@a+2)^0,7,c
 11049  002302  EF85  F011         	goto	u4751
 11050  002306  EF87  F011         	goto	u4750
 11051  00230A                     u4751:
 11052  00230A  EF88  F011         	goto	l5258
 11053  00230E                     u4750:
 11054  00230E  8035               	bsf	___fladd@aexp^0,0,c
 11055  002310                     l5258:
 11056  002310  5035               	movf	___fladd@aexp^0,w,c
 11057  002312  B4D8               	btfsc	status,2,c
 11058  002314  EF8E  F011         	goto	u4761
 11059  002318  EF90  F011         	goto	u4760
 11060  00231C                     u4761:
 11061  00231C  EFA5  F011         	goto	l5268
 11062  002320                     u4760:
 11063  002320  2835               	incf	___fladd@aexp^0,w,c
 11064  002322  A4D8               	btfss	status,2,c
 11065  002324  EF96  F011         	goto	u4771
 11066  002328  EF98  F011         	goto	u4770
 11067  00232C                     u4771:
 11068  00232C  EFA0  F011         	goto	l5264
 11069  002330                     u4770:
 11070  002330  0E00               	movlw	0
 11071  002332  6E2C               	movwf	___fladd@a^0,c
 11072  002334  0E00               	movlw	0
 11073  002336  6E2D               	movwf	(___fladd@a+1)^0,c
 11074  002338  0E00               	movlw	0
 11075  00233A  6E2E               	movwf	(___fladd@a+2)^0,c
 11076  00233C  0E00               	movlw	0
 11077  00233E  6E2F               	movwf	(___fladd@a+3)^0,c
 11078  002340                     l5264:
 11079  002340  8E2E               	bsf	(___fladd@a+2)^0,7,c
 11080  002342  0E00               	movlw	0
 11081  002344  6E2F               	movwf	(___fladd@a+3)^0,c
 11082  002346  EFAD  F011         	goto	l5270
 11083  00234A                     l5268:
 11084  00234A  0E00               	movlw	0
 11085  00234C  6E2C               	movwf	___fladd@a^0,c
 11086  00234E  0E00               	movlw	0
 11087  002350  6E2D               	movwf	(___fladd@a+1)^0,c
 11088  002352  0E00               	movlw	0
 11089  002354  6E2E               	movwf	(___fladd@a+2)^0,c
 11090  002356  0E00               	movlw	0
 11091  002358  6E2F               	movwf	(___fladd@a+3)^0,c
 11092  00235A                     l5270:
 11093  00235A  5036               	movf	___fladd@bexp^0,w,c
 11094  00235C  5C35               	subwf	___fladd@aexp^0,w,c
 11095  00235E  B0D8               	btfsc	status,0,c
 11096  002360  EFB4  F011         	goto	u4781
 11097  002364  EFB6  F011         	goto	u4780
 11098  002368                     u4781:
 11099  002368  EFDD  F011         	goto	l5306
 11100  00236C                     u4780:
 11101  00236C  AC34               	btfss	___fladd@signs^0,6,c
 11102  00236E  EFBB  F011         	goto	u4791
 11103  002372  EFBD  F011         	goto	u4790
 11104  002376                     u4791:
 11105  002376  EFBF  F011         	goto	l5276
 11106  00237A                     u4790:
 11107  00237A  0E80               	movlw	128
 11108  00237C  1A34               	xorwf	___fladd@signs^0,f,c
 11109  00237E                     l5276:
 11110  00237E  C036  F037         	movff	___fladd@bexp,___fladd@grs
 11111  002382  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 11112  002386  C037  F035         	movff	___fladd@grs,___fladd@aexp
 11113  00238A  C028  F037         	movff	___fladd@b,___fladd@grs
 11114  00238E  C02C  F028         	movff	___fladd@a,___fladd@b
 11115  002392  C037  F02C         	movff	___fladd@grs,___fladd@a
 11116  002396  C029  F037         	movff	___fladd@b+1,___fladd@grs
 11117  00239A  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
 11118  00239E  C037  F02D         	movff	___fladd@grs,___fladd@a+1
 11119  0023A2  C02A  F037         	movff	___fladd@b+2,___fladd@grs
 11120  0023A6  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
 11121  0023AA  C037  F02E         	movff	___fladd@grs,___fladd@a+2
 11122  0023AE  C02B  F037         	movff	___fladd@b+3,___fladd@grs
 11123  0023B2  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
 11124  0023B6  C037  F02F         	movff	___fladd@grs,___fladd@a+3
 11125  0023BA                     l5306:
 11126  0023BA  0E00               	movlw	0
 11127  0023BC  6E37               	movwf	___fladd@grs^0,c
 11128  0023BE  5036               	movf	___fladd@bexp^0,w,c
 11129  0023C0  C035  F030         	movff	___fladd@aexp,??___fladd
 11130  0023C4  6A31               	clrf	(??___fladd+1)^0,c
 11131  0023C6  5E30               	subwf	??___fladd^0,f,c
 11132  0023C8  0E00               	movlw	0
 11133  0023CA  5A31               	subwfb	(??___fladd+1)^0,f,c
 11134  0023CC  BE31               	btfsc	(??___fladd+1)^0,7,c
 11135  0023CE  EFF2  F011         	goto	u4801
 11136  0023D2  5031               	movf	(??___fladd+1)^0,w,c
 11137  0023D4  E109               	bnz	u4800
 11138  0023D6  0E1A               	movlw	26
 11139  0023D8  5C30               	subwf	??___fladd^0,w,c
 11140  0023DA  A0D8               	btfss	status,0,c
 11141  0023DC  EFF2  F011         	goto	u4801
 11142  0023E0  EFF4  F011         	goto	u4800
 11143  0023E4                     u4801:
 11144  0023E4  EF2B  F012         	goto	l1492
 11145  0023E8                     u4800:
 11146  0023E8  5028               	movf	___fladd@b^0,w,c
 11147  0023EA  1029               	iorwf	(___fladd@b+1)^0,w,c
 11148  0023EC  102A               	iorwf	(___fladd@b+2)^0,w,c
 11149  0023EE  102B               	iorwf	(___fladd@b+3)^0,w,c
 11150  0023F0  A4D8               	btfss	status,2,c
 11151  0023F2  EFFD  F011         	goto	u4811
 11152  0023F6  EF00  F012         	goto	u4810
 11153  0023FA                     u4811:
 11154  0023FA  0E01               	movlw	1
 11155  0023FC  EF01  F012         	goto	u4820
 11156  002400                     u4810:
 11157  002400  0E00               	movlw	0
 11158  002402                     u4820:
 11159  002402  6E37               	movwf	___fladd@grs^0,c
 11160  002404  0E00               	movlw	0
 11161  002406  6E28               	movwf	___fladd@b^0,c
 11162  002408  0E00               	movlw	0
 11163  00240A  6E29               	movwf	(___fladd@b+1)^0,c
 11164  00240C  0E00               	movlw	0
 11165  00240E  6E2A               	movwf	(___fladd@b+2)^0,c
 11166  002410  0E00               	movlw	0
 11167  002412  6E2B               	movwf	(___fladd@b+3)^0,c
 11168  002414  C035  F036         	movff	___fladd@aexp,___fladd@bexp
 11169  002418  EF34  F012         	goto	l1491
 11170  00241C                     l1493:
 11171  00241C  A037               	btfss	___fladd@grs^0,0,c
 11172  00241E  EF13  F012         	goto	u4831
 11173  002422  EF15  F012         	goto	u4830
 11174  002426                     u4831:
 11175  002426  EF1B  F012         	goto	l5318
 11176  00242A                     u4830:
 11177  00242A  90D8               	bcf	status,0,c
 11178  00242C  3037               	rrcf	___fladd@grs^0,w,c
 11179  00242E  0901               	iorlw	1
 11180  002430  6E37               	movwf	___fladd@grs^0,c
 11181  002432  EF1D  F012         	goto	l5320
 11182  002436                     l5318:
 11183  002436  90D8               	bcf	status,0,c
 11184  002438  3237               	rrcf	___fladd@grs^0,f,c
 11185  00243A                     l5320:
 11186  00243A  A028               	btfss	___fladd@b^0,0,c
 11187  00243C  EF22  F012         	goto	u4841
 11188  002440  EF24  F012         	goto	u4840
 11189  002444                     u4841:
 11190  002444  EF25  F012         	goto	l5324
 11191  002448                     u4840:
 11192  002448  8E37               	bsf	___fladd@grs^0,7,c
 11193  00244A                     l5324:
 11194  00244A  342B               	rlcf	(___fladd@b+3)^0,w,c
 11195  00244C  322B               	rrcf	(___fladd@b+3)^0,f,c
 11196  00244E  322A               	rrcf	(___fladd@b+2)^0,f,c
 11197  002450  3229               	rrcf	(___fladd@b+1)^0,f,c
 11198  002452  3228               	rrcf	___fladd@b^0,f,c
 11199  002454  2A36               	incf	___fladd@bexp^0,f,c
 11200  002456                     l1492:
 11201  002456  5035               	movf	___fladd@aexp^0,w,c
 11202  002458  5C36               	subwf	___fladd@bexp^0,w,c
 11203  00245A  A0D8               	btfss	status,0,c
 11204  00245C  EF32  F012         	goto	u4851
 11205  002460  EF34  F012         	goto	u4850
 11206  002464                     u4851:
 11207  002464  EF0E  F012         	goto	l1493
 11208  002468                     u4850:
 11209  002468                     l1491:
 11210  002468  BC34               	btfsc	___fladd@signs^0,6,c
 11211  00246A  EF39  F012         	goto	u4861
 11212  00246E  EF3B  F012         	goto	u4860
 11213  002472                     u4861:
 11214  002472  EF7B  F012         	goto	l5352
 11215  002476                     u4860:
 11216  002476  5036               	movf	___fladd@bexp^0,w,c
 11217  002478  A4D8               	btfss	status,2,c
 11218  00247A  EF41  F012         	goto	u4871
 11219  00247E  EF43  F012         	goto	u4870
 11220  002482                     u4871:
 11221  002482  EF4D  F012         	goto	l5334
 11222  002486                     u4870:
 11223  002486  0E00               	movlw	0
 11224  002488  6E28               	movwf	?___fladd^0,c
 11225  00248A  0E00               	movlw	0
 11226  00248C  6E29               	movwf	(?___fladd+1)^0,c
 11227  00248E  0E00               	movlw	0
 11228  002490  6E2A               	movwf	(?___fladd+2)^0,c
 11229  002492  0E00               	movlw	0
 11230  002494  6E2B               	movwf	(?___fladd+3)^0,c
 11231  002496  EF9C  F013         	goto	l1500
 11232  00249A                     l5334:
 11233  00249A  502C               	movf	___fladd@a^0,w,c
 11234  00249C  2628               	addwf	___fladd@b^0,f,c
 11235  00249E  502D               	movf	(___fladd@a+1)^0,w,c
 11236  0024A0  2229               	addwfc	(___fladd@b+1)^0,f,c
 11237  0024A2  502E               	movf	(___fladd@a+2)^0,w,c
 11238  0024A4  222A               	addwfc	(___fladd@b+2)^0,f,c
 11239  0024A6  502F               	movf	(___fladd@a+3)^0,w,c
 11240  0024A8  222B               	addwfc	(___fladd@b+3)^0,f,c
 11241  0024AA  A02B               	btfss	(___fladd@b+3)^0,0,c
 11242  0024AC  EF5A  F012         	goto	u4881
 11243  0024B0  EF5C  F012         	goto	u4880
 11244  0024B4                     u4881:
 11245  0024B4  EF08  F013         	goto	l5388
 11246  0024B8                     u4880:
 11247  0024B8  A037               	btfss	___fladd@grs^0,0,c
 11248  0024BA  EF61  F012         	goto	u4891
 11249  0024BE  EF63  F012         	goto	u4890
 11250  0024C2                     u4891:
 11251  0024C2  EF69  F012         	goto	l5342
 11252  0024C6                     u4890:
 11253  0024C6  90D8               	bcf	status,0,c
 11254  0024C8  3037               	rrcf	___fladd@grs^0,w,c
 11255  0024CA  0901               	iorlw	1
 11256  0024CC  6E37               	movwf	___fladd@grs^0,c
 11257  0024CE  EF6B  F012         	goto	l5344
 11258  0024D2                     l5342:
 11259  0024D2  90D8               	bcf	status,0,c
 11260  0024D4  3237               	rrcf	___fladd@grs^0,f,c
 11261  0024D6                     l5344:
 11262  0024D6  A028               	btfss	___fladd@b^0,0,c
 11263  0024D8  EF70  F012         	goto	u4901
 11264  0024DC  EF72  F012         	goto	u4900
 11265  0024E0                     u4901:
 11266  0024E0  EF73  F012         	goto	l5348
 11267  0024E4                     u4900:
 11268  0024E4  8E37               	bsf	___fladd@grs^0,7,c
 11269  0024E6                     l5348:
 11270  0024E6  342B               	rlcf	(___fladd@b+3)^0,w,c
 11271  0024E8  322B               	rrcf	(___fladd@b+3)^0,f,c
 11272  0024EA  322A               	rrcf	(___fladd@b+2)^0,f,c
 11273  0024EC  3229               	rrcf	(___fladd@b+1)^0,f,c
 11274  0024EE  3228               	rrcf	___fladd@b^0,f,c
 11275  0024F0  2A36               	incf	___fladd@bexp^0,f,c
 11276  0024F2  EF08  F013         	goto	l5388
 11277  0024F6                     l5352:
 11278  0024F6  502C               	movf	___fladd@a^0,w,c
 11279  0024F8  5C28               	subwf	___fladd@b^0,w,c
 11280  0024FA  502D               	movf	(___fladd@a+1)^0,w,c
 11281  0024FC  5829               	subwfb	(___fladd@b+1)^0,w,c
 11282  0024FE  502E               	movf	(___fladd@a+2)^0,w,c
 11283  002500  582A               	subwfb	(___fladd@b+2)^0,w,c
 11284  002502  502B               	movf	(___fladd@b+3)^0,w,c
 11285  002504  0A80               	xorlw	128
 11286  002506  6E30               	movwf	??___fladd^0,c
 11287  002508  502F               	movf	(___fladd@a+3)^0,w,c
 11288  00250A  0A80               	xorlw	128
 11289  00250C  5830               	subwfb	??___fladd^0,w,c
 11290  00250E  B0D8               	btfsc	status,0,c
 11291  002510  EF8C  F012         	goto	u4911
 11292  002514  EF8E  F012         	goto	u4910
 11293  002518                     u4911:
 11294  002518  EFB9  F012         	goto	l5362
 11295  00251C                     u4910:
 11296  00251C  5028               	movf	___fladd@b^0,w,c
 11297  00251E  5C2C               	subwf	___fladd@a^0,w,c
 11298  002520  6E30               	movwf	??___fladd^0,c
 11299  002522  5029               	movf	(___fladd@b+1)^0,w,c
 11300  002524  582D               	subwfb	(___fladd@a+1)^0,w,c
 11301  002526  6E31               	movwf	(??___fladd+1)^0,c
 11302  002528  502A               	movf	(___fladd@b+2)^0,w,c
 11303  00252A  582E               	subwfb	(___fladd@a+2)^0,w,c
 11304  00252C  6E32               	movwf	(??___fladd+2)^0,c
 11305  00252E  502B               	movf	(___fladd@b+3)^0,w,c
 11306  002530  582F               	subwfb	(___fladd@a+3)^0,w,c
 11307  002532  6E33               	movwf	(??___fladd+3)^0,c
 11308  002534  0EFF               	movlw	255
 11309  002536  2430               	addwf	??___fladd^0,w,c
 11310  002538  6E28               	movwf	___fladd@b^0,c
 11311  00253A  0EFF               	movlw	255
 11312  00253C  2031               	addwfc	(??___fladd+1)^0,w,c
 11313  00253E  6E29               	movwf	(___fladd@b+1)^0,c
 11314  002540  0EFF               	movlw	255
 11315  002542  2032               	addwfc	(??___fladd+2)^0,w,c
 11316  002544  6E2A               	movwf	(___fladd@b+2)^0,c
 11317  002546  0EFF               	movlw	255
 11318  002548  2033               	addwfc	(??___fladd+3)^0,w,c
 11319  00254A  6E2B               	movwf	(___fladd@b+3)^0,c
 11320  00254C  0E80               	movlw	128
 11321  00254E  1A34               	xorwf	___fladd@signs^0,f,c
 11322  002550  6C37               	negf	___fladd@grs^0,c
 11323  002552  5037               	movf	___fladd@grs^0,w,c
 11324  002554  A4D8               	btfss	status,2,c
 11325  002556  EFAF  F012         	goto	u4921
 11326  00255A  EFB1  F012         	goto	u4920
 11327  00255E                     u4921:
 11328  00255E  EFC1  F012         	goto	l1508
 11329  002562                     u4920:
 11330  002562  0E01               	movlw	1
 11331  002564  2628               	addwf	___fladd@b^0,f,c
 11332  002566  0E00               	movlw	0
 11333  002568  2229               	addwfc	(___fladd@b+1)^0,f,c
 11334  00256A  222A               	addwfc	(___fladd@b+2)^0,f,c
 11335  00256C  222B               	addwfc	(___fladd@b+3)^0,f,c
 11336  00256E  EFC1  F012         	goto	l1508
 11337  002572                     l5362:
 11338  002572  502C               	movf	___fladd@a^0,w,c
 11339  002574  5E28               	subwf	___fladd@b^0,f,c
 11340  002576  502D               	movf	(___fladd@a+1)^0,w,c
 11341  002578  5A29               	subwfb	(___fladd@b+1)^0,f,c
 11342  00257A  502E               	movf	(___fladd@a+2)^0,w,c
 11343  00257C  5A2A               	subwfb	(___fladd@b+2)^0,f,c
 11344  00257E  502F               	movf	(___fladd@a+3)^0,w,c
 11345  002580  5A2B               	subwfb	(___fladd@b+3)^0,f,c
 11346  002582                     l1508:
 11347  002582  5028               	movf	___fladd@b^0,w,c
 11348  002584  1029               	iorwf	(___fladd@b+1)^0,w,c
 11349  002586  102A               	iorwf	(___fladd@b+2)^0,w,c
 11350  002588  102B               	iorwf	(___fladd@b+3)^0,w,c
 11351  00258A  A4D8               	btfss	status,2,c
 11352  00258C  EFCA  F012         	goto	u4931
 11353  002590  EFCC  F012         	goto	u4930
 11354  002594                     u4931:
 11355  002594  EF01  F013         	goto	l5386
 11356  002598                     u4930:
 11357  002598  5037               	movf	___fladd@grs^0,w,c
 11358  00259A  A4D8               	btfss	status,2,c
 11359  00259C  EFD2  F012         	goto	u4941
 11360  0025A0  EFD4  F012         	goto	u4940
 11361  0025A4                     u4941:
 11362  0025A4  EF01  F013         	goto	l5386
 11363  0025A8                     u4940:
 11364  0025A8  0E00               	movlw	0
 11365  0025AA  6E28               	movwf	?___fladd^0,c
 11366  0025AC  0E00               	movlw	0
 11367  0025AE  6E29               	movwf	(?___fladd+1)^0,c
 11368  0025B0  0E00               	movlw	0
 11369  0025B2  6E2A               	movwf	(?___fladd+2)^0,c
 11370  0025B4  0E00               	movlw	0
 11371  0025B6  6E2B               	movwf	(?___fladd+3)^0,c
 11372  0025B8  EF9C  F013         	goto	l1500
 11373  0025BC                     l5370:
 11374  0025BC  90D8               	bcf	status,0,c
 11375  0025BE  3628               	rlcf	___fladd@b^0,f,c
 11376  0025C0  3629               	rlcf	(___fladd@b+1)^0,f,c
 11377  0025C2  362A               	rlcf	(___fladd@b+2)^0,f,c
 11378  0025C4  362B               	rlcf	(___fladd@b+3)^0,f,c
 11379  0025C6  AE37               	btfss	___fladd@grs^0,7,c
 11380  0025C8  EFE8  F012         	goto	u4951
 11381  0025CC  EFEA  F012         	goto	u4950
 11382  0025D0                     u4951:
 11383  0025D0  EFEB  F012         	goto	l5376
 11384  0025D4                     u4950:
 11385  0025D4  8028               	bsf	___fladd@b^0,0,c
 11386  0025D6                     l5376:
 11387  0025D6  A037               	btfss	___fladd@grs^0,0,c
 11388  0025D8  EFF0  F012         	goto	u4961
 11389  0025DC  EFF2  F012         	goto	u4960
 11390  0025E0                     u4961:
 11391  0025E0  EFF6  F012         	goto	l5380
 11392  0025E4                     u4960:
 11393  0025E4  80D8               	bsf	status,0,c
 11394  0025E6  3637               	rlcf	___fladd@grs^0,f,c
 11395  0025E8  EFF8  F012         	goto	l5382
 11396  0025EC                     l5380:
 11397  0025EC  90D8               	bcf	status,0,c
 11398  0025EE  3637               	rlcf	___fladd@grs^0,f,c
 11399  0025F0                     l5382:
 11400  0025F0  5036               	movf	___fladd@bexp^0,w,c
 11401  0025F2  B4D8               	btfsc	status,2,c
 11402  0025F4  EFFE  F012         	goto	u4971
 11403  0025F8  EF00  F013         	goto	u4970
 11404  0025FC                     u4971:
 11405  0025FC  EF01  F013         	goto	l5386
 11406  002600                     u4970:
 11407  002600  0636               	decf	___fladd@bexp^0,f,c
 11408  002602                     l5386:
 11409  002602  AE2A               	btfss	(___fladd@b+2)^0,7,c
 11410  002604  EF06  F013         	goto	u4981
 11411  002608  EF08  F013         	goto	u4980
 11412  00260C                     u4981:
 11413  00260C  EFDE  F012         	goto	l5370
 11414  002610                     u4980:
 11415  002610                     l5388:
 11416  002610  0E00               	movlw	0
 11417  002612  6E35               	movwf	___fladd@aexp^0,c
 11418  002614  AE37               	btfss	___fladd@grs^0,7,c
 11419  002616  EF0F  F013         	goto	u4991
 11420  00261A  EF11  F013         	goto	u4990
 11421  00261E                     u4991:
 11422  00261E  EF29  F013         	goto	l1517
 11423  002622                     u4990:
 11424  002622  C037  F030         	movff	___fladd@grs,??___fladd
 11425  002626  0E7F               	movlw	127
 11426  002628  1630               	andwf	??___fladd^0,f,c
 11427  00262A  B4D8               	btfsc	status,2,c
 11428  00262C  EF1A  F013         	goto	u5001
 11429  002630  EF1C  F013         	goto	u5000
 11430  002634                     u5001:
 11431  002634  EF20  F013         	goto	l1518
 11432  002638                     u5000:
 11433  002638                     l5394:
 11434  002638  0E01               	movlw	1
 11435  00263A  6E35               	movwf	___fladd@aexp^0,c
 11436  00263C  EF29  F013         	goto	l1517
 11437  002640                     l1518:
 11438  002640  A028               	btfss	___fladd@b^0,0,c
 11439  002642  EF25  F013         	goto	u5011
 11440  002646  EF27  F013         	goto	u5010
 11441  00264A                     u5011:
 11442  00264A  EF29  F013         	goto	l1517
 11443  00264E                     u5010:
 11444  00264E  EF1C  F013         	goto	l5394
 11445  002652                     l1517:
 11446  002652  5035               	movf	___fladd@aexp^0,w,c
 11447  002654  B4D8               	btfsc	status,2,c
 11448  002656  EF2F  F013         	goto	u5021
 11449  00265A  EF31  F013         	goto	u5020
 11450  00265E                     u5021:
 11451  00265E  EF5C  F013         	goto	l5406
 11452  002662                     u5020:
 11453  002662  0E01               	movlw	1
 11454  002664  2628               	addwf	___fladd@b^0,f,c
 11455  002666  0E00               	movlw	0
 11456  002668  2229               	addwfc	(___fladd@b+1)^0,f,c
 11457  00266A  222A               	addwfc	(___fladd@b+2)^0,f,c
 11458  00266C  222B               	addwfc	(___fladd@b+3)^0,f,c
 11459  00266E  A02B               	btfss	(___fladd@b+3)^0,0,c
 11460  002670  EF3C  F013         	goto	u5031
 11461  002674  EF3E  F013         	goto	u5030
 11462  002678                     u5031:
 11463  002678  EF5C  F013         	goto	l5406
 11464  00267C                     u5030:
 11465  00267C  C028  F030         	movff	___fladd@b,??___fladd
 11466  002680  C029  F031         	movff	___fladd@b+1,??___fladd+1
 11467  002684  C02A  F032         	movff	___fladd@b+2,??___fladd+2
 11468  002688  C02B  F033         	movff	___fladd@b+3,??___fladd+3
 11469  00268C  3433               	rlcf	(??___fladd+3)^0,w,c
 11470  00268E  3233               	rrcf	(??___fladd+3)^0,f,c
 11471  002690  3232               	rrcf	(??___fladd+2)^0,f,c
 11472  002692  3231               	rrcf	(??___fladd+1)^0,f,c
 11473  002694  3230               	rrcf	??___fladd^0,f,c
 11474  002696  C030  F028         	movff	??___fladd,___fladd@b
 11475  00269A  C031  F029         	movff	??___fladd+1,___fladd@b+1
 11476  00269E  C032  F02A         	movff	??___fladd+2,___fladd@b+2
 11477  0026A2  C033  F02B         	movff	??___fladd+3,___fladd@b+3
 11478  0026A6  2836               	incf	___fladd@bexp^0,w,c
 11479  0026A8  B4D8               	btfsc	status,2,c
 11480  0026AA  EF59  F013         	goto	u5041
 11481  0026AE  EF5B  F013         	goto	u5040
 11482  0026B2                     u5041:
 11483  0026B2  EF5C  F013         	goto	l5406
 11484  0026B6                     u5040:
 11485  0026B6  2A36               	incf	___fladd@bexp^0,f,c
 11486  0026B8                     l5406:
 11487  0026B8  2836               	incf	___fladd@bexp^0,w,c
 11488  0026BA  B4D8               	btfsc	status,2,c
 11489  0026BC  EF62  F013         	goto	u5051
 11490  0026C0  EF64  F013         	goto	u5050
 11491  0026C4                     u5051:
 11492  0026C4  EF6C  F013         	goto	l5410
 11493  0026C8                     u5050:
 11494  0026C8  5036               	movf	___fladd@bexp^0,w,c
 11495  0026CA  A4D8               	btfss	status,2,c
 11496  0026CC  EF6A  F013         	goto	u5061
 11497  0026D0  EF6C  F013         	goto	u5060
 11498  0026D4                     u5061:
 11499  0026D4  EF7E  F013         	goto	l5414
 11500  0026D8                     u5060:
 11501  0026D8                     l5410:
 11502  0026D8  0E00               	movlw	0
 11503  0026DA  6E28               	movwf	___fladd@b^0,c
 11504  0026DC  0E00               	movlw	0
 11505  0026DE  6E29               	movwf	(___fladd@b+1)^0,c
 11506  0026E0  0E00               	movlw	0
 11507  0026E2  6E2A               	movwf	(___fladd@b+2)^0,c
 11508  0026E4  0E00               	movlw	0
 11509  0026E6  6E2B               	movwf	(___fladd@b+3)^0,c
 11510  0026E8  5036               	movf	___fladd@bexp^0,w,c
 11511  0026EA  A4D8               	btfss	status,2,c
 11512  0026EC  EF7A  F013         	goto	u5071
 11513  0026F0  EF7C  F013         	goto	u5070
 11514  0026F4                     u5071:
 11515  0026F4  EF7E  F013         	goto	l5414
 11516  0026F8                     u5070:
 11517  0026F8  0E00               	movlw	0
 11518  0026FA  6E34               	movwf	___fladd@signs^0,c
 11519  0026FC                     l5414:
 11520  0026FC  A036               	btfss	___fladd@bexp^0,0,c
 11521  0026FE  EF83  F013         	goto	u5081
 11522  002702  EF85  F013         	goto	u5080
 11523  002706                     u5081:
 11524  002706  EF88  F013         	goto	l5418
 11525  00270A                     u5080:
 11526  00270A  8E2A               	bsf	(___fladd@b+2)^0,7,c
 11527  00270C  EF89  F013         	goto	l5420
 11528  002710                     l5418:
 11529  002710  9E2A               	bcf	(___fladd@b+2)^0,7,c
 11530  002712                     l5420:
 11531  002712  90D8               	bcf	status,0,c
 11532  002714  3036               	rrcf	___fladd@bexp^0,w,c
 11533  002716  6E2B               	movwf	(___fladd@b+3)^0,c
 11534  002718  AE34               	btfss	___fladd@signs^0,7,c
 11535  00271A  EF91  F013         	goto	u5091
 11536  00271E  EF93  F013         	goto	u5090
 11537  002722                     u5091:
 11538  002722  EF94  F013         	goto	l5426
 11539  002726                     u5090:
 11540  002726  8E2B               	bsf	(___fladd@b+3)^0,7,c
 11541  002728                     l5426:
 11542  002728  C028  F028         	movff	___fladd@b,?___fladd
 11543  00272C  C029  F029         	movff	___fladd@b+1,?___fladd+1
 11544  002730  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
 11545  002734  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
 11546  002738                     l1500:
 11547  002738  0012               	return		;funcret
 11548  00273A                     __end_of___fladd:
 11549                           	callstack 0
 11550                           
 11551 ;; *************** function ___flmul *****************
 11552 ;; Defined at:
 11553 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;  b               4   14[COMRAM] unsigned char 
 11556 ;;  a               4   18[COMRAM] unsigned char 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  prod            4   33[COMRAM] struct .
 11559 ;;  grs             4   27[COMRAM] unsigned long 
 11560 ;;  temp            2   37[COMRAM] struct .
 11561 ;;  bexp            1   32[COMRAM] unsigned char 
 11562 ;;  aexp            1   31[COMRAM] unsigned char 
 11563 ;;  sign            1   26[COMRAM] unsigned char 
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  4   14[COMRAM] unsigned char 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, status,0, prodl, prodh
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11577 ;;Total ram usage:       25 bytes
 11578 ;; Hardware stack levels used: 1
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_doMath
 11583 ;;		_evaluatePostfix
 11584 ;;		_efgtoa
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text50
 11589  002B9A                     __ptext50:
 11590                           	callstack 0
 11591  002B9A                     ___flmul:
 11592                           	callstack 26
 11593  002B9A  5012               	movf	(___flmul@b+3)^0,w,c
 11594  002B9C  0B80               	andlw	128
 11595  002B9E  6E1B               	movwf	___flmul@sign^0,c
 11596  002BA0  5012               	movf	(___flmul@b+3)^0,w,c
 11597  002BA2  2412               	addwf	(___flmul@b+3)^0,w,c
 11598  002BA4  6E21               	movwf	___flmul@bexp^0,c
 11599  002BA6  AE11               	btfss	(___flmul@b+2)^0,7,c
 11600  002BA8  EFD8  F015         	goto	u5551
 11601  002BAC  EFDA  F015         	goto	u5550
 11602  002BB0                     u5551:
 11603  002BB0  EFDB  F015         	goto	l5714
 11604  002BB4                     u5550:
 11605  002BB4  8021               	bsf	___flmul@bexp^0,0,c
 11606  002BB6                     l5714:
 11607  002BB6  5021               	movf	___flmul@bexp^0,w,c
 11608  002BB8  B4D8               	btfsc	status,2,c
 11609  002BBA  EFE1  F015         	goto	u5561
 11610  002BBE  EFE3  F015         	goto	u5560
 11611  002BC2                     u5561:
 11612  002BC2  EFF6  F015         	goto	l5722
 11613  002BC6                     u5560:
 11614  002BC6  2821               	incf	___flmul@bexp^0,w,c
 11615  002BC8  A4D8               	btfss	status,2,c
 11616  002BCA  EFE9  F015         	goto	u5571
 11617  002BCE  EFEB  F015         	goto	u5570
 11618  002BD2                     u5571:
 11619  002BD2  EFF3  F015         	goto	l5720
 11620  002BD6                     u5570:
 11621  002BD6  0E00               	movlw	0
 11622  002BD8  6E0F               	movwf	___flmul@b^0,c
 11623  002BDA  0E00               	movlw	0
 11624  002BDC  6E10               	movwf	(___flmul@b+1)^0,c
 11625  002BDE  0E00               	movlw	0
 11626  002BE0  6E11               	movwf	(___flmul@b+2)^0,c
 11627  002BE2  0E00               	movlw	0
 11628  002BE4  6E12               	movwf	(___flmul@b+3)^0,c
 11629  002BE6                     l5720:
 11630  002BE6  8E11               	bsf	(___flmul@b+2)^0,7,c
 11631  002BE8  EFFE  F015         	goto	l5724
 11632  002BEC                     l5722:
 11633  002BEC  0E00               	movlw	0
 11634  002BEE  6E0F               	movwf	___flmul@b^0,c
 11635  002BF0  0E00               	movlw	0
 11636  002BF2  6E10               	movwf	(___flmul@b+1)^0,c
 11637  002BF4  0E00               	movlw	0
 11638  002BF6  6E11               	movwf	(___flmul@b+2)^0,c
 11639  002BF8  0E00               	movlw	0
 11640  002BFA  6E12               	movwf	(___flmul@b+3)^0,c
 11641  002BFC                     l5724:
 11642  002BFC  5016               	movf	(___flmul@a+3)^0,w,c
 11643  002BFE  0B80               	andlw	128
 11644  002C00  1A1B               	xorwf	___flmul@sign^0,f,c
 11645  002C02  5016               	movf	(___flmul@a+3)^0,w,c
 11646  002C04  2416               	addwf	(___flmul@a+3)^0,w,c
 11647  002C06  6E20               	movwf	___flmul@aexp^0,c
 11648  002C08  AE15               	btfss	(___flmul@a+2)^0,7,c
 11649  002C0A  EF09  F016         	goto	u5581
 11650  002C0E  EF0B  F016         	goto	u5580
 11651  002C12                     u5581:
 11652  002C12  EF0C  F016         	goto	l5732
 11653  002C16                     u5580:
 11654  002C16  8020               	bsf	___flmul@aexp^0,0,c
 11655  002C18                     l5732:
 11656  002C18  5020               	movf	___flmul@aexp^0,w,c
 11657  002C1A  B4D8               	btfsc	status,2,c
 11658  002C1C  EF12  F016         	goto	u5591
 11659  002C20  EF14  F016         	goto	u5590
 11660  002C24                     u5591:
 11661  002C24  EF27  F016         	goto	l5740
 11662  002C28                     u5590:
 11663  002C28  2820               	incf	___flmul@aexp^0,w,c
 11664  002C2A  A4D8               	btfss	status,2,c
 11665  002C2C  EF1A  F016         	goto	u5601
 11666  002C30  EF1C  F016         	goto	u5600
 11667  002C34                     u5601:
 11668  002C34  EF24  F016         	goto	l5738
 11669  002C38                     u5600:
 11670  002C38  0E00               	movlw	0
 11671  002C3A  6E13               	movwf	___flmul@a^0,c
 11672  002C3C  0E00               	movlw	0
 11673  002C3E  6E14               	movwf	(___flmul@a+1)^0,c
 11674  002C40  0E00               	movlw	0
 11675  002C42  6E15               	movwf	(___flmul@a+2)^0,c
 11676  002C44  0E00               	movlw	0
 11677  002C46  6E16               	movwf	(___flmul@a+3)^0,c
 11678  002C48                     l5738:
 11679  002C48  8E15               	bsf	(___flmul@a+2)^0,7,c
 11680  002C4A  EF2F  F016         	goto	l1577
 11681  002C4E                     l5740:
 11682  002C4E  0E00               	movlw	0
 11683  002C50  6E13               	movwf	___flmul@a^0,c
 11684  002C52  0E00               	movlw	0
 11685  002C54  6E14               	movwf	(___flmul@a+1)^0,c
 11686  002C56  0E00               	movlw	0
 11687  002C58  6E15               	movwf	(___flmul@a+2)^0,c
 11688  002C5A  0E00               	movlw	0
 11689  002C5C  6E16               	movwf	(___flmul@a+3)^0,c
 11690  002C5E                     l1577:
 11691  002C5E  5020               	movf	___flmul@aexp^0,w,c
 11692  002C60  B4D8               	btfsc	status,2,c
 11693  002C62  EF35  F016         	goto	u5611
 11694  002C66  EF37  F016         	goto	u5610
 11695  002C6A                     u5611:
 11696  002C6A  EF3F  F016         	goto	l5744
 11697  002C6E                     u5610:
 11698  002C6E  5021               	movf	___flmul@bexp^0,w,c
 11699  002C70  A4D8               	btfss	status,2,c
 11700  002C72  EF3D  F016         	goto	u5621
 11701  002C76  EF3F  F016         	goto	u5620
 11702  002C7A                     u5621:
 11703  002C7A  EF49  F016         	goto	l5748
 11704  002C7E                     u5620:
 11705  002C7E                     l5744:
 11706  002C7E  0E00               	movlw	0
 11707  002C80  6E0F               	movwf	?___flmul^0,c
 11708  002C82  0E00               	movlw	0
 11709  002C84  6E10               	movwf	(?___flmul+1)^0,c
 11710  002C86  0E00               	movlw	0
 11711  002C88  6E11               	movwf	(?___flmul+2)^0,c
 11712  002C8A  0E00               	movlw	0
 11713  002C8C  6E12               	movwf	(?___flmul+3)^0,c
 11714  002C8E  EFE1  F017         	goto	l1581
 11715  002C92                     l5748:
 11716  002C92  5015               	movf	(___flmul@a+2)^0,w,c
 11717  002C94  020F               	mulwf	___flmul@b^0,c
 11718  002C96  CFF3 F026          	movff	prodl,___flmul@temp
 11719  002C9A  CFF4 F027          	movff	prodh,___flmul@temp+1
 11720  002C9E  5026               	movf	___flmul@temp^0,w,c
 11721  002CA0  6E1C               	movwf	___flmul@grs^0,c
 11722  002CA2  6A1D               	clrf	(___flmul@grs+1)^0,c
 11723  002CA4  6A1E               	clrf	(___flmul@grs+2)^0,c
 11724  002CA6  6A1F               	clrf	(___flmul@grs+3)^0,c
 11725  002CA8  5027               	movf	(___flmul@temp+1)^0,w,c
 11726  002CAA  6E22               	movwf	___flmul@prod^0,c
 11727  002CAC  6A23               	clrf	(___flmul@prod+1)^0,c
 11728  002CAE  6A24               	clrf	(___flmul@prod+2)^0,c
 11729  002CB0  6A25               	clrf	(___flmul@prod+3)^0,c
 11730  002CB2  5014               	movf	(___flmul@a+1)^0,w,c
 11731  002CB4  0210               	mulwf	(___flmul@b+1)^0,c
 11732  002CB6  CFF3 F026          	movff	prodl,___flmul@temp
 11733  002CBA  CFF4 F027          	movff	prodh,___flmul@temp+1
 11734  002CBE  5026               	movf	___flmul@temp^0,w,c
 11735  002CC0  261C               	addwf	___flmul@grs^0,f,c
 11736  002CC2  0E00               	movlw	0
 11737  002CC4  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11738  002CC6  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11739  002CC8  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11740  002CCA  5027               	movf	(___flmul@temp+1)^0,w,c
 11741  002CCC  2622               	addwf	___flmul@prod^0,f,c
 11742  002CCE  0E00               	movlw	0
 11743  002CD0  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11744  002CD2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11745  002CD4  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11746  002CD6  5013               	movf	___flmul@a^0,w,c
 11747  002CD8  0211               	mulwf	(___flmul@b+2)^0,c
 11748  002CDA  CFF3 F026          	movff	prodl,___flmul@temp
 11749  002CDE  CFF4 F027          	movff	prodh,___flmul@temp+1
 11750  002CE2  5026               	movf	___flmul@temp^0,w,c
 11751  002CE4  261C               	addwf	___flmul@grs^0,f,c
 11752  002CE6  0E00               	movlw	0
 11753  002CE8  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11754  002CEA  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11755  002CEC  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11756  002CEE  5027               	movf	(___flmul@temp+1)^0,w,c
 11757  002CF0  2622               	addwf	___flmul@prod^0,f,c
 11758  002CF2  0E00               	movlw	0
 11759  002CF4  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11760  002CF6  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11761  002CF8  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11762  002CFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11763  002CFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11764  002D02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11765  002D06  6A1C               	clrf	___flmul@grs^0,c
 11766  002D08  5013               	movf	___flmul@a^0,w,c
 11767  002D0A  0210               	mulwf	(___flmul@b+1)^0,c
 11768  002D0C  CFF3 F026          	movff	prodl,___flmul@temp
 11769  002D10  CFF4 F027          	movff	prodh,___flmul@temp+1
 11770  002D14  5026               	movf	___flmul@temp^0,w,c
 11771  002D16  261C               	addwf	___flmul@grs^0,f,c
 11772  002D18  5027               	movf	(___flmul@temp+1)^0,w,c
 11773  002D1A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11774  002D1C  0E00               	movlw	0
 11775  002D1E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11776  002D20  0E00               	movlw	0
 11777  002D22  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11778  002D24  5014               	movf	(___flmul@a+1)^0,w,c
 11779  002D26  020F               	mulwf	___flmul@b^0,c
 11780  002D28  CFF3 F026          	movff	prodl,___flmul@temp
 11781  002D2C  CFF4 F027          	movff	prodh,___flmul@temp+1
 11782  002D30  5026               	movf	___flmul@temp^0,w,c
 11783  002D32  261C               	addwf	___flmul@grs^0,f,c
 11784  002D34  5027               	movf	(___flmul@temp+1)^0,w,c
 11785  002D36  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11786  002D38  0E00               	movlw	0
 11787  002D3A  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11788  002D3C  0E00               	movlw	0
 11789  002D3E  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11790  002D40  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11791  002D44  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11792  002D48  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11793  002D4C  6A1C               	clrf	___flmul@grs^0,c
 11794  002D4E  5013               	movf	___flmul@a^0,w,c
 11795  002D50  020F               	mulwf	___flmul@b^0,c
 11796  002D52  CFF3 F026          	movff	prodl,___flmul@temp
 11797  002D56  CFF4 F027          	movff	prodh,___flmul@temp+1
 11798  002D5A  5026               	movf	___flmul@temp^0,w,c
 11799  002D5C  261C               	addwf	___flmul@grs^0,f,c
 11800  002D5E  5027               	movf	(___flmul@temp+1)^0,w,c
 11801  002D60  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11802  002D62  0E00               	movlw	0
 11803  002D64  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11804  002D66  0E00               	movlw	0
 11805  002D68  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11806  002D6A  5015               	movf	(___flmul@a+2)^0,w,c
 11807  002D6C  0210               	mulwf	(___flmul@b+1)^0,c
 11808  002D6E  CFF3 F026          	movff	prodl,___flmul@temp
 11809  002D72  CFF4 F027          	movff	prodh,___flmul@temp+1
 11810  002D76  5026               	movf	___flmul@temp^0,w,c
 11811  002D78  2622               	addwf	___flmul@prod^0,f,c
 11812  002D7A  5027               	movf	(___flmul@temp+1)^0,w,c
 11813  002D7C  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11814  002D7E  0E00               	movlw	0
 11815  002D80  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11816  002D82  0E00               	movlw	0
 11817  002D84  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11818  002D86  5014               	movf	(___flmul@a+1)^0,w,c
 11819  002D88  0211               	mulwf	(___flmul@b+2)^0,c
 11820  002D8A  CFF3 F026          	movff	prodl,___flmul@temp
 11821  002D8E  CFF4 F027          	movff	prodh,___flmul@temp+1
 11822  002D92  5026               	movf	___flmul@temp^0,w,c
 11823  002D94  2622               	addwf	___flmul@prod^0,f,c
 11824  002D96  5027               	movf	(___flmul@temp+1)^0,w,c
 11825  002D98  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11826  002D9A  0E00               	movlw	0
 11827  002D9C  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11828  002D9E  0E00               	movlw	0
 11829  002DA0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11830  002DA2  5015               	movf	(___flmul@a+2)^0,w,c
 11831  002DA4  0211               	mulwf	(___flmul@b+2)^0,c
 11832  002DA6  CFF3 F026          	movff	prodl,___flmul@temp
 11833  002DAA  CFF4 F027          	movff	prodh,___flmul@temp+1
 11834  002DAE  5026               	movf	___flmul@temp^0,w,c
 11835  002DB0  6E17               	movwf	??___flmul^0,c
 11836  002DB2  5027               	movf	(___flmul@temp+1)^0,w,c
 11837  002DB4  6E18               	movwf	(??___flmul+1)^0,c
 11838  002DB6  6A19               	clrf	(??___flmul+2)^0,c
 11839  002DB8  6A1A               	clrf	(??___flmul+3)^0,c
 11840  002DBA  C019  F01A         	movff	??___flmul+2,??___flmul+3
 11841  002DBE  C018  F019         	movff	??___flmul+1,??___flmul+2
 11842  002DC2  C017  F018         	movff	??___flmul,??___flmul+1
 11843  002DC6  6A17               	clrf	??___flmul^0,c
 11844  002DC8  5017               	movf	??___flmul^0,w,c
 11845  002DCA  2622               	addwf	___flmul@prod^0,f,c
 11846  002DCC  5018               	movf	(??___flmul+1)^0,w,c
 11847  002DCE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11848  002DD0  5019               	movf	(??___flmul+2)^0,w,c
 11849  002DD2  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11850  002DD4  501A               	movf	(??___flmul+3)^0,w,c
 11851  002DD6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11852  002DD8  C01C  F017         	movff	___flmul@grs,??___flmul
 11853  002DDC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 11854  002DE0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 11855  002DE4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 11856  002DE8  0E19               	movlw	25
 11857  002DEA  EFFC  F016         	goto	u5630
 11858  002DEE                     u5635:
 11859  002DEE  90D8               	bcf	status,0,c
 11860  002DF0  321A               	rrcf	(??___flmul+3)^0,f,c
 11861  002DF2  3219               	rrcf	(??___flmul+2)^0,f,c
 11862  002DF4  3218               	rrcf	(??___flmul+1)^0,f,c
 11863  002DF6  3217               	rrcf	??___flmul^0,f,c
 11864  002DF8                     u5630:
 11865  002DF8  2EE8               	decfsz	wreg,f,c
 11866  002DFA  EFF7  F016         	goto	u5635
 11867  002DFE  5017               	movf	??___flmul^0,w,c
 11868  002E00  2622               	addwf	___flmul@prod^0,f,c
 11869  002E02  5018               	movf	(??___flmul+1)^0,w,c
 11870  002E04  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11871  002E06  5019               	movf	(??___flmul+2)^0,w,c
 11872  002E08  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11873  002E0A  501A               	movf	(??___flmul+3)^0,w,c
 11874  002E0C  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11875  002E0E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11876  002E12  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11877  002E16  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11878  002E1A  6A1C               	clrf	___flmul@grs^0,c
 11879  002E1C  5020               	movf	___flmul@aexp^0,w,c
 11880  002E1E  C021  F017         	movff	___flmul@bexp,??___flmul
 11881  002E22  6A18               	clrf	(??___flmul+1)^0,c
 11882  002E24  2617               	addwf	??___flmul^0,f,c
 11883  002E26  0E00               	movlw	0
 11884  002E28  2218               	addwfc	(??___flmul+1)^0,f,c
 11885  002E2A  0E82               	movlw	130
 11886  002E2C  2417               	addwf	??___flmul^0,w,c
 11887  002E2E  6E26               	movwf	___flmul@temp^0,c
 11888  002E30  0EFF               	movlw	255
 11889  002E32  2018               	addwfc	(??___flmul+1)^0,w,c
 11890  002E34  6E27               	movwf	(___flmul@temp+1)^0,c
 11891  002E36  EF32  F017         	goto	l5796
 11892  002E3A                     l5790:
 11893  002E3A  90D8               	bcf	status,0,c
 11894  002E3C  3622               	rlcf	___flmul@prod^0,f,c
 11895  002E3E  3623               	rlcf	(___flmul@prod+1)^0,f,c
 11896  002E40  3624               	rlcf	(___flmul@prod+2)^0,f,c
 11897  002E42  3625               	rlcf	(___flmul@prod+3)^0,f,c
 11898  002E44  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11899  002E46  EF27  F017         	goto	u5641
 11900  002E4A  EF29  F017         	goto	u5640
 11901  002E4E                     u5641:
 11902  002E4E  EF2A  F017         	goto	l1584
 11903  002E52                     u5640:
 11904  002E52  8022               	bsf	___flmul@prod^0,0,c
 11905  002E54                     l1584:
 11906  002E54  90D8               	bcf	status,0,c
 11907  002E56  361C               	rlcf	___flmul@grs^0,f,c
 11908  002E58  361D               	rlcf	(___flmul@grs+1)^0,f,c
 11909  002E5A  361E               	rlcf	(___flmul@grs+2)^0,f,c
 11910  002E5C  361F               	rlcf	(___flmul@grs+3)^0,f,c
 11911  002E5E  0626               	decf	___flmul@temp^0,f,c
 11912  002E60  A0D8               	btfss	status,0,c
 11913  002E62  0627               	decf	(___flmul@temp+1)^0,f,c
 11914  002E64                     l5796:
 11915  002E64  AE24               	btfss	(___flmul@prod+2)^0,7,c
 11916  002E66  EF37  F017         	goto	u5651
 11917  002E6A  EF39  F017         	goto	u5650
 11918  002E6E                     u5651:
 11919  002E6E  EF1D  F017         	goto	l5790
 11920  002E72                     u5650:
 11921  002E72  0E00               	movlw	0
 11922  002E74  6E20               	movwf	___flmul@aexp^0,c
 11923  002E76  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11924  002E78  EF40  F017         	goto	u5661
 11925  002E7C  EF42  F017         	goto	u5660
 11926  002E80                     u5661:
 11927  002E80  EF66  F017         	goto	l1586
 11928  002E84                     u5660:
 11929  002E84  0EFF               	movlw	255
 11930  002E86  141C               	andwf	___flmul@grs^0,w,c
 11931  002E88  6E17               	movwf	??___flmul^0,c
 11932  002E8A  0EFF               	movlw	255
 11933  002E8C  141D               	andwf	(___flmul@grs+1)^0,w,c
 11934  002E8E  6E18               	movwf	(??___flmul+1)^0,c
 11935  002E90  0EFF               	movlw	255
 11936  002E92  141E               	andwf	(___flmul@grs+2)^0,w,c
 11937  002E94  6E19               	movwf	(??___flmul+2)^0,c
 11938  002E96  0E7F               	movlw	127
 11939  002E98  141F               	andwf	(___flmul@grs+3)^0,w,c
 11940  002E9A  6E1A               	movwf	(??___flmul+3)^0,c
 11941  002E9C  5017               	movf	??___flmul^0,w,c
 11942  002E9E  1018               	iorwf	(??___flmul+1)^0,w,c
 11943  002EA0  1019               	iorwf	(??___flmul+2)^0,w,c
 11944  002EA2  101A               	iorwf	(??___flmul+3)^0,w,c
 11945  002EA4  B4D8               	btfsc	status,2,c
 11946  002EA6  EF57  F017         	goto	u5671
 11947  002EAA  EF59  F017         	goto	u5670
 11948  002EAE                     u5671:
 11949  002EAE  EF5D  F017         	goto	l1587
 11950  002EB2                     u5670:
 11951  002EB2                     l5804:
 11952  002EB2  0E01               	movlw	1
 11953  002EB4  6E20               	movwf	___flmul@aexp^0,c
 11954  002EB6  EF66  F017         	goto	l1586
 11955  002EBA                     l1587:
 11956  002EBA  A022               	btfss	___flmul@prod^0,0,c
 11957  002EBC  EF62  F017         	goto	u5681
 11958  002EC0  EF64  F017         	goto	u5680
 11959  002EC4                     u5681:
 11960  002EC4  EF66  F017         	goto	l1586
 11961  002EC8                     u5680:
 11962  002EC8  EF59  F017         	goto	l5804
 11963  002ECC                     l1586:
 11964  002ECC  5020               	movf	___flmul@aexp^0,w,c
 11965  002ECE  B4D8               	btfsc	status,2,c
 11966  002ED0  EF6C  F017         	goto	u5691
 11967  002ED4  EF6E  F017         	goto	u5690
 11968  002ED8                     u5691:
 11969  002ED8  EF92  F017         	goto	l5816
 11970  002EDC                     u5690:
 11971  002EDC  0E01               	movlw	1
 11972  002EDE  2622               	addwf	___flmul@prod^0,f,c
 11973  002EE0  0E00               	movlw	0
 11974  002EE2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11975  002EE4  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11976  002EE6  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11977  002EE8  A025               	btfss	(___flmul@prod+3)^0,0,c
 11978  002EEA  EF79  F017         	goto	u5701
 11979  002EEE  EF7B  F017         	goto	u5700
 11980  002EF2                     u5701:
 11981  002EF2  EF92  F017         	goto	l5816
 11982  002EF6                     u5700:
 11983  002EF6  C022  F017         	movff	___flmul@prod,??___flmul
 11984  002EFA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 11985  002EFE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 11986  002F02  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 11987  002F06  341A               	rlcf	(??___flmul+3)^0,w,c
 11988  002F08  321A               	rrcf	(??___flmul+3)^0,f,c
 11989  002F0A  3219               	rrcf	(??___flmul+2)^0,f,c
 11990  002F0C  3218               	rrcf	(??___flmul+1)^0,f,c
 11991  002F0E  3217               	rrcf	??___flmul^0,f,c
 11992  002F10  C017  F022         	movff	??___flmul,___flmul@prod
 11993  002F14  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 11994  002F18  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 11995  002F1C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 11996  002F20  4A26               	infsnz	___flmul@temp^0,f,c
 11997  002F22  2A27               	incf	(___flmul@temp+1)^0,f,c
 11998  002F24                     l5816:
 11999  002F24  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 12000  002F26  EF9D  F017         	goto	u5711
 12001  002F2A  5027               	movf	(___flmul@temp+1)^0,w,c
 12002  002F2C  E108               	bnz	u5710
 12003  002F2E  2826               	incf	___flmul@temp^0,w,c
 12004  002F30  A0D8               	btfss	status,0,c
 12005  002F32  EF9D  F017         	goto	u5711
 12006  002F36  EF9F  F017         	goto	u5710
 12007  002F3A                     u5711:
 12008  002F3A  EFA9  F017         	goto	l5820
 12009  002F3E                     u5710:
 12010  002F3E  0E00               	movlw	0
 12011  002F40  6E22               	movwf	___flmul@prod^0,c
 12012  002F42  0E00               	movlw	0
 12013  002F44  6E23               	movwf	(___flmul@prod+1)^0,c
 12014  002F46  0E80               	movlw	128
 12015  002F48  6E24               	movwf	(___flmul@prod+2)^0,c
 12016  002F4A  0E7F               	movlw	127
 12017  002F4C  6E25               	movwf	(___flmul@prod+3)^0,c
 12018  002F4E  EFD7  F017         	goto	l5832
 12019  002F52                     l5820:
 12020  002F52  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 12021  002F54  EFB6  F017         	goto	u5720
 12022  002F58  5027               	movf	(___flmul@temp+1)^0,w,c
 12023  002F5A  E106               	bnz	u5721
 12024  002F5C  0426               	decf	___flmul@temp^0,w,c
 12025  002F5E  B0D8               	btfsc	status,0,c
 12026  002F60  EFB4  F017         	goto	u5721
 12027  002F64  EFB6  F017         	goto	u5720
 12028  002F68                     u5721:
 12029  002F68  EFC2  F017         	goto	l1594
 12030  002F6C                     u5720:
 12031  002F6C  0E00               	movlw	0
 12032  002F6E  6E22               	movwf	___flmul@prod^0,c
 12033  002F70  0E00               	movlw	0
 12034  002F72  6E23               	movwf	(___flmul@prod+1)^0,c
 12035  002F74  0E00               	movlw	0
 12036  002F76  6E24               	movwf	(___flmul@prod+2)^0,c
 12037  002F78  0E00               	movlw	0
 12038  002F7A  6E25               	movwf	(___flmul@prod+3)^0,c
 12039  002F7C  0E00               	movlw	0
 12040  002F7E  6E1B               	movwf	___flmul@sign^0,c
 12041  002F80  EFD7  F017         	goto	l5832
 12042  002F84                     l1594:
 12043  002F84  C026  F021         	movff	___flmul@temp,___flmul@bexp
 12044  002F88  0EFF               	movlw	255
 12045  002F8A  1622               	andwf	___flmul@prod^0,f,c
 12046  002F8C  0EFF               	movlw	255
 12047  002F8E  1623               	andwf	(___flmul@prod+1)^0,f,c
 12048  002F90  0E7F               	movlw	127
 12049  002F92  1624               	andwf	(___flmul@prod+2)^0,f,c
 12050  002F94  0E00               	movlw	0
 12051  002F96  1625               	andwf	(___flmul@prod+3)^0,f,c
 12052  002F98  A021               	btfss	___flmul@bexp^0,0,c
 12053  002F9A  EFD1  F017         	goto	u5731
 12054  002F9E  EFD3  F017         	goto	u5730
 12055  002FA2                     u5731:
 12056  002FA2  EFD4  F017         	goto	l5830
 12057  002FA6                     u5730:
 12058  002FA6  8E24               	bsf	(___flmul@prod+2)^0,7,c
 12059  002FA8                     l5830:
 12060  002FA8  90D8               	bcf	status,0,c
 12061  002FAA  3021               	rrcf	___flmul@bexp^0,w,c
 12062  002FAC  6E25               	movwf	(___flmul@prod+3)^0,c
 12063  002FAE                     l5832:
 12064  002FAE  501B               	movf	___flmul@sign^0,w,c
 12065  002FB0  1225               	iorwf	(___flmul@prod+3)^0,f,c
 12066  002FB2  C022  F00F         	movff	___flmul@prod,?___flmul
 12067  002FB6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 12068  002FBA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 12069  002FBE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 12070  002FC2                     l1581:
 12071  002FC2  0012               	return		;funcret
 12072  002FC4                     __end_of___flmul:
 12073                           	callstack 0
 12074                           
 12075 ;; *************** function ___fldiv *****************
 12076 ;; Defined at:
 12077 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  b               4    0[COMRAM] unsigned char 
 12080 ;;  a               4    4[COMRAM] unsigned char 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  grs             4   19[COMRAM] unsigned long 
 12083 ;;  rem             4   12[COMRAM] unsigned long 
 12084 ;;  new_exp         2   17[COMRAM] short 
 12085 ;;  aexp            1   24[COMRAM] unsigned char 
 12086 ;;  bexp            1   23[COMRAM] unsigned char 
 12087 ;;  sign            1   16[COMRAM] unsigned char 
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  4    0[COMRAM] unsigned char 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12097 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12098 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12099 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12100 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12101 ;;Total ram usage:       25 bytes
 12102 ;; Hardware stack levels used: 1
 12103 ;; This function calls:
 12104 ;;		Nothing
 12105 ;; This function is called by:
 12106 ;;		_doMath
 12107 ;;		_evaluatePostfix
 12108 ;;		_efgtoa
 12109 ;;		_I2C_Master_Mode_Clock_Configurations
 12110 ;;		_EUSART_Baud_Rate_Calculation
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           	psect	text51
 12115  002FC4                     __ptext51:
 12116                           	callstack 0
 12117  002FC4                     ___fldiv:
 12118                           	callstack 26
 12119  002FC4  5004               	movf	(___fldiv@b+3)^0,w,c
 12120  002FC6  0B80               	andlw	128
 12121  002FC8  6E11               	movwf	___fldiv@sign^0,c
 12122  002FCA  5004               	movf	(___fldiv@b+3)^0,w,c
 12123  002FCC  2404               	addwf	(___fldiv@b+3)^0,w,c
 12124  002FCE  6E18               	movwf	___fldiv@bexp^0,c
 12125  002FD0  AE03               	btfss	(___fldiv@b+2)^0,7,c
 12126  002FD2  EFED  F017         	goto	u5321
 12127  002FD6  EFEF  F017         	goto	u5320
 12128  002FDA                     u5321:
 12129  002FDA  EFF0  F017         	goto	l5576
 12130  002FDE                     u5320:
 12131  002FDE  8018               	bsf	___fldiv@bexp^0,0,c
 12132  002FE0                     l5576:
 12133  002FE0  5018               	movf	___fldiv@bexp^0,w,c
 12134  002FE2  B4D8               	btfsc	status,2,c
 12135  002FE4  EFF6  F017         	goto	u5331
 12136  002FE8  EFF8  F017         	goto	u5330
 12137  002FEC                     u5331:
 12138  002FEC  EF0D  F018         	goto	l5586
 12139  002FF0                     u5330:
 12140  002FF0  2818               	incf	___fldiv@bexp^0,w,c
 12141  002FF2  A4D8               	btfss	status,2,c
 12142  002FF4  EFFE  F017         	goto	u5341
 12143  002FF8  EF00  F018         	goto	u5340
 12144  002FFC                     u5341:
 12145  002FFC  EF08  F018         	goto	l5582
 12146  003000                     u5340:
 12147  003000  0E00               	movlw	0
 12148  003002  6E01               	movwf	___fldiv@b^0,c
 12149  003004  0E00               	movlw	0
 12150  003006  6E02               	movwf	(___fldiv@b+1)^0,c
 12151  003008  0E00               	movlw	0
 12152  00300A  6E03               	movwf	(___fldiv@b+2)^0,c
 12153  00300C  0E00               	movlw	0
 12154  00300E  6E04               	movwf	(___fldiv@b+3)^0,c
 12155  003010                     l5582:
 12156  003010  8E03               	bsf	(___fldiv@b+2)^0,7,c
 12157  003012  0E00               	movlw	0
 12158  003014  6E04               	movwf	(___fldiv@b+3)^0,c
 12159  003016  EF15  F018         	goto	l5588
 12160  00301A                     l5586:
 12161  00301A  0E00               	movlw	0
 12162  00301C  6E01               	movwf	___fldiv@b^0,c
 12163  00301E  0E00               	movlw	0
 12164  003020  6E02               	movwf	(___fldiv@b+1)^0,c
 12165  003022  0E00               	movlw	0
 12166  003024  6E03               	movwf	(___fldiv@b+2)^0,c
 12167  003026  0E00               	movlw	0
 12168  003028  6E04               	movwf	(___fldiv@b+3)^0,c
 12169  00302A                     l5588:
 12170  00302A  5008               	movf	(___fldiv@a+3)^0,w,c
 12171  00302C  0B80               	andlw	128
 12172  00302E  1A11               	xorwf	___fldiv@sign^0,f,c
 12173  003030  5008               	movf	(___fldiv@a+3)^0,w,c
 12174  003032  2408               	addwf	(___fldiv@a+3)^0,w,c
 12175  003034  6E19               	movwf	___fldiv@aexp^0,c
 12176  003036  AE07               	btfss	(___fldiv@a+2)^0,7,c
 12177  003038  EF20  F018         	goto	u5351
 12178  00303C  EF22  F018         	goto	u5350
 12179  003040                     u5351:
 12180  003040  EF23  F018         	goto	l5596
 12181  003044                     u5350:
 12182  003044  8019               	bsf	___fldiv@aexp^0,0,c
 12183  003046                     l5596:
 12184  003046  5019               	movf	___fldiv@aexp^0,w,c
 12185  003048  B4D8               	btfsc	status,2,c
 12186  00304A  EF29  F018         	goto	u5361
 12187  00304E  EF2B  F018         	goto	u5360
 12188  003052                     u5361:
 12189  003052  EF40  F018         	goto	l5606
 12190  003056                     u5360:
 12191  003056  2819               	incf	___fldiv@aexp^0,w,c
 12192  003058  A4D8               	btfss	status,2,c
 12193  00305A  EF31  F018         	goto	u5371
 12194  00305E  EF33  F018         	goto	u5370
 12195  003062                     u5371:
 12196  003062  EF3B  F018         	goto	l5602
 12197  003066                     u5370:
 12198  003066  0E00               	movlw	0
 12199  003068  6E05               	movwf	___fldiv@a^0,c
 12200  00306A  0E00               	movlw	0
 12201  00306C  6E06               	movwf	(___fldiv@a+1)^0,c
 12202  00306E  0E00               	movlw	0
 12203  003070  6E07               	movwf	(___fldiv@a+2)^0,c
 12204  003072  0E00               	movlw	0
 12205  003074  6E08               	movwf	(___fldiv@a+3)^0,c
 12206  003076                     l5602:
 12207  003076  8E07               	bsf	(___fldiv@a+2)^0,7,c
 12208  003078  0E00               	movlw	0
 12209  00307A  6E08               	movwf	(___fldiv@a+3)^0,c
 12210  00307C  EF48  F018         	goto	l5608
 12211  003080                     l5606:
 12212  003080  0E00               	movlw	0
 12213  003082  6E05               	movwf	___fldiv@a^0,c
 12214  003084  0E00               	movlw	0
 12215  003086  6E06               	movwf	(___fldiv@a+1)^0,c
 12216  003088  0E00               	movlw	0
 12217  00308A  6E07               	movwf	(___fldiv@a+2)^0,c
 12218  00308C  0E00               	movlw	0
 12219  00308E  6E08               	movwf	(___fldiv@a+3)^0,c
 12220  003090                     l5608:
 12221  003090  5005               	movf	___fldiv@a^0,w,c
 12222  003092  1006               	iorwf	(___fldiv@a+1)^0,w,c
 12223  003094  1007               	iorwf	(___fldiv@a+2)^0,w,c
 12224  003096  1008               	iorwf	(___fldiv@a+3)^0,w,c
 12225  003098  A4D8               	btfss	status,2,c
 12226  00309A  EF51  F018         	goto	u5381
 12227  00309E  EF53  F018         	goto	u5380
 12228  0030A2                     u5381:
 12229  0030A2  EF6B  F018         	goto	l5620
 12230  0030A6                     u5380:
 12231  0030A6  0E00               	movlw	0
 12232  0030A8  6E01               	movwf	___fldiv@b^0,c
 12233  0030AA  0E00               	movlw	0
 12234  0030AC  6E02               	movwf	(___fldiv@b+1)^0,c
 12235  0030AE  0E00               	movlw	0
 12236  0030B0  6E03               	movwf	(___fldiv@b+2)^0,c
 12237  0030B2  0E00               	movlw	0
 12238  0030B4  6E04               	movwf	(___fldiv@b+3)^0,c
 12239  0030B6  0E80               	movlw	128
 12240  0030B8  1203               	iorwf	(___fldiv@b+2)^0,f,c
 12241  0030BA  0E7F               	movlw	127
 12242  0030BC  1204               	iorwf	(___fldiv@b+3)^0,f,c
 12243  0030BE                     l5614:
 12244  0030BE  5011               	movf	___fldiv@sign^0,w,c
 12245  0030C0  1204               	iorwf	(___fldiv@b+3)^0,f,c
 12246  0030C2  C001  F001         	movff	___fldiv@b,?___fldiv
 12247  0030C6  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 12248  0030CA  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 12249  0030CE  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 12250  0030D2  EFAE  F019         	goto	l1545
 12251  0030D6                     l5620:
 12252  0030D6  5018               	movf	___fldiv@bexp^0,w,c
 12253  0030D8  A4D8               	btfss	status,2,c
 12254  0030DA  EF71  F018         	goto	u5391
 12255  0030DE  EF73  F018         	goto	u5390
 12256  0030E2                     u5391:
 12257  0030E2  EF7D  F018         	goto	l5628
 12258  0030E6                     u5390:
 12259  0030E6  0E00               	movlw	0
 12260  0030E8  6E01               	movwf	?___fldiv^0,c
 12261  0030EA  0E00               	movlw	0
 12262  0030EC  6E02               	movwf	(?___fldiv+1)^0,c
 12263  0030EE  0E00               	movlw	0
 12264  0030F0  6E03               	movwf	(?___fldiv+2)^0,c
 12265  0030F2  0E00               	movlw	0
 12266  0030F4  6E04               	movwf	(?___fldiv+3)^0,c
 12267  0030F6  EFAE  F019         	goto	l1545
 12268  0030FA                     l5628:
 12269  0030FA  5019               	movf	___fldiv@aexp^0,w,c
 12270  0030FC  C018  F009         	movff	___fldiv@bexp,??___fldiv
 12271  003100  6A0A               	clrf	(??___fldiv+1)^0,c
 12272  003102  5E09               	subwf	??___fldiv^0,f,c
 12273  003104  0E00               	movlw	0
 12274  003106  5A0A               	subwfb	(??___fldiv+1)^0,f,c
 12275  003108  0E7F               	movlw	127
 12276  00310A  2409               	addwf	??___fldiv^0,w,c
 12277  00310C  6E12               	movwf	___fldiv@new_exp^0,c
 12278  00310E  0E00               	movlw	0
 12279  003110  200A               	addwfc	(??___fldiv+1)^0,w,c
 12280  003112  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 12281  003114  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 12282  003118  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 12283  00311C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 12284  003120  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 12285  003124  0E00               	movlw	0
 12286  003126  6E01               	movwf	___fldiv@b^0,c
 12287  003128  0E00               	movlw	0
 12288  00312A  6E02               	movwf	(___fldiv@b+1)^0,c
 12289  00312C  0E00               	movlw	0
 12290  00312E  6E03               	movwf	(___fldiv@b+2)^0,c
 12291  003130  0E00               	movlw	0
 12292  003132  6E04               	movwf	(___fldiv@b+3)^0,c
 12293  003134  0E00               	movlw	0
 12294  003136  6E14               	movwf	___fldiv@grs^0,c
 12295  003138  0E00               	movlw	0
 12296  00313A  6E15               	movwf	(___fldiv@grs+1)^0,c
 12297  00313C  0E00               	movlw	0
 12298  00313E  6E16               	movwf	(___fldiv@grs+2)^0,c
 12299  003140  0E00               	movlw	0
 12300  003142  6E17               	movwf	(___fldiv@grs+3)^0,c
 12301  003144  0E00               	movlw	0
 12302  003146  6E19               	movwf	___fldiv@aexp^0,c
 12303  003148  EFDE  F018         	goto	l1547
 12304  00314C                     l5638:
 12305  00314C  5019               	movf	___fldiv@aexp^0,w,c
 12306  00314E  B4D8               	btfsc	status,2,c
 12307  003150  EFAC  F018         	goto	u5401
 12308  003154  EFAE  F018         	goto	u5400
 12309  003158                     u5401:
 12310  003158  EFC5  F018         	goto	l5646
 12311  00315C                     u5400:
 12312  00315C  90D8               	bcf	status,0,c
 12313  00315E  360D               	rlcf	___fldiv@rem^0,f,c
 12314  003160  360E               	rlcf	(___fldiv@rem+1)^0,f,c
 12315  003162  360F               	rlcf	(___fldiv@rem+2)^0,f,c
 12316  003164  3610               	rlcf	(___fldiv@rem+3)^0,f,c
 12317  003166  90D8               	bcf	status,0,c
 12318  003168  3601               	rlcf	___fldiv@b^0,f,c
 12319  00316A  3602               	rlcf	(___fldiv@b+1)^0,f,c
 12320  00316C  3603               	rlcf	(___fldiv@b+2)^0,f,c
 12321  00316E  3604               	rlcf	(___fldiv@b+3)^0,f,c
 12322  003170  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 12323  003172  EFBD  F018         	goto	u5411
 12324  003176  EFBF  F018         	goto	u5410
 12325  00317A                     u5411:
 12326  00317A  EFC0  F018         	goto	l1550
 12327  00317E                     u5410:
 12328  00317E  8001               	bsf	___fldiv@b^0,0,c
 12329  003180                     l1550:
 12330  003180  90D8               	bcf	status,0,c
 12331  003182  3614               	rlcf	___fldiv@grs^0,f,c
 12332  003184  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 12333  003186  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 12334  003188  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 12335  00318A                     l5646:
 12336  00318A  5005               	movf	___fldiv@a^0,w,c
 12337  00318C  5C0D               	subwf	___fldiv@rem^0,w,c
 12338  00318E  5006               	movf	(___fldiv@a+1)^0,w,c
 12339  003190  580E               	subwfb	(___fldiv@rem+1)^0,w,c
 12340  003192  5007               	movf	(___fldiv@a+2)^0,w,c
 12341  003194  580F               	subwfb	(___fldiv@rem+2)^0,w,c
 12342  003196  5008               	movf	(___fldiv@a+3)^0,w,c
 12343  003198  5810               	subwfb	(___fldiv@rem+3)^0,w,c
 12344  00319A  A0D8               	btfss	status,0,c
 12345  00319C  EFD2  F018         	goto	u5421
 12346  0031A0  EFD4  F018         	goto	u5420
 12347  0031A4                     u5421:
 12348  0031A4  EFDD  F018         	goto	l5652
 12349  0031A8                     u5420:
 12350  0031A8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
 12351  0031AA  5005               	movf	___fldiv@a^0,w,c
 12352  0031AC  5E0D               	subwf	___fldiv@rem^0,f,c
 12353  0031AE  5006               	movf	(___fldiv@a+1)^0,w,c
 12354  0031B0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
 12355  0031B2  5007               	movf	(___fldiv@a+2)^0,w,c
 12356  0031B4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
 12357  0031B6  5008               	movf	(___fldiv@a+3)^0,w,c
 12358  0031B8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
 12359  0031BA                     l5652:
 12360  0031BA  2A19               	incf	___fldiv@aexp^0,f,c
 12361  0031BC                     l1547:
 12362  0031BC  0E19               	movlw	25
 12363  0031BE  6419               	cpfsgt	___fldiv@aexp^0,c
 12364  0031C0  EFE4  F018         	goto	u5431
 12365  0031C4  EFE6  F018         	goto	u5430
 12366  0031C8                     u5431:
 12367  0031C8  EFA6  F018         	goto	l5638
 12368  0031CC                     u5430:
 12369  0031CC  500D               	movf	___fldiv@rem^0,w,c
 12370  0031CE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
 12371  0031D0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
 12372  0031D2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
 12373  0031D4  B4D8               	btfsc	status,2,c
 12374  0031D6  EFEF  F018         	goto	u5441
 12375  0031DA  EFF1  F018         	goto	u5440
 12376  0031DE                     u5441:
 12377  0031DE  EF09  F019         	goto	l5664
 12378  0031E2                     u5440:
 12379  0031E2  8014               	bsf	___fldiv@grs^0,0,c
 12380  0031E4  EF09  F019         	goto	l5664
 12381  0031E8                     l5658:
 12382  0031E8  90D8               	bcf	status,0,c
 12383  0031EA  3601               	rlcf	___fldiv@b^0,f,c
 12384  0031EC  3602               	rlcf	(___fldiv@b+1)^0,f,c
 12385  0031EE  3603               	rlcf	(___fldiv@b+2)^0,f,c
 12386  0031F0  3604               	rlcf	(___fldiv@b+3)^0,f,c
 12387  0031F2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 12388  0031F4  EFFE  F018         	goto	u5451
 12389  0031F8  EF00  F019         	goto	u5450
 12390  0031FC                     u5451:
 12391  0031FC  EF01  F019         	goto	l1556
 12392  003200                     u5450:
 12393  003200  8001               	bsf	___fldiv@b^0,0,c
 12394  003202                     l1556:
 12395  003202  90D8               	bcf	status,0,c
 12396  003204  3614               	rlcf	___fldiv@grs^0,f,c
 12397  003206  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 12398  003208  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 12399  00320A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 12400  00320C  0612               	decf	___fldiv@new_exp^0,f,c
 12401  00320E  A0D8               	btfss	status,0,c
 12402  003210  0613               	decf	(___fldiv@new_exp+1)^0,f,c
 12403  003212                     l5664:
 12404  003212  AE03               	btfss	(___fldiv@b+2)^0,7,c
 12405  003214  EF0E  F019         	goto	u5461
 12406  003218  EF10  F019         	goto	u5460
 12407  00321C                     u5461:
 12408  00321C  EFF4  F018         	goto	l5658
 12409  003220                     u5460:
 12410  003220  0E00               	movlw	0
 12411  003222  6E19               	movwf	___fldiv@aexp^0,c
 12412  003224  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 12413  003226  EF17  F019         	goto	u5471
 12414  00322A  EF19  F019         	goto	u5470
 12415  00322E                     u5471:
 12416  00322E  EF3D  F019         	goto	l1558
 12417  003232                     u5470:
 12418  003232  0EFF               	movlw	255
 12419  003234  1414               	andwf	___fldiv@grs^0,w,c
 12420  003236  6E09               	movwf	??___fldiv^0,c
 12421  003238  0EFF               	movlw	255
 12422  00323A  1415               	andwf	(___fldiv@grs+1)^0,w,c
 12423  00323C  6E0A               	movwf	(??___fldiv+1)^0,c
 12424  00323E  0EFF               	movlw	255
 12425  003240  1416               	andwf	(___fldiv@grs+2)^0,w,c
 12426  003242  6E0B               	movwf	(??___fldiv+2)^0,c
 12427  003244  0E7F               	movlw	127
 12428  003246  1417               	andwf	(___fldiv@grs+3)^0,w,c
 12429  003248  6E0C               	movwf	(??___fldiv+3)^0,c
 12430  00324A  5009               	movf	??___fldiv^0,w,c
 12431  00324C  100A               	iorwf	(??___fldiv+1)^0,w,c
 12432  00324E  100B               	iorwf	(??___fldiv+2)^0,w,c
 12433  003250  100C               	iorwf	(??___fldiv+3)^0,w,c
 12434  003252  B4D8               	btfsc	status,2,c
 12435  003254  EF2E  F019         	goto	u5481
 12436  003258  EF30  F019         	goto	u5480
 12437  00325C                     u5481:
 12438  00325C  EF34  F019         	goto	l1559
 12439  003260                     u5480:
 12440  003260                     l5672:
 12441  003260  0E01               	movlw	1
 12442  003262  6E19               	movwf	___fldiv@aexp^0,c
 12443  003264  EF3D  F019         	goto	l1558
 12444  003268                     l1559:
 12445  003268  A001               	btfss	___fldiv@b^0,0,c
 12446  00326A  EF39  F019         	goto	u5491
 12447  00326E  EF3B  F019         	goto	u5490
 12448  003272                     u5491:
 12449  003272  EF3D  F019         	goto	l1558
 12450  003276                     u5490:
 12451  003276  EF30  F019         	goto	l5672
 12452  00327A                     l1558:
 12453  00327A  5019               	movf	___fldiv@aexp^0,w,c
 12454  00327C  B4D8               	btfsc	status,2,c
 12455  00327E  EF43  F019         	goto	u5501
 12456  003282  EF45  F019         	goto	u5500
 12457  003286                     u5501:
 12458  003286  EF69  F019         	goto	l5684
 12459  00328A                     u5500:
 12460  00328A  0E01               	movlw	1
 12461  00328C  2601               	addwf	___fldiv@b^0,f,c
 12462  00328E  0E00               	movlw	0
 12463  003290  2202               	addwfc	(___fldiv@b+1)^0,f,c
 12464  003292  2203               	addwfc	(___fldiv@b+2)^0,f,c
 12465  003294  2204               	addwfc	(___fldiv@b+3)^0,f,c
 12466  003296  A004               	btfss	(___fldiv@b+3)^0,0,c
 12467  003298  EF50  F019         	goto	u5511
 12468  00329C  EF52  F019         	goto	u5510
 12469  0032A0                     u5511:
 12470  0032A0  EF69  F019         	goto	l5684
 12471  0032A4                     u5510:
 12472  0032A4  C001  F009         	movff	___fldiv@b,??___fldiv
 12473  0032A8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 12474  0032AC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 12475  0032B0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 12476  0032B4  340C               	rlcf	(??___fldiv+3)^0,w,c
 12477  0032B6  320C               	rrcf	(??___fldiv+3)^0,f,c
 12478  0032B8  320B               	rrcf	(??___fldiv+2)^0,f,c
 12479  0032BA  320A               	rrcf	(??___fldiv+1)^0,f,c
 12480  0032BC  3209               	rrcf	??___fldiv^0,f,c
 12481  0032BE  C009  F001         	movff	??___fldiv,___fldiv@b
 12482  0032C2  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 12483  0032C6  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 12484  0032CA  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 12485  0032CE  4A12               	infsnz	___fldiv@new_exp^0,f,c
 12486  0032D0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 12487  0032D2                     l5684:
 12488  0032D2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12489  0032D4  EF74  F019         	goto	u5521
 12490  0032D8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 12491  0032DA  E108               	bnz	u5520
 12492  0032DC  2812               	incf	___fldiv@new_exp^0,w,c
 12493  0032DE  A0D8               	btfss	status,0,c
 12494  0032E0  EF74  F019         	goto	u5521
 12495  0032E4  EF76  F019         	goto	u5520
 12496  0032E8                     u5521:
 12497  0032E8  EF81  F019         	goto	l5688
 12498  0032EC                     u5520:
 12499  0032EC  0E00               	movlw	0
 12500  0032EE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 12501  0032F0  6812               	setf	___fldiv@new_exp^0,c
 12502  0032F2  0E00               	movlw	0
 12503  0032F4  6E01               	movwf	___fldiv@b^0,c
 12504  0032F6  0E00               	movlw	0
 12505  0032F8  6E02               	movwf	(___fldiv@b+1)^0,c
 12506  0032FA  0E00               	movlw	0
 12507  0032FC  6E03               	movwf	(___fldiv@b+2)^0,c
 12508  0032FE  0E00               	movlw	0
 12509  003300  6E04               	movwf	(___fldiv@b+3)^0,c
 12510  003302                     l5688:
 12511  003302  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12512  003304  EF8E  F019         	goto	u5530
 12513  003308  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 12514  00330A  E106               	bnz	u5531
 12515  00330C  0412               	decf	___fldiv@new_exp^0,w,c
 12516  00330E  B0D8               	btfsc	status,0,c
 12517  003310  EF8C  F019         	goto	u5531
 12518  003314  EF8E  F019         	goto	u5530
 12519  003318                     u5531:
 12520  003318  EF9C  F019         	goto	l5692
 12521  00331C                     u5530:
 12522  00331C  0E00               	movlw	0
 12523  00331E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 12524  003320  0E00               	movlw	0
 12525  003322  6E12               	movwf	___fldiv@new_exp^0,c
 12526  003324  0E00               	movlw	0
 12527  003326  6E01               	movwf	___fldiv@b^0,c
 12528  003328  0E00               	movlw	0
 12529  00332A  6E02               	movwf	(___fldiv@b+1)^0,c
 12530  00332C  0E00               	movlw	0
 12531  00332E  6E03               	movwf	(___fldiv@b+2)^0,c
 12532  003330  0E00               	movlw	0
 12533  003332  6E04               	movwf	(___fldiv@b+3)^0,c
 12534  003334  0E00               	movlw	0
 12535  003336  6E11               	movwf	___fldiv@sign^0,c
 12536  003338                     l5692:
 12537  003338  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 12538  00333C  A018               	btfss	___fldiv@bexp^0,0,c
 12539  00333E  EFA3  F019         	goto	u5541
 12540  003342  EFA5  F019         	goto	u5540
 12541  003346                     u5541:
 12542  003346  EFA8  F019         	goto	l5698
 12543  00334A                     u5540:
 12544  00334A  8E03               	bsf	(___fldiv@b+2)^0,7,c
 12545  00334C  EFA9  F019         	goto	l5700
 12546  003350                     l5698:
 12547  003350  9E03               	bcf	(___fldiv@b+2)^0,7,c
 12548  003352                     l5700:
 12549  003352  90D8               	bcf	status,0,c
 12550  003354  3018               	rrcf	___fldiv@bexp^0,w,c
 12551  003356  6E04               	movwf	(___fldiv@b+3)^0,c
 12552  003358  EF5F  F018         	goto	l5614
 12553  00335C                     l1545:
 12554  00335C  0012               	return		;funcret
 12555  00335E                     __end_of___fldiv:
 12556                           	callstack 0
 12557                           
 12558 ;; *************** function _check_digit *****************
 12559 ;; Defined at:
 12560 ;;		line 47 in file "Algorithms/Infix_to_postfix/infix_to_post.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;  c               1    wreg     unsigned char 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;  c               1    2[COMRAM] unsigned char 
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  2    0[COMRAM] int 
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;Total ram usage:        3 bytes
 12579 ;; Hardware stack levels used: 1
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_infixToPostfix
 12584 ;;		_evaluatePostfix
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           	psect	text52
 12589  005F92                     __ptext52:
 12590                           	callstack 0
 12591  005F92                     _check_digit:
 12592                           	callstack 29
 12593                           
 12594                           ;incstack = 0
 12595                           ;check_digit@c stored from wreg
 12596  005F92  6E03               	movwf	check_digit@c^0,c
 12597  005F94                     
 12598                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 48:  if ((c>='0') && (c<='9')) return 1;
 12599  005F94  0E2F               	movlw	47
 12600  005F96  6403               	cpfsgt	check_digit@c^0,c
 12601  005F98  EFD0  F02F         	goto	u7421
 12602  005F9C  EFD2  F02F         	goto	u7420
 12603  005FA0                     u7421:
 12604  005FA0  EFE0  F02F         	goto	l6916
 12605  005FA4                     u7420:
 12606  005FA4  0E3A               	movlw	58
 12607  005FA6  6003               	cpfslt	check_digit@c^0,c
 12608  005FA8  EFD8  F02F         	goto	u7431
 12609  005FAC  EFDA  F02F         	goto	u7430
 12610  005FB0                     u7431:
 12611  005FB0  EFE0  F02F         	goto	l6916
 12612  005FB4                     u7430:
 12613  005FB4  0E00               	movlw	0
 12614  005FB6  6E02               	movwf	(?_check_digit+1)^0,c
 12615  005FB8  0E01               	movlw	1
 12616  005FBA  6E01               	movwf	?_check_digit^0,c
 12617  005FBC  EFE4  F02F         	goto	l901
 12618  005FC0                     l6916:
 12619                           
 12620                           ;Algorithms/Infix_to_postfix/infix_to_post.c: 49:  return 0;
 12621  005FC0  0E00               	movlw	0
 12622  005FC2  6E02               	movwf	(?_check_digit+1)^0,c
 12623  005FC4  0E00               	movlw	0
 12624  005FC6  6E01               	movwf	?_check_digit^0,c
 12625  005FC8                     l901:
 12626  005FC8  0012               	return		;funcret
 12627  005FCA                     __end_of_check_digit:
 12628                           	callstack 0
 12629                           
 12630 ;; *************** function ___xxtofl *****************
 12631 ;; Defined at:
 12632 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  sign            1    wreg     unsigned char 
 12635 ;;  val             4    0[COMRAM] long 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;  sign            1    8[COMRAM] unsigned char 
 12638 ;;  arg             4   10[COMRAM] unsigned long 
 12639 ;;  exp             1    9[COMRAM] unsigned char 
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  4    0[COMRAM] unsigned char 
 12642 ;; Registers used:
 12643 ;;		wreg, status,2, status,0
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12650 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;Total ram usage:       14 bytes
 12654 ;; Hardware stack levels used: 1
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_evaluatePostfix
 12659 ;;		_I2C_Master_Mode_Clock_Configurations
 12660 ;;		_EUSART_Baud_Rate_Calculation
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text53
 12665  003FA0                     __ptext53:
 12666                           	callstack 0
 12667  003FA0                     ___xxtofl:
 12668                           	callstack 29
 12669                           
 12670                           ;incstack = 0
 12671                           ;___xxtofl@sign stored from wreg
 12672  003FA0  6E09               	movwf	___xxtofl@sign^0,c
 12673  003FA2  5009               	movf	___xxtofl@sign^0,w,c
 12674  003FA4  B4D8               	btfsc	status,2,c
 12675  003FA6  EFD7  F01F         	goto	u7521
 12676  003FAA  EFD9  F01F         	goto	u7520
 12677  003FAE                     u7521:
 12678  003FAE  EFFB  F01F         	goto	l1618
 12679  003FB2                     u7520:
 12680  003FB2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12681  003FB4  EFE0  F01F         	goto	u7530
 12682  003FB8  EFDE  F01F         	goto	u7531
 12683  003FBC                     u7531:
 12684  003FBC  EFFB  F01F         	goto	l1618
 12685  003FC0                     u7530:
 12686  003FC0  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12687  003FC4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12688  003FC8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12689  003FCC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12690  003FD0  1E05               	comf	??___xxtofl^0,f,c
 12691  003FD2  1E06               	comf	(??___xxtofl+1)^0,f,c
 12692  003FD4  1E07               	comf	(??___xxtofl+2)^0,f,c
 12693  003FD6  1E08               	comf	(??___xxtofl+3)^0,f,c
 12694  003FD8  2A05               	incf	??___xxtofl^0,f,c
 12695  003FDA  0E00               	movlw	0
 12696  003FDC  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12697  003FDE  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12698  003FE0  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12699  003FE2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12700  003FE6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12701  003FEA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12702  003FEE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12703  003FF2  EF03  F020         	goto	l6980
 12704  003FF6                     l1618:
 12705  003FF6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12706  003FFA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12707  003FFE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12708  004002  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12709  004006                     l6980:
 12710  004006  5001               	movf	___xxtofl@val^0,w,c
 12711  004008  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12712  00400A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12713  00400C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12714  00400E  A4D8               	btfss	status,2,c
 12715  004010  EF0C  F020         	goto	u7541
 12716  004014  EF0E  F020         	goto	u7540
 12717  004018                     u7541:
 12718  004018  EF18  F020         	goto	l6986
 12719  00401C                     u7540:
 12720  00401C  0E00               	movlw	0
 12721  00401E  6E01               	movwf	?___xxtofl^0,c
 12722  004020  0E00               	movlw	0
 12723  004022  6E02               	movwf	(?___xxtofl+1)^0,c
 12724  004024  0E00               	movlw	0
 12725  004026  6E03               	movwf	(?___xxtofl+2)^0,c
 12726  004028  0E00               	movlw	0
 12727  00402A  6E04               	movwf	(?___xxtofl+3)^0,c
 12728  00402C  EFA9  F020         	goto	l1621
 12729  004030                     l6986:
 12730  004030  0E96               	movlw	150
 12731  004032  6E0A               	movwf	___xxtofl@exp^0,c
 12732  004034  EF22  F020         	goto	l6990
 12733  004038                     l6988:
 12734  004038  2A0A               	incf	___xxtofl@exp^0,f,c
 12735  00403A  90D8               	bcf	status,0,c
 12736  00403C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12737  00403E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12738  004040  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12739  004042  320B               	rrcf	___xxtofl@arg^0,f,c
 12740  004044                     l6990:
 12741  004044  0E00               	movlw	0
 12742  004046  140B               	andwf	___xxtofl@arg^0,w,c
 12743  004048  6E05               	movwf	??___xxtofl^0,c
 12744  00404A  0E00               	movlw	0
 12745  00404C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12746  00404E  6E06               	movwf	(??___xxtofl+1)^0,c
 12747  004050  0E00               	movlw	0
 12748  004052  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12749  004054  6E07               	movwf	(??___xxtofl+2)^0,c
 12750  004056  0EFE               	movlw	254
 12751  004058  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12752  00405A  6E08               	movwf	(??___xxtofl+3)^0,c
 12753  00405C  5005               	movf	??___xxtofl^0,w,c
 12754  00405E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12755  004060  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12756  004062  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12757  004064  A4D8               	btfss	status,2,c
 12758  004066  EF37  F020         	goto	u7551
 12759  00406A  EF39  F020         	goto	u7550
 12760  00406E                     u7551:
 12761  00406E  EF1C  F020         	goto	l6988
 12762  004072                     u7550:
 12763  004072  EF47  F020         	goto	l1625
 12764  004076                     l6992:
 12765  004076  2A0A               	incf	___xxtofl@exp^0,f,c
 12766  004078  0E01               	movlw	1
 12767  00407A  260B               	addwf	___xxtofl@arg^0,f,c
 12768  00407C  0E00               	movlw	0
 12769  00407E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12770  004080  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12771  004082  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12772  004084  90D8               	bcf	status,0,c
 12773  004086  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12774  004088  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12775  00408A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12776  00408C  320B               	rrcf	___xxtofl@arg^0,f,c
 12777  00408E                     l1625:
 12778  00408E  0E00               	movlw	0
 12779  004090  140B               	andwf	___xxtofl@arg^0,w,c
 12780  004092  6E05               	movwf	??___xxtofl^0,c
 12781  004094  0E00               	movlw	0
 12782  004096  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12783  004098  6E06               	movwf	(??___xxtofl+1)^0,c
 12784  00409A  0E00               	movlw	0
 12785  00409C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12786  00409E  6E07               	movwf	(??___xxtofl+2)^0,c
 12787  0040A0  0EFF               	movlw	255
 12788  0040A2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12789  0040A4  6E08               	movwf	(??___xxtofl+3)^0,c
 12790  0040A6  5005               	movf	??___xxtofl^0,w,c
 12791  0040A8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12792  0040AA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12793  0040AC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12794  0040AE  A4D8               	btfss	status,2,c
 12795  0040B0  EF5C  F020         	goto	u7561
 12796  0040B4  EF5E  F020         	goto	u7560
 12797  0040B8                     u7561:
 12798  0040B8  EF3B  F020         	goto	l6992
 12799  0040BC                     u7560:
 12800  0040BC  EF66  F020         	goto	l7000
 12801  0040C0                     l6998:
 12802  0040C0  060A               	decf	___xxtofl@exp^0,f,c
 12803  0040C2  90D8               	bcf	status,0,c
 12804  0040C4  360B               	rlcf	___xxtofl@arg^0,f,c
 12805  0040C6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12806  0040C8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12807  0040CA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12808  0040CC                     l7000:
 12809  0040CC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12810  0040CE  EF6B  F020         	goto	u7571
 12811  0040D2  EF6D  F020         	goto	u7570
 12812  0040D6                     u7571:
 12813  0040D6  EF75  F020         	goto	l1632
 12814  0040DA                     u7570:
 12815  0040DA  0E02               	movlw	2
 12816  0040DC  600A               	cpfslt	___xxtofl@exp^0,c
 12817  0040DE  EF73  F020         	goto	u7581
 12818  0040E2  EF75  F020         	goto	u7580
 12819  0040E6                     u7581:
 12820  0040E6  EF60  F020         	goto	l6998
 12821  0040EA                     u7580:
 12822  0040EA                     l1632:
 12823  0040EA  B00A               	btfsc	___xxtofl@exp^0,0,c
 12824  0040EC  EF7A  F020         	goto	u7591
 12825  0040F0  EF7C  F020         	goto	u7590
 12826  0040F4                     u7591:
 12827  0040F4  EF7D  F020         	goto	l7006
 12828  0040F8                     u7590:
 12829  0040F8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12830  0040FA                     l7006:
 12831  0040FA  90D8               	bcf	status,0,c
 12832  0040FC  320A               	rrcf	___xxtofl@exp^0,f,c
 12833  0040FE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12834  004102  6A06               	clrf	(??___xxtofl+1)^0,c
 12835  004104  6A07               	clrf	(??___xxtofl+2)^0,c
 12836  004106  6A08               	clrf	(??___xxtofl+3)^0,c
 12837  004108  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12838  00410C  6A07               	clrf	(??___xxtofl+2)^0,c
 12839  00410E  6A06               	clrf	(??___xxtofl+1)^0,c
 12840  004110  6A05               	clrf	??___xxtofl^0,c
 12841  004112  5005               	movf	??___xxtofl^0,w,c
 12842  004114  120B               	iorwf	___xxtofl@arg^0,f,c
 12843  004116  5006               	movf	(??___xxtofl+1)^0,w,c
 12844  004118  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12845  00411A  5007               	movf	(??___xxtofl+2)^0,w,c
 12846  00411C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12847  00411E  5008               	movf	(??___xxtofl+3)^0,w,c
 12848  004120  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12849  004122  5009               	movf	___xxtofl@sign^0,w,c
 12850  004124  B4D8               	btfsc	status,2,c
 12851  004126  EF97  F020         	goto	u7601
 12852  00412A  EF99  F020         	goto	u7600
 12853  00412E                     u7601:
 12854  00412E  EFA1  F020         	goto	l7016
 12855  004132                     u7600:
 12856  004132  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12857  004134  EFA0  F020         	goto	u7610
 12858  004138  EF9E  F020         	goto	u7611
 12859  00413C                     u7611:
 12860  00413C  EFA1  F020         	goto	l7016
 12861  004140                     u7610:
 12862  004140  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12863  004142                     l7016:
 12864  004142  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12865  004146  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12866  00414A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12867  00414E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12868  004152                     l1621:
 12869  004152  0012               	return		;funcret
 12870  004154                     __end_of___xxtofl:
 12871                           	callstack 0
 12872                           
 12873 ;; *************** function _application_intialize *****************
 12874 ;; Defined at:
 12875 ;;		line 119 in file "Application.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  ret             1    0        unsigned char 
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      void 
 12882 ;; Registers used:
 12883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;Total ram usage:        0 bytes
 12894 ;; Hardware stack levels used: 1
 12895 ;; Hardware stack levels required when called: 5
 12896 ;; This function calls:
 12897 ;;		_ecu_layer_intialize
 12898 ;; This function is called by:
 12899 ;;		_main
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text54
 12904  0060AA                     __ptext54:
 12905                           	callstack 0
 12906  0060AA                     _application_intialize:
 12907                           	callstack 25
 12908  0060AA                     
 12909                           ;Application.c: 121:     ecu_layer_intialize();
 12910  0060AA  EC2C  F030         	call	_ecu_layer_intialize	;wreg free
 12911  0060AE  0012               	return		;funcret
 12912  0060B0                     __end_of_application_intialize:
 12913                           	callstack 0
 12914                           
 12915 ;; *************** function _ecu_layer_intialize *****************
 12916 ;; Defined at:
 12917 ;;		line 86 in file "ECU_layer/ecu_layer_init.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;  ret             1    0        unsigned char 
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1    wreg      void 
 12924 ;; Registers used:
 12925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12926 ;; Tracked objects:
 12927 ;;		On entry : 0/0
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12935 ;;Total ram usage:        0 bytes
 12936 ;; Hardware stack levels used: 1
 12937 ;; Hardware stack levels required when called: 4
 12938 ;; This function calls:
 12939 ;;		_keypad_initialize
 12940 ;;		_lcd_4bit_intialize
 12941 ;;		_led_initialize
 12942 ;; This function is called by:
 12943 ;;		_application_intialize
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           	psect	text55
 12948  006058                     __ptext55:
 12949                           	callstack 0
 12950  006058                     _ecu_layer_intialize:
 12951                           	callstack 25
 12952  006058  0EB1               	movlw	low _keypad_1
 12953  00605A  6E0F               	movwf	keypad_initialize@_keypad_obj^0,c
 12954  00605C  0E01               	movlw	high _keypad_1
 12955  00605E  6E10               	movwf	(keypad_initialize@_keypad_obj+1)^0,c
 12956  006060  ECA4  F02B         	call	_keypad_initialize	;wreg free
 12957  006064  0EFE               	movlw	low _led_1
 12958  006066  6E0F               	movwf	led_initialize@led^0,c
 12959  006068  0E00               	movlw	high _led_1
 12960  00606A  6E10               	movwf	(led_initialize@led+1)^0,c
 12961  00606C  ECE4  F02B         	call	_led_initialize	;wreg free
 12962  006070  0EBB               	movlw	low _lcd_1
 12963  006072  6E13               	movwf	lcd_4bit_intialize@lcd^0,c
 12964  006074  0E01               	movlw	high _lcd_1
 12965  006076  6E14               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
 12966  006078  ECB1  F024         	call	_lcd_4bit_intialize	;wreg free
 12967  00607C  0012               	return		;funcret
 12968  00607E                     __end_of_ecu_layer_intialize:
 12969                           	callstack 0
 12970                           
 12971 ;; *************** function _led_initialize *****************
 12972 ;; Defined at:
 12973 ;;		line 17 in file "ECU_layer/LED/ecu_led.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  led             2   14[COMRAM] PTR const struct .
 12976 ;;		 -> led_1(1), 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;  pin_obj         1   18[COMRAM] struct .
 12979 ;;  ret             1   17[COMRAM] unsigned char 
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      unsigned char 
 12982 ;; Registers used:
 12983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;Total ram usage:        5 bytes
 12994 ;; Hardware stack levels used: 1
 12995 ;; Hardware stack levels required when called: 2
 12996 ;; This function calls:
 12997 ;;		_gpio_pin_intialize
 12998 ;; This function is called by:
 12999 ;;		_ecu_layer_intialize
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           	psect	text56
 13004  0057C8                     __ptext56:
 13005                           	callstack 0
 13006  0057C8                     _led_initialize:
 13007                           	callstack 26
 13008  0057C8                     
 13009                           ;ECU_layer/LED/ecu_led.c: 19:     if(((void*)0) == led){
 13010  0057C8  500F               	movf	led_initialize@led^0,w,c
 13011  0057CA  1010               	iorwf	(led_initialize@led+1)^0,w,c
 13012  0057CC  A4D8               	btfss	status,2,c
 13013  0057CE  EFEB  F02B         	goto	u7191
 13014  0057D2  EFED  F02B         	goto	u7190
 13015  0057D6                     u7191:
 13016  0057D6  EFF1  F02B         	goto	l274
 13017  0057DA                     u7190:
 13018  0057DA                     
 13019                           ;ECU_layer/LED/ecu_led.c: 20:         ret = (Std_ReturnType)0x00;
 13020  0057DA  0E00               	movlw	0
 13021  0057DC  6E12               	movwf	led_initialize@ret^0,c
 13022                           
 13023                           ;ECU_layer/LED/ecu_led.c: 21:     }
 13024  0057DE  EF1F  F02C         	goto	l6686
 13025  0057E2                     l274:
 13026                           
 13027                           ;ECU_layer/LED/ecu_led.c: 23:         pin_config_t pin_obj = {
 13028  0057E2  C0FB  F013         	movff	led_initialize@F3045,led_initialize@pin_obj
 13029  0057E6  C00F  FFD9         	movff	led_initialize@led,fsr2l
 13030  0057EA  C010  FFDA         	movff	led_initialize@led+1,fsr2h
 13031  0057EE  50DF               	movf	223,w,c
 13032  0057F0  0B0F               	andlw	15
 13033  0057F2  6E11               	movwf	??_led_initialize^0,c
 13034  0057F4  5013               	movf	led_initialize@pin_obj^0,w,c
 13035  0057F6  1811               	xorwf	??_led_initialize^0,w,c
 13036  0057F8  0BF8               	andlw	-8
 13037  0057FA  1811               	xorwf	??_led_initialize^0,w,c
 13038  0057FC  6E13               	movwf	led_initialize@pin_obj^0,c
 13039  0057FE  C00F  FFD9         	movff	led_initialize@led,fsr2l
 13040  005802  C010  FFDA         	movff	led_initialize@led+1,fsr2h
 13041  005806  38DF               	swapf	223,w,c
 13042  005808  0B07               	andlw	7
 13043  00580A  6E11               	movwf	??_led_initialize^0,c
 13044  00580C  4611               	rlncf	??_led_initialize^0,f,c
 13045  00580E  4611               	rlncf	??_led_initialize^0,f,c
 13046  005810  4611               	rlncf	??_led_initialize^0,f,c
 13047  005812  5013               	movf	led_initialize@pin_obj^0,w,c
 13048  005814  1811               	xorwf	??_led_initialize^0,w,c
 13049  005816  0BC7               	andlw	-57
 13050  005818  1811               	xorwf	??_led_initialize^0,w,c
 13051  00581A  6E13               	movwf	led_initialize@pin_obj^0,c
 13052  00581C  9C13               	bcf	led_initialize@pin_obj^0,6,c
 13053  00581E  C00F  FFD9         	movff	led_initialize@led,fsr2l
 13054  005822  C010  FFDA         	movff	led_initialize@led+1,fsr2h
 13055  005826  AEDF               	btfss	indf2,7,c
 13056  005828  D002               	bra	u7205
 13057  00582A  8E13               	bsf	led_initialize@pin_obj^0,7,c
 13058  00582C  D001               	bra	u7207
 13059  00582E                     u7205:
 13060  00582E  9E13               	bcf	led_initialize@pin_obj^0,7,c
 13061  005830                     u7207:
 13062  005830                     
 13063                           ;ECU_layer/LED/ecu_led.c: 29:         ret = gpio_pin_intialize(&pin_obj);
 13064  005830  0E13               	movlw	low led_initialize@pin_obj
 13065  005832  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
 13066  005834  0E00               	movlw	high led_initialize@pin_obj
 13067  005836  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
 13068  005838  EC75  F02D         	call	_gpio_pin_intialize	;wreg free
 13069  00583C  6E12               	movwf	led_initialize@ret^0,c
 13070  00583E                     l6686:
 13071                           
 13072                           ;ECU_layer/LED/ecu_led.c: 31:     return ret;
 13073  00583E  5012               	movf	led_initialize@ret^0,w,c
 13074  005840  0012               	return		;funcret
 13075  005842                     __end_of_led_initialize:
 13076                           	callstack 0
 13077                           
 13078 ;; *************** function _lcd_4bit_intialize *****************
 13079 ;; Defined at:
 13080 ;;		line 18 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;  lcd             2   18[COMRAM] PTR const struct .
 13083 ;;		 -> lcd_1(6), 
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;  ret             1   23[COMRAM] unsigned char 
 13086 ;;  data_bins_co    1   22[COMRAM] unsigned char 
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      unsigned char 
 13089 ;; Registers used:
 13090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13099 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13100 ;;Total ram usage:        6 bytes
 13101 ;; Hardware stack levels used: 1
 13102 ;; Hardware stack levels required when called: 3
 13103 ;; This function calls:
 13104 ;;		_gpio_pin_intialize
 13105 ;;		_lcd_4bit_send_command
 13106 ;; This function is called by:
 13107 ;;		_ecu_layer_intialize
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text57
 13112  004962                     __ptext57:
 13113                           	callstack 0
 13114  004962                     _lcd_4bit_intialize:
 13115                           	callstack 25
 13116  004962                     
 13117                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 20:     uint8 data_bins_counter = 0;
 13118  004962  0E00               	movlw	0
 13119  004964  6E17               	movwf	lcd_4bit_intialize@data_bins_counter^0,c
 13120  004966                     
 13121                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 21:     if(((void*)0) == lcd){
 13122  004966  5013               	movf	lcd_4bit_intialize@lcd^0,w,c
 13123  004968  1014               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
 13124  00496A  A4D8               	btfss	status,2,c
 13125  00496C  EFBA  F024         	goto	u7141
 13126  004970  EFBC  F024         	goto	u7140
 13127  004974                     u7141:
 13128  004974  EFC0  F024         	goto	l6598
 13129  004978                     u7140:
 13130  004978                     
 13131                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 22:         ret = (Std_ReturnType)0x00;
 13132  004978  0E00               	movlw	0
 13133  00497A  6E18               	movwf	lcd_4bit_intialize@ret^0,c
 13134                           
 13135                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 23:     }
 13136  00497C  EF43  F025         	goto	l6634
 13137  004980                     l6598:
 13138                           
 13139                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 25:         ret = gpio_pin_intialize(&(lcd->lcd_rs));
 13140  004980  C013  F00B         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
 13141  004984  C014  F00C         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
 13142  004988  EC75  F02D         	call	_gpio_pin_intialize	;wreg free
 13143  00498C  6E18               	movwf	lcd_4bit_intialize@ret^0,c
 13144                           
 13145                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 26:         ret = gpio_pin_intialize(&(lcd->lcd_en));
 13146  00498E  0E01               	movlw	1
 13147  004990  2413               	addwf	lcd_4bit_intialize@lcd^0,w,c
 13148  004992  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
 13149  004994  0E00               	movlw	0
 13150  004996  2014               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
 13151  004998  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
 13152  00499A  EC75  F02D         	call	_gpio_pin_intialize	;wreg free
 13153  00499E  6E18               	movwf	lcd_4bit_intialize@ret^0,c
 13154  0049A0                     
 13155                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 27:         for(data_bins_counter = 0; data_bins_count
      +                          er<4; data_bins_counter++){
 13156  0049A0  0E00               	movlw	0
 13157  0049A2  6E17               	movwf	lcd_4bit_intialize@data_bins_counter^0,c
 13158  0049A4                     l6606:
 13159  0049A4  5017               	movf	lcd_4bit_intialize@data_bins_counter^0,w,c
 13160  0049A6  2413               	addwf	lcd_4bit_intialize@lcd^0,w,c
 13161  0049A8  6E15               	movwf	??_lcd_4bit_intialize^0,c
 13162  0049AA  0E00               	movlw	0
 13163  0049AC  2014               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
 13164  0049AE  6E16               	movwf	(??_lcd_4bit_intialize+1)^0,c
 13165  0049B0  0E02               	movlw	2
 13166  0049B2  2415               	addwf	??_lcd_4bit_intialize^0,w,c
 13167  0049B4  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
 13168  0049B6  0E00               	movlw	0
 13169  0049B8  2016               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
 13170  0049BA  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
 13171  0049BC  EC75  F02D         	call	_gpio_pin_intialize	;wreg free
 13172  0049C0                     
 13173                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 29:         }
 13174  0049C0  2A17               	incf	lcd_4bit_intialize@data_bins_counter^0,f,c
 13175  0049C2  0E03               	movlw	3
 13176  0049C4  6417               	cpfsgt	lcd_4bit_intialize@data_bins_counter^0,c
 13177  0049C6  EFE7  F024         	goto	u7151
 13178  0049CA  EFE9  F024         	goto	u7150
 13179  0049CE                     u7151:
 13180  0049CE  EFD2  F024         	goto	l6606
 13181  0049D2                     u7150:
 13182  0049D2                     
 13183                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 30:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
 13184  0049D2  0E34               	movlw	52
 13185  0049D4  6E15               	movwf	??_lcd_4bit_intialize^0,c
 13186  0049D6  0EF2               	movlw	242
 13187  0049D8                     u8837:
 13188  0049D8  2EE8               	decfsz	wreg,f,c
 13189  0049DA  D7FE               	bra	u8837
 13190  0049DC  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
 13191  0049DE  D7FC               	bra	u8837
 13192  0049E0  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13193  0049E4  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13194  0049E8  0E38               	movlw	56
 13195  0049EA  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13196  0049EC  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13197  0049F0                     
 13198                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 32:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
 13199  0049F0  0E0D               	movlw	13
 13200  0049F2  6E15               	movwf	??_lcd_4bit_intialize^0,c
 13201  0049F4  0EFC               	movlw	252
 13202  0049F6                     u8847:
 13203  0049F6  2EE8               	decfsz	wreg,f,c
 13204  0049F8  D7FE               	bra	u8847
 13205  0049FA  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
 13206  0049FC  D7FC               	bra	u8847
 13207  0049FE  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13208  004A02  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13209  004A06  0E38               	movlw	56
 13210  004A08  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13211  004A0A  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13212  004A0E                     
 13213                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 34:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
 13214  004A0E  0E64               	movlw	100
 13215  004A10                     u8857:
 13216  004A10  2EE8               	decfsz	wreg,f,c
 13217  004A12  D7FE               	bra	u8857
 13218  004A14  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13219  004A18  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13220  004A1C  0E38               	movlw	56
 13221  004A1E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13222  004A20  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13223  004A24  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13224  004A28  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13225  004A2C  0E01               	movlw	1
 13226  004A2E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13227  004A30  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13228  004A34  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13229  004A38  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13230  004A3C  0E02               	movlw	2
 13231  004A3E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13232  004A40  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13233  004A44  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13234  004A48  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13235  004A4C  0E06               	movlw	6
 13236  004A4E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13237  004A50  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13238  004A54  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13239  004A58  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13240  004A5C  0E0C               	movlw	12
 13241  004A5E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13242  004A60  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13243  004A64  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13244  004A68  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13245  004A6C  0E28               	movlw	40
 13246  004A6E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13247  004A70  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13248  004A74                     
 13249                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 41:         ret = lcd_4bit_send_command(lcd, 0x01);
 13250  004A74  C013  F00F         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 13251  004A78  C014  F010         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
 13252  004A7C  0E01               	movlw	1
 13253  004A7E  6E11               	movwf	lcd_4bit_send_command@command^0,c
 13254  004A80  ECD0  F02C         	call	_lcd_4bit_send_command	;wreg free
 13255  004A84  6E18               	movwf	lcd_4bit_intialize@ret^0,c
 13256  004A86                     l6634:
 13257                           
 13258                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 43:     return ret;
 13259  004A86  5018               	movf	lcd_4bit_intialize@ret^0,w,c
 13260  004A88  0012               	return		;funcret
 13261  004A8A                     __end_of_lcd_4bit_intialize:
 13262                           	callstack 0
 13263                           
 13264 ;; *************** function _lcd_4bit_send_command *****************
 13265 ;; Defined at:
 13266 ;;		line 46 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  lcd             2   14[COMRAM] PTR const struct .
 13269 ;;		 -> lcd_1(6), 
 13270 ;;  command         1   16[COMRAM] unsigned char 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  ret             1   17[COMRAM] unsigned char 
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      unsigned char 
 13275 ;; Registers used:
 13276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;Total ram usage:        4 bytes
 13287 ;; Hardware stack levels used: 1
 13288 ;; Hardware stack levels required when called: 2
 13289 ;; This function calls:
 13290 ;;		_gpio_pin_write_logic
 13291 ;;		_lcd_4bits_send_enable_signal
 13292 ;;		_lcd_send_4bits
 13293 ;; This function is called by:
 13294 ;;		_lcd_4bit_intialize
 13295 ;;		_lcd_4bits_set_cursor
 13296 ;;		_main
 13297 ;;		_lcd_4bit_send_custom_char
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text58
 13302  0059A0                     __ptext58:
 13303                           	callstack 0
 13304  0059A0                     _lcd_4bit_send_command:
 13305                           	callstack 26
 13306  0059A0                     
 13307                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 48:     if(((void*)0) == lcd){
 13308  0059A0  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
 13309  0059A2  1010               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
 13310  0059A4  A4D8               	btfss	status,2,c
 13311  0059A6  EFD7  F02C         	goto	u6361
 13312  0059AA  EFD9  F02C         	goto	u6360
 13313  0059AE                     u6361:
 13314  0059AE  EFDD  F02C         	goto	l6162
 13315  0059B2                     u6360:
 13316  0059B2                     
 13317                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret = (Std_ReturnType)0x00;
 13318  0059B2  0E00               	movlw	0
 13319  0059B4  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13320                           
 13321                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 50:     }
 13322  0059B6  EF07  F02D         	goto	l6164
 13323  0059BA                     l6162:
 13324                           
 13325                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
 13326  0059BA  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 13327  0059BE  C010  F002         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
 13328  0059C2  0E00               	movlw	0
 13329  0059C4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13330  0059C6  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13331  0059CA  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13332                           
 13333                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret = lcd_send_4bits(lcd, command >> 4);
 13334  0059CC  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 13335  0059D0  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 13336  0059D4  3811               	swapf	lcd_4bit_send_command@command^0,w,c
 13337  0059D6  0B0F               	andlw	15
 13338  0059D8  6E0D               	movwf	lcd_send_4bits@_data_command^0,c
 13339  0059DA  ECAB  F02D         	call	_lcd_send_4bits	;wreg free
 13340  0059DE  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13341                           
 13342                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bits_send_enable_signal(lcd);
 13343  0059E0  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
 13344  0059E4  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
 13345  0059E8  EC55  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
 13346  0059EC  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13347                           
 13348                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 55:         ret = lcd_send_4bits(lcd, command >> 0);
 13349  0059EE  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 13350  0059F2  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
 13351  0059F6  C011  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
 13352  0059FA  ECAB  F02D         	call	_lcd_send_4bits	;wreg free
 13353  0059FE  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13354                           
 13355                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 56:         ret = lcd_4bits_send_enable_signal(lcd);
 13356  005A00  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
 13357  005A04  C010  F00C         	movff	lcd_4bit_send_command@lcd+1,lcd_4bits_send_enable_signal@lcd+1
 13358  005A08  EC55  F02F         	call	_lcd_4bits_send_enable_signal	;wreg free
 13359  005A0C  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 13360  005A0E                     l6164:
 13361                           
 13362                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 58:     return ret;
 13363  005A0E  5012               	movf	lcd_4bit_send_command@ret^0,w,c
 13364  005A10  0012               	return		;funcret
 13365  005A12                     __end_of_lcd_4bit_send_command:
 13366                           	callstack 0
 13367                           
 13368 ;; *************** function _lcd_send_4bits *****************
 13369 ;; Defined at:
 13370 ;;		line 282 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;  lcd             2   10[COMRAM] PTR const struct .
 13373 ;;		 -> lcd_1(6), 
 13374 ;;  _data_comman    1   12[COMRAM] unsigned char 
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;  ret             1   13[COMRAM] unsigned char 
 13377 ;; Return value:  Size  Location     Type
 13378 ;;                  1    wreg      unsigned char 
 13379 ;; Registers used:
 13380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13381 ;; Tracked objects:
 13382 ;;		On entry : 0/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13386 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;Total ram usage:        4 bytes
 13391 ;; Hardware stack levels used: 1
 13392 ;; Hardware stack levels required when called: 1
 13393 ;; This function calls:
 13394 ;;		_gpio_pin_write_logic
 13395 ;; This function is called by:
 13396 ;;		_lcd_4bit_send_command
 13397 ;;		_lcd_4bit_send_char_data
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text59
 13402  005B56                     __ptext59:
 13403                           	callstack 0
 13404  005B56                     _lcd_send_4bits:
 13405                           	callstack 26
 13406  005B56  0E02               	movlw	2
 13407  005B58  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 13408  005B5A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13409  005B5C  0E00               	movlw	0
 13410  005B5E  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 13411  005B60  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13412  005B62  500D               	movf	lcd_send_4bits@_data_command^0,w,c
 13413  005B64  0B01               	andlw	1
 13414  005B66  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13415  005B68  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13416  005B6C  0E03               	movlw	3
 13417  005B6E  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 13418  005B70  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13419  005B72  0E00               	movlw	0
 13420  005B74  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 13421  005B76  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13422  005B78  90D8               	bcf	status,0,c
 13423  005B7A  300D               	rrcf	lcd_send_4bits@_data_command^0,w,c
 13424  005B7C  0B01               	andlw	1
 13425  005B7E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13426  005B80  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13427  005B84  0E04               	movlw	4
 13428  005B86  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 13429  005B88  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13430  005B8A  0E00               	movlw	0
 13431  005B8C  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 13432  005B8E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13433  005B90  400D               	rrncf	lcd_send_4bits@_data_command^0,w,c
 13434  005B92  42E8               	rrncf	wreg,f,c
 13435  005B94  0B3F               	andlw	63
 13436  005B96  0B01               	andlw	1
 13437  005B98  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13438  005B9A  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13439  005B9E                     
 13440                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 287:     ret = gpio_pin_write_logic(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
 13441  005B9E  0E05               	movlw	5
 13442  005BA0  240B               	addwf	lcd_send_4bits@lcd^0,w,c
 13443  005BA2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13444  005BA4  0E00               	movlw	0
 13445  005BA6  200C               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
 13446  005BA8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13447  005BAA  380D               	swapf	lcd_send_4bits@_data_command^0,w,c
 13448  005BAC  46E8               	rlncf	wreg,f,c
 13449  005BAE  0B1F               	andlw	31
 13450  005BB0  0B01               	andlw	1
 13451  005BB2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13452  005BB4  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13453  005BB8  6E0E               	movwf	lcd_send_4bits@ret^0,c
 13454                           
 13455                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 288:     return ret;
 13456  005BBA  500E               	movf	lcd_send_4bits@ret^0,w,c
 13457  005BBC  0012               	return		;funcret
 13458  005BBE                     __end_of_lcd_send_4bits:
 13459                           	callstack 0
 13460                           
 13461 ;; *************** function _lcd_4bits_send_enable_signal *****************
 13462 ;; Defined at:
 13463 ;;		line 291 in file "ECU_layer/Chr_LCD/ecu_chr_lcd.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  lcd             2   10[COMRAM] PTR const struct .
 13466 ;;		 -> lcd_1(6), 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  ret             1   13[COMRAM] unsigned char 
 13469 ;; Return value:  Size  Location     Type
 13470 ;;                  1    wreg      unsigned char 
 13471 ;; Registers used:
 13472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;Total ram usage:        4 bytes
 13483 ;; Hardware stack levels used: 1
 13484 ;; Hardware stack levels required when called: 1
 13485 ;; This function calls:
 13486 ;;		_gpio_pin_write_logic
 13487 ;; This function is called by:
 13488 ;;		_lcd_4bit_send_command
 13489 ;;		_lcd_4bit_send_char_data
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text60
 13494  005EAA                     __ptext60:
 13495                           	callstack 0
 13496  005EAA                     _lcd_4bits_send_enable_signal:
 13497                           	callstack 26
 13498  005EAA  0E01               	movlw	1
 13499  005EAC  240B               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
 13500  005EAE  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13501  005EB0  0E00               	movlw	0
 13502  005EB2  200C               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
 13503  005EB4  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13504  005EB6  0E01               	movlw	1
 13505  005EB8  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13506  005EBA  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13507  005EBE                     
 13508                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 294:     _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
 13509  005EBE  0E0D               	movlw	13
 13510  005EC0  6E0D               	movwf	??_lcd_4bits_send_enable_signal^0,c
 13511  005EC2  0EFC               	movlw	252
 13512  005EC4                     u8867:
 13513  005EC4  2EE8               	decfsz	wreg,f,c
 13514  005EC6  D7FE               	bra	u8867
 13515  005EC8  2E0D               	decfsz	??_lcd_4bits_send_enable_signal^0,f,c
 13516  005ECA  D7FC               	bra	u8867
 13517  005ECC                     
 13518                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 295:     ret = gpio_pin_write_logic(&(lcd->lcd_en), GP
      +                          IO_LOW);
 13519  005ECC  0E01               	movlw	1
 13520  005ECE  240B               	addwf	lcd_4bits_send_enable_signal@lcd^0,w,c
 13521  005ED0  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 13522  005ED2  0E00               	movlw	0
 13523  005ED4  200C               	addwfc	(lcd_4bits_send_enable_signal@lcd+1)^0,w,c
 13524  005ED6  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 13525  005ED8  0E00               	movlw	0
 13526  005EDA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13527  005EDC  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13528  005EE0  6E0E               	movwf	lcd_4bits_send_enable_signal@ret^0,c
 13529  005EE2                     
 13530                           ;ECU_layer/Chr_LCD/ecu_chr_lcd.c: 296:     return ret;
 13531  005EE2  500E               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
 13532  005EE4  0012               	return		;funcret
 13533  005EE6                     __end_of_lcd_4bits_send_enable_signal:
 13534                           	callstack 0
 13535                           
 13536 ;; *************** function _keypad_initialize *****************
 13537 ;; Defined at:
 13538 ;;		line 33 in file "ECU_layer/KeyPad/ecu_keypad.c"
 13539 ;; Parameters:    Size  Location     Type
 13540 ;;  _keypad_obj     2   14[COMRAM] PTR const struct .
 13541 ;;		 -> keypad_1(10), 
 13542 ;; Auto vars:     Size  Location     Type
 13543 ;;  columns_coun    1   20[COMRAM] unsigned char 
 13544 ;;  row_counter     1   19[COMRAM] unsigned char 
 13545 ;;  ret             1   18[COMRAM] unsigned char 
 13546 ;; Return value:  Size  Location     Type
 13547 ;;                  1    wreg      unsigned char 
 13548 ;; Registers used:
 13549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13559 ;;Total ram usage:        7 bytes
 13560 ;; Hardware stack levels used: 1
 13561 ;; Hardware stack levels required when called: 2
 13562 ;; This function calls:
 13563 ;;		_gpio_pin_direction_intialize
 13564 ;;		_gpio_pin_intialize
 13565 ;; This function is called by:
 13566 ;;		_ecu_layer_intialize
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text61
 13571  005748                     __ptext61:
 13572                           	callstack 0
 13573  005748                     _keypad_initialize:
 13574                           	callstack 26
 13575  005748  0E00               	movlw	0
 13576  00574A  6E14               	movwf	keypad_initialize@row_counter^0,c
 13577  00574C  0E00               	movlw	0
 13578  00574E  6E15               	movwf	keypad_initialize@columns_counter^0,c
 13579  005750  500F               	movf	keypad_initialize@_keypad_obj^0,w,c
 13580  005752  1010               	iorwf	(keypad_initialize@_keypad_obj+1)^0,w,c
 13581  005754  A4D8               	btfss	status,2,c
 13582  005756  EFAF  F02B         	goto	u7161
 13583  00575A  EFB1  F02B         	goto	u7160
 13584  00575E                     u7161:
 13585  00575E  EFB5  F02B         	goto	l6644
 13586  005762                     u7160:
 13587  005762  0E00               	movlw	0
 13588  005764  6E13               	movwf	keypad_initialize@ret^0,c
 13589  005766  EFE2  F02B         	goto	l6668
 13590  00576A                     l6644:
 13591  00576A  0E00               	movlw	0
 13592  00576C  6E14               	movwf	keypad_initialize@row_counter^0,c
 13593  00576E                     l6650:
 13594  00576E  5014               	movf	keypad_initialize@row_counter^0,w,c
 13595  005770  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
 13596  005772  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
 13597  005774  0E00               	movlw	0
 13598  005776  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
 13599  005778  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
 13600  00577A  EC75  F02D         	call	_gpio_pin_intialize	;wreg free
 13601  00577E  2A14               	incf	keypad_initialize@row_counter^0,f,c
 13602  005780  0E03               	movlw	3
 13603  005782  6414               	cpfsgt	keypad_initialize@row_counter^0,c
 13604  005784  EFC6  F02B         	goto	u7171
 13605  005788  EFC8  F02B         	goto	u7170
 13606  00578C                     u7171:
 13607  00578C  EFB7  F02B         	goto	l6650
 13608  005790                     u7170:
 13609  005790  0E00               	movlw	0
 13610  005792  6E15               	movwf	keypad_initialize@columns_counter^0,c
 13611  005794                     l6662:
 13612  005794  5015               	movf	keypad_initialize@columns_counter^0,w,c
 13613  005796  240F               	addwf	keypad_initialize@_keypad_obj^0,w,c
 13614  005798  6E11               	movwf	??_keypad_initialize^0,c
 13615  00579A  0E00               	movlw	0
 13616  00579C  2010               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
 13617  00579E  6E12               	movwf	(??_keypad_initialize+1)^0,c
 13618  0057A0  0E04               	movlw	4
 13619  0057A2  2411               	addwf	??_keypad_initialize^0,w,c
 13620  0057A4  6E01               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
 13621  0057A6  0E00               	movlw	0
 13622  0057A8  2012               	addwfc	(??_keypad_initialize+1)^0,w,c
 13623  0057AA  6E02               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
 13624  0057AC  ECDB  F022         	call	_gpio_pin_direction_intialize	;wreg free
 13625  0057B0  6E13               	movwf	keypad_initialize@ret^0,c
 13626  0057B2  2A15               	incf	keypad_initialize@columns_counter^0,f,c
 13627  0057B4  0E05               	movlw	5
 13628  0057B6  6415               	cpfsgt	keypad_initialize@columns_counter^0,c
 13629  0057B8  EFE0  F02B         	goto	u7181
 13630  0057BC  EFE2  F02B         	goto	u7180
 13631  0057C0                     u7181:
 13632  0057C0  EFCA  F02B         	goto	l6662
 13633  0057C4                     u7180:
 13634  0057C4                     l6668:
 13635  0057C4  5013               	movf	keypad_initialize@ret^0,w,c
 13636  0057C6  0012               	return		;funcret
 13637  0057C8                     __end_of_keypad_initialize:
 13638                           	callstack 0
 13639                           
 13640 ;; *************** function _gpio_pin_intialize *****************
 13641 ;; Defined at:
 13642 ;;		line 145 in file "MCAL_layer/GPIO/hal_gpio.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  _pin_config     2   10[COMRAM] PTR const struct .
 13645 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_row_pins(4), keypad_1(10), 
 13646 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;  ret             1   13[COMRAM] unsigned char 
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      unsigned char 
 13651 ;; Registers used:
 13652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 0/0
 13655 ;;		On exit  : 0/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;Total ram usage:        4 bytes
 13663 ;; Hardware stack levels used: 1
 13664 ;; Hardware stack levels required when called: 1
 13665 ;; This function calls:
 13666 ;;		_gpio_pin_direction_intialize
 13667 ;;		_gpio_pin_write_logic
 13668 ;; This function is called by:
 13669 ;;		_lcd_4bit_intialize
 13670 ;;		_keypad_initialize
 13671 ;;		_led_initialize
 13672 ;;		_seven_segment_intialize
 13673 ;;		_lcd_8bit_intialize
 13674 ;;		_dc_motor_initialize
 13675 ;;		_relay_initialize
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text62
 13680  005AEA                     __ptext62:
 13681                           	callstack 0
 13682  005AEA                     _gpio_pin_intialize:
 13683                           	callstack 26
 13684  005AEA                     
 13685                           ;MCAL_layer/GPIO/hal_gpio.c: 147:     if((((void*)0) == _pin_config)||(_pin_config->pin 
      +                          > 8 -1)){
 13686  005AEA  500B               	movf	gpio_pin_intialize@_pin_config^0,w,c
 13687  005AEC  100C               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
 13688  005AEE  B4D8               	btfsc	status,2,c
 13689  005AF0  EF7C  F02D         	goto	u6341
 13690  005AF4  EF7E  F02D         	goto	u6340
 13691  005AF8                     u6341:
 13692  005AF8  EF8F  F02D         	goto	l6148
 13693  005AFC                     u6340:
 13694  005AFC  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
 13695  005B00  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
 13696  005B04  30DF               	rrcf	223,w,c
 13697  005B06  32E8               	rrcf	wreg,f,c
 13698  005B08  32E8               	rrcf	wreg,f,c
 13699  005B0A  0B07               	andlw	7
 13700  005B0C  6E0D               	movwf	??_gpio_pin_intialize^0,c
 13701  005B0E  0E07               	movlw	7
 13702  005B10  640D               	cpfsgt	??_gpio_pin_intialize^0,c
 13703  005B12  EF8D  F02D         	goto	u6351
 13704  005B16  EF8F  F02D         	goto	u6350
 13705  005B1A                     u6351:
 13706  005B1A  EF93  F02D         	goto	l6150
 13707  005B1E                     u6350:
 13708  005B1E                     l6148:
 13709                           
 13710                           ;MCAL_layer/GPIO/hal_gpio.c: 148:         ret = (Std_ReturnType)0x00;
 13711  005B1E  0E00               	movlw	0
 13712  005B20  6E0E               	movwf	gpio_pin_intialize@ret^0,c
 13713                           
 13714                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     }
 13715  005B22  EFA9  F02D         	goto	l6152
 13716  005B26                     l6150:
 13717                           
 13718                           ;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
 13719  005B26  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
 13720  005B2A  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
 13721  005B2E  ECDB  F022         	call	_gpio_pin_direction_intialize	;wreg free
 13722  005B32  6E0E               	movwf	gpio_pin_intialize@ret^0,c
 13723                           
 13724                           ;MCAL_layer/GPIO/hal_gpio.c: 152:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
 13725  005B34  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
 13726  005B38  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
 13727  005B3C  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
 13728  005B40  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
 13729  005B44  0E00               	movlw	0
 13730  005B46  BEDF               	btfsc	indf2,7,c
 13731  005B48  0E01               	movlw	1
 13732  005B4A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 13733  005B4C  EC1B  F024         	call	_gpio_pin_write_logic	;wreg free
 13734  005B50  6E0E               	movwf	gpio_pin_intialize@ret^0,c
 13735  005B52                     l6152:
 13736                           
 13737                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     return ret;
 13738  005B52  500E               	movf	gpio_pin_intialize@ret^0,w,c
 13739  005B54  0012               	return		;funcret
 13740  005B56                     __end_of_gpio_pin_intialize:
 13741                           	callstack 0
 13742                           
 13743 ;; *************** function _gpio_pin_write_logic *****************
 13744 ;; Defined at:
 13745 ;;		line 76 in file "MCAL_layer/GPIO/hal_gpio.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 13748 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_row_pins(4), keypad_1(10), 
 13749 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
 13750 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
 13751 ;;  logic           1    2[COMRAM] enum E2965
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;  ret             1    9[COMRAM] unsigned char 
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1    wreg      unsigned char 
 13756 ;; Registers used:
 13757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13758 ;; Tracked objects:
 13759 ;;		On entry : 0/0
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13763 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13767 ;;Total ram usage:       10 bytes
 13768 ;; Hardware stack levels used: 1
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_lcd_4bit_send_command
 13773 ;;		_lcd_4bit_send_char_data
 13774 ;;		_lcd_send_4bits
 13775 ;;		_lcd_4bits_send_enable_signal
 13776 ;;		_keypad_get_value
 13777 ;;		_led_turn_on
 13778 ;;		_led_turn_off
 13779 ;;		_gpio_pin_intialize
 13780 ;;		_seven_segment_write_number
 13781 ;;		_lcd_8bit_send_command
 13782 ;;		_lcd_8bit_send_char_data
 13783 ;;		_lcd_8bits_send_enable_signal
 13784 ;;		_dc_motor_move_right
 13785 ;;		_dc_motor_move_left
 13786 ;;		_dc_motor_stop
 13787 ;;		_relay_turn_on
 13788 ;;		_relay_turn_off
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text63
 13793  004836                     __ptext63:
 13794                           	callstack 0
 13795  004836                     _gpio_pin_write_logic:
 13796                           	callstack 29
 13797  004836                     
 13798                           ;MCAL_layer/GPIO/hal_gpio.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x01;
 13799  004836  0E01               	movlw	1
 13800  004838  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 13801  00483A                     
 13802                           ;MCAL_layer/GPIO/hal_gpio.c: 78:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1)){
 13803  00483A  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 13804  00483C  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 13805  00483E  B4D8               	btfsc	status,2,c
 13806  004840  EF24  F024         	goto	u4661
 13807  004844  EF26  F024         	goto	u4660
 13808  004848                     u4661:
 13809  004848  EF37  F024         	goto	l5200
 13810  00484C                     u4660:
 13811  00484C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 13812  004850  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 13813  004854  30DF               	rrcf	223,w,c
 13814  004856  32E8               	rrcf	wreg,f,c
 13815  004858  32E8               	rrcf	wreg,f,c
 13816  00485A  0B07               	andlw	7
 13817  00485C  6E04               	movwf	??_gpio_pin_write_logic^0,c
 13818  00485E  0E07               	movlw	7
 13819  004860  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 13820  004862  EF35  F024         	goto	u4671
 13821  004866  EF37  F024         	goto	u4670
 13822  00486A                     u4671:
 13823  00486A  EF9A  F024         	goto	l5208
 13824  00486E                     u4670:
 13825  00486E                     l5200:
 13826                           
 13827                           ;MCAL_layer/GPIO/hal_gpio.c: 79:         ret = (Std_ReturnType)0x00;
 13828  00486E  0E00               	movlw	0
 13829  004870  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 13830                           
 13831                           ;MCAL_layer/GPIO/hal_gpio.c: 80:     }
 13832  004872  EFAF  F024         	goto	l5210
 13833  004876                     l5202:
 13834                           
 13835                           ;MCAL_layer/GPIO/hal_gpio.c: 84:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
 13836  004876  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 13837  00487A  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 13838  00487E  30DF               	rrcf	223,w,c
 13839  004880  32E8               	rrcf	wreg,f,c
 13840  004882  32E8               	rrcf	wreg,f,c
 13841  004884  0B07               	andlw	7
 13842  004886  6E04               	movwf	??_gpio_pin_write_logic^0,c
 13843  004888  0E01               	movlw	1
 13844  00488A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 13845  00488C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 13846  00488E  EF4B  F024         	goto	u4684
 13847  004892                     u4685:
 13848  004892  90D8               	bcf	status,0,c
 13849  004894  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 13850  004896                     u4684:
 13851  004896  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 13852  004898  EF49  F024         	goto	u4685
 13853  00489C  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 13854  00489E  0AFF               	xorlw	255
 13855  0048A0  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 13856  0048A2  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 13857  0048A6  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 13858  0048AA  50DF               	movf	223,w,c
 13859  0048AC  0B07               	andlw	7
 13860  0048AE  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 13861  0048B0  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 13862  0048B2  0D02               	mullw	2
 13863  0048B4  0E90               	movlw	low _lat_registers
 13864  0048B6  24F3               	addwf	243,w,c
 13865  0048B8  6ED9               	movwf	fsr2l,c
 13866  0048BA  0E01               	movlw	high _lat_registers
 13867  0048BC  20F4               	addwfc	prodh,w,c
 13868  0048BE  6EDA               	movwf	fsr2h,c
 13869  0048C0  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 13870  0048C4  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 13871  0048C8  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 13872  0048CC  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 13873  0048D0  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 13874  0048D2  16DF               	andwf	indf2,f,c
 13875                           
 13876                           ;MCAL_layer/GPIO/hal_gpio.c: 85:                 break;
 13877  0048D4  EFAF  F024         	goto	l5210
 13878  0048D8                     l5204:
 13879                           
 13880                           ;MCAL_layer/GPIO/hal_gpio.c: 87:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
 13881  0048D8  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 13882  0048DC  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 13883  0048E0  30DF               	rrcf	223,w,c
 13884  0048E2  32E8               	rrcf	wreg,f,c
 13885  0048E4  32E8               	rrcf	wreg,f,c
 13886  0048E6  0B07               	andlw	7
 13887  0048E8  6E04               	movwf	??_gpio_pin_write_logic^0,c
 13888  0048EA  0E01               	movlw	1
 13889  0048EC  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 13890  0048EE  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 13891  0048F0  EF7C  F024         	goto	u4694
 13892  0048F4                     u4695:
 13893  0048F4  90D8               	bcf	status,0,c
 13894  0048F6  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 13895  0048F8                     u4694:
 13896  0048F8  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 13897  0048FA  EF7A  F024         	goto	u4695
 13898  0048FE  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 13899  004902  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 13900  004906  50DF               	movf	223,w,c
 13901  004908  0B07               	andlw	7
 13902  00490A  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 13903  00490C  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 13904  00490E  0D02               	mullw	2
 13905  004910  0E90               	movlw	low _lat_registers
 13906  004912  24F3               	addwf	243,w,c
 13907  004914  6ED9               	movwf	fsr2l,c
 13908  004916  0E01               	movlw	high _lat_registers
 13909  004918  20F4               	addwfc	prodh,w,c
 13910  00491A  6EDA               	movwf	fsr2h,c
 13911  00491C  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 13912  004920  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 13913  004924  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 13914  004928  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 13915  00492C  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 13916  00492E  12DF               	iorwf	indf2,f,c
 13917                           
 13918                           ;MCAL_layer/GPIO/hal_gpio.c: 88:                 break;
 13919  004930  EFAF  F024         	goto	l5210
 13920  004934                     l5208:
 13921  004934  5003               	movf	gpio_pin_write_logic@logic^0,w,c
 13922  004936  6E04               	movwf	??_gpio_pin_write_logic^0,c
 13923  004938  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 13924                           
 13925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13926                           ; Switch size 1, requested type "simple"
 13927                           ; Number of cases is 1, Range of values is 0 to 0
 13928                           ; switch strategies available:
 13929                           ; Name         Instructions Cycles
 13930                           ; simple_byte            4     3 (average)
 13931                           ;	Chosen strategy is simple_byte
 13932  00493A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 13933  00493C  0A00               	xorlw	0	; case 0
 13934  00493E  B4D8               	btfsc	status,2,c
 13935  004940  EFA4  F024         	goto	l8170
 13936  004944  EF37  F024         	goto	l5200
 13937  004948                     l8170:
 13938                           
 13939                           ; Switch size 1, requested type "simple"
 13940                           ; Number of cases is 2, Range of values is 0 to 1
 13941                           ; switch strategies available:
 13942                           ; Name         Instructions Cycles
 13943                           ; simple_byte            7     4 (average)
 13944                           ;	Chosen strategy is simple_byte
 13945  004948  5004               	movf	??_gpio_pin_write_logic^0,w,c
 13946  00494A  0A00               	xorlw	0	; case 0
 13947  00494C  B4D8               	btfsc	status,2,c
 13948  00494E  EF3B  F024         	goto	l5202
 13949  004952  0A01               	xorlw	1	; case 1
 13950  004954  B4D8               	btfsc	status,2,c
 13951  004956  EF6C  F024         	goto	l5204
 13952  00495A  EF37  F024         	goto	l5200
 13953  00495E                     l5210:
 13954                           
 13955                           ;MCAL_layer/GPIO/hal_gpio.c: 93:     return ret;
 13956  00495E  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 13957  004960  0012               	return		;funcret
 13958  004962                     __end_of_gpio_pin_write_logic:
 13959                           	callstack 0
 13960                           
 13961 ;; *************** function _gpio_pin_direction_intialize *****************
 13962 ;; Defined at:
 13963 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 13966 ;;		 -> lcd_1.lcd_data(4), lcd_1(6), keypad_1.keypad_column_pins(6), keypad_1.keypad_row_pins(4), 
 13967 ;;		 -> keypad_1(10), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  ret             1    8[COMRAM] unsigned char 
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      unsigned char 
 13972 ;; Registers used:
 13973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;Total ram usage:        9 bytes
 13984 ;; Hardware stack levels used: 1
 13985 ;; This function calls:
 13986 ;;		Nothing
 13987 ;; This function is called by:
 13988 ;;		_keypad_initialize
 13989 ;;		_gpio_pin_intialize
 13990 ;;		_button_intialize
 13991 ;;		_Interrupt_INTx_Pin_Init
 13992 ;;		_Interrupt_RBx_Pin_Init
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996                           	psect	text64
 13997  0045B6                     __ptext64:
 13998                           	callstack 0
 13999  0045B6                     _gpio_pin_direction_intialize:
 14000                           	callstack 26
 14001  0045B6                     
 14002                           ;MCAL_layer/GPIO/hal_gpio.c: 23:     Std_ReturnType ret = (Std_ReturnType)0x01;
 14003  0045B6  0E01               	movlw	1
 14004  0045B8  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
 14005  0045BA                     
 14006                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     if((((void*)0) == _pin_config)||(_pin_config->pin >
      +                           8 -1)){
 14007  0045BA  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 14008  0045BC  1002               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
 14009  0045BE  B4D8               	btfsc	status,2,c
 14010  0045C0  EFE4  F022         	goto	u5131
 14011  0045C4  EFE6  F022         	goto	u5130
 14012  0045C8                     u5131:
 14013  0045C8  EFF7  F022         	goto	l5448
 14014  0045CC                     u5130:
 14015  0045CC  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14016  0045D0  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14017  0045D4  30DF               	rrcf	223,w,c
 14018  0045D6  32E8               	rrcf	wreg,f,c
 14019  0045D8  32E8               	rrcf	wreg,f,c
 14020  0045DA  0B07               	andlw	7
 14021  0045DC  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
 14022  0045DE  0E07               	movlw	7
 14023  0045E0  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
 14024  0045E2  EFF5  F022         	goto	u5141
 14025  0045E6  EFF7  F022         	goto	u5140
 14026  0045EA                     u5141:
 14027  0045EA  EF5A  F023         	goto	l5456
 14028  0045EE                     u5140:
 14029  0045EE                     l5448:
 14030                           
 14031                           ;MCAL_layer/GPIO/hal_gpio.c: 25:         ret = (Std_ReturnType)0x00;
 14032  0045EE  0E00               	movlw	0
 14033  0045F0  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
 14034                           
 14035                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     }
 14036  0045F2  EF7B  F023         	goto	l5458
 14037  0045F6                     l5450:
 14038                           
 14039                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
 14040  0045F6  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14041  0045FA  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14042  0045FE  30DF               	rrcf	223,w,c
 14043  004600  32E8               	rrcf	wreg,f,c
 14044  004602  32E8               	rrcf	wreg,f,c
 14045  004604  0B07               	andlw	7
 14046  004606  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
 14047  004608  0E01               	movlw	1
 14048  00460A  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
 14049  00460C  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
 14050  00460E  EF0B  F023         	goto	u5154
 14051  004612                     u5155:
 14052  004612  90D8               	bcf	status,0,c
 14053  004614  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
 14054  004616                     u5154:
 14055  004616  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
 14056  004618  EF09  F023         	goto	u5155
 14057  00461C  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
 14058  00461E  0AFF               	xorlw	255
 14059  004620  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
 14060  004622  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14061  004626  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14062  00462A  50DF               	movf	223,w,c
 14063  00462C  0B07               	andlw	7
 14064  00462E  6E06               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
 14065  004630  5006               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
 14066  004632  0D02               	mullw	2
 14067  004634  0E9A               	movlw	low _tris_registers
 14068  004636  24F3               	addwf	243,w,c
 14069  004638  6ED9               	movwf	fsr2l,c
 14070  00463A  0E01               	movlw	high _tris_registers
 14071  00463C  20F4               	addwfc	prodh,w,c
 14072  00463E  6EDA               	movwf	fsr2h,c
 14073  004640  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+4
 14074  004644  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+5
 14075  004648  C007  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
 14076  00464C  C008  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
 14077  004650  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
 14078  004652  16DF               	andwf	indf2,f,c
 14079                           
 14080                           ;MCAL_layer/GPIO/hal_gpio.c: 31:                 break;
 14081  004654  EF7B  F023         	goto	l5458
 14082  004658                     l5452:
 14083                           
 14084                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
 14085  004658  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14086  00465C  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14087  004660  30DF               	rrcf	223,w,c
 14088  004662  32E8               	rrcf	wreg,f,c
 14089  004664  32E8               	rrcf	wreg,f,c
 14090  004666  0B07               	andlw	7
 14091  004668  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
 14092  00466A  0E01               	movlw	1
 14093  00466C  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
 14094  00466E  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
 14095  004670  EF3C  F023         	goto	u5164
 14096  004674                     u5165:
 14097  004674  90D8               	bcf	status,0,c
 14098  004676  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
 14099  004678                     u5164:
 14100  004678  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
 14101  00467A  EF3A  F023         	goto	u5165
 14102  00467E  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14103  004682  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14104  004686  50DF               	movf	223,w,c
 14105  004688  0B07               	andlw	7
 14106  00468A  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
 14107  00468C  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
 14108  00468E  0D02               	mullw	2
 14109  004690  0E9A               	movlw	low _tris_registers
 14110  004692  24F3               	addwf	243,w,c
 14111  004694  6ED9               	movwf	fsr2l,c
 14112  004696  0E01               	movlw	high _tris_registers
 14113  004698  20F4               	addwfc	prodh,w,c
 14114  00469A  6EDA               	movwf	fsr2h,c
 14115  00469C  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
 14116  0046A0  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
 14117  0046A4  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
 14118  0046A8  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
 14119  0046AC  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
 14120  0046AE  12DF               	iorwf	indf2,f,c
 14121                           
 14122                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
 14123  0046B0  EF7B  F023         	goto	l5458
 14124  0046B4                     l5456:
 14125  0046B4  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
 14126  0046B8  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
 14127  0046BC  BCDF               	btfsc	indf2,6,c
 14128  0046BE  EF63  F023         	goto	u5171
 14129  0046C2  EF66  F023         	goto	u5170
 14130  0046C6                     u5171:
 14131  0046C6  0E01               	movlw	1
 14132  0046C8  EF67  F023         	goto	u5180
 14133  0046CC                     u5170:
 14134  0046CC  0E00               	movlw	0
 14135  0046CE                     u5180:
 14136  0046CE  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
 14137  0046D0  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
 14138                           
 14139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14140                           ; Switch size 1, requested type "simple"
 14141                           ; Number of cases is 1, Range of values is 0 to 0
 14142                           ; switch strategies available:
 14143                           ; Name         Instructions Cycles
 14144                           ; simple_byte            4     3 (average)
 14145                           ;	Chosen strategy is simple_byte
 14146  0046D2  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
 14147  0046D4  0A00               	xorlw	0	; case 0
 14148  0046D6  B4D8               	btfsc	status,2,c
 14149  0046D8  EF70  F023         	goto	l8172
 14150  0046DC  EFF7  F022         	goto	l5448
 14151  0046E0                     l8172:
 14152                           
 14153                           ; Switch size 1, requested type "simple"
 14154                           ; Number of cases is 2, Range of values is 0 to 1
 14155                           ; switch strategies available:
 14156                           ; Name         Instructions Cycles
 14157                           ; simple_byte            7     4 (average)
 14158                           ;	Chosen strategy is simple_byte
 14159  0046E0  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
 14160  0046E2  0A00               	xorlw	0	; case 0
 14161  0046E4  B4D8               	btfsc	status,2,c
 14162  0046E6  EFFB  F022         	goto	l5450
 14163  0046EA  0A01               	xorlw	1	; case 1
 14164  0046EC  B4D8               	btfsc	status,2,c
 14165  0046EE  EF2C  F023         	goto	l5452
 14166  0046F2  EFF7  F022         	goto	l5448
 14167  0046F6                     l5458:
 14168                           
 14169                           ;MCAL_layer/GPIO/hal_gpio.c: 42:     return ret;
 14170  0046F6  5009               	movf	gpio_pin_direction_intialize@ret^0,w,c
 14171  0046F8  0012               	return		;funcret
 14172  0046FA                     __end_of_gpio_pin_direction_intialize:
 14173                           	callstack 0
 14174                           
 14175                           	psect	rparam
 14176  0000                     
 14177                           	psect	idloc
 14178                           
 14179                           ;Config register IDLOC0 @ 0x200000
 14180                           ;	unspecified, using default values
 14181  200000                     	org	2097152
 14182  200000  FF                 	db	255
 14183                           
 14184                           ;Config register IDLOC1 @ 0x200001
 14185                           ;	unspecified, using default values
 14186  200001                     	org	2097153
 14187  200001  FF                 	db	255
 14188                           
 14189                           ;Config register IDLOC2 @ 0x200002
 14190                           ;	unspecified, using default values
 14191  200002                     	org	2097154
 14192  200002  FF                 	db	255
 14193                           
 14194                           ;Config register IDLOC3 @ 0x200003
 14195                           ;	unspecified, using default values
 14196  200003                     	org	2097155
 14197  200003  FF                 	db	255
 14198                           
 14199                           ;Config register IDLOC4 @ 0x200004
 14200                           ;	unspecified, using default values
 14201  200004                     	org	2097156
 14202  200004  FF                 	db	255
 14203                           
 14204                           ;Config register IDLOC5 @ 0x200005
 14205                           ;	unspecified, using default values
 14206  200005                     	org	2097157
 14207  200005  FF                 	db	255
 14208                           
 14209                           ;Config register IDLOC6 @ 0x200006
 14210                           ;	unspecified, using default values
 14211  200006                     	org	2097158
 14212  200006  FF                 	db	255
 14213                           
 14214                           ;Config register IDLOC7 @ 0x200007
 14215                           ;	unspecified, using default values
 14216  200007                     	org	2097159
 14217  200007  FF                 	db	255
 14218                           
 14219                           	psect	config
 14220                           
 14221                           ; Padding undefined space
 14222  300000                     	org	3145728
 14223  300000  FF                 	db	255
 14224                           
 14225                           ;Config register CONFIG1H @ 0x300001
 14226                           ;	Oscillator Selection bits
 14227                           ;	OSC = HS, HS oscillator
 14228                           ;	Fail-Safe Clock Monitor Enable bit
 14229                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14230                           ;	Internal/External Oscillator Switchover bit
 14231                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14232  300001                     	org	3145729
 14233  300001  02                 	db	2
 14234                           
 14235                           ;Config register CONFIG2L @ 0x300002
 14236                           ;	Power-up Timer Enable bit
 14237                           ;	PWRT = OFF, PWRT disabled
 14238                           ;	Brown-out Reset Enable bits
 14239                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 14240                           ;	Brown Out Reset Voltage bits
 14241                           ;	BORV = 1, 
 14242  300002                     	org	3145730
 14243  300002  09                 	db	9
 14244                           
 14245                           ;Config register CONFIG2H @ 0x300003
 14246                           ;	Watchdog Timer Enable bit
 14247                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14248                           ;	Watchdog Timer Postscale Select bits
 14249                           ;	WDTPS = 32768, 1:32768
 14250  300003                     	org	3145731
 14251  300003  1E                 	db	30
 14252                           
 14253                           ; Padding undefined space
 14254  300004                     	org	3145732
 14255  300004  FF                 	db	255
 14256                           
 14257                           ;Config register CONFIG3H @ 0x300005
 14258                           ;	CCP2 MUX bit
 14259                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14260                           ;	PORTB A/D Enable bit
 14261                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14262                           ;	Low-Power Timer1 Oscillator Enable bit
 14263                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14264                           ;	MCLR Pin Enable bit
 14265                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14266  300005                     	org	3145733
 14267  300005  81                 	db	129
 14268                           
 14269                           ;Config register CONFIG4L @ 0x300006
 14270                           ;	Stack Full/Underflow Reset Enable bit
 14271                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14272                           ;	Single-Supply ICSP Enable bit
 14273                           ;	LVP = OFF, Single-Supply ICSP disabled
 14274                           ;	Extended Instruction Set Enable bit
 14275                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14276                           ;	Background Debugger Enable bit
 14277                           ;	DEBUG = 0x1, unprogrammed default
 14278  300006                     	org	3145734
 14279  300006  81                 	db	129
 14280                           
 14281                           ; Padding undefined space
 14282  300007                     	org	3145735
 14283  300007  FF                 	db	255
 14284                           
 14285                           ;Config register CONFIG5L @ 0x300008
 14286                           ;	Code Protection bit
 14287                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14288                           ;	Code Protection bit
 14289                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14290                           ;	Code Protection bit
 14291                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14292                           ;	Code Protection bit
 14293                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14294  300008                     	org	3145736
 14295  300008  0F                 	db	15
 14296                           
 14297                           ;Config register CONFIG5H @ 0x300009
 14298                           ;	Boot Block Code Protection bit
 14299                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14300                           ;	Data EEPROM Code Protection bit
 14301                           ;	CPD = OFF, Data EEPROM not code-protected
 14302  300009                     	org	3145737
 14303  300009  C0                 	db	192
 14304                           
 14305                           ;Config register CONFIG6L @ 0x30000A
 14306                           ;	Write Protection bit
 14307                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14308                           ;	Write Protection bit
 14309                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14310                           ;	Write Protection bit
 14311                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14312                           ;	Write Protection bit
 14313                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 14314  30000A                     	org	3145738
 14315  30000A  0F                 	db	15
 14316                           
 14317                           ;Config register CONFIG6H @ 0x30000B
 14318                           ;	Configuration Register Write Protection bit
 14319                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14320                           ;	Boot Block Write Protection bit
 14321                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14322                           ;	Data EEPROM Write Protection bit
 14323                           ;	WRTD = OFF, Data EEPROM not write-protected
 14324  30000B                     	org	3145739
 14325  30000B  E0                 	db	224
 14326                           
 14327                           ;Config register CONFIG7L @ 0x30000C
 14328                           ;	Table Read Protection bit
 14329                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14330                           ;	Table Read Protection bit
 14331                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14332                           ;	Table Read Protection bit
 14333                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14334                           ;	Table Read Protection bit
 14335                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14336  30000C                     	org	3145740
 14337  30000C  0F                 	db	15
 14338                           
 14339                           ;Config register CONFIG7H @ 0x30000D
 14340                           ;	Boot Block Table Read Protection bit
 14341                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14342  30000D                     	org	3145741
 14343  30000D  40                 	db	64
 14344                           tosu	equ	0xFFF
 14345                           tosh	equ	0xFFE
 14346                           tosl	equ	0xFFD
 14347                           stkptr	equ	0xFFC
 14348                           pclatu	equ	0xFFB
 14349                           pclath	equ	0xFFA
 14350                           pcl	equ	0xFF9
 14351                           tblptru	equ	0xFF8
 14352                           tblptrh	equ	0xFF7
 14353                           tblptrl	equ	0xFF6
 14354                           tablat	equ	0xFF5
 14355                           prodh	equ	0xFF4
 14356                           prodl	equ	0xFF3
 14357                           indf0	equ	0xFEF
 14358                           postinc0	equ	0xFEE
 14359                           postdec0	equ	0xFED
 14360                           preinc0	equ	0xFEC
 14361                           plusw0	equ	0xFEB
 14362                           fsr0h	equ	0xFEA
 14363                           fsr0l	equ	0xFE9
 14364                           wreg	equ	0xFE8
 14365                           indf1	equ	0xFE7
 14366                           postinc1	equ	0xFE6
 14367                           postdec1	equ	0xFE5
 14368                           preinc1	equ	0xFE4
 14369                           plusw1	equ	0xFE3
 14370                           fsr1h	equ	0xFE2
 14371                           fsr1l	equ	0xFE1
 14372                           bsr	equ	0xFE0
 14373                           indf2	equ	0xFDF
 14374                           postinc2	equ	0xFDE
 14375                           postdec2	equ	0xFDD
 14376                           preinc2	equ	0xFDC
 14377                           plusw2	equ	0xFDB
 14378                           fsr2h	equ	0xFDA
 14379                           fsr2l	equ	0xFD9
 14380                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    24
    Data        60
    BSS         354
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128    107     128
    BANK1           256      0     193
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), STR_25(CODE[3]), STR_20(CODE[3]), STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), STR_25(CODE[3]), STR_20(CODE[3]), STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), arr(BANK1[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), arr(BANK1[11]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2403$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2403$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 100
		 -> postfix(BANK2[100]), infix(BANK2[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> postfix(BANK2[100]), infix(BANK2[100]), 

    evaluatePostfix@result	PTR float  size(2) Largest target is 4
		 -> result(BANK1[4]), 

    evaluatePostfix@postfix	PTR const unsigned char  size(2) Largest target is 100
		 -> postfix(BANK2[100]), 

    infixToPostfix@postfix	PTR unsigned char  size(2) Largest target is 100
		 -> postfix(BANK2[100]), 

    infixToPostfix@infix	PTR const unsigned char  size(2) Largest target is 100
		 -> infix(BANK2[100]), 

    pop@stack	PTR struct Stack size(2) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    push@stack	PTR struct Stack size(2) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    initialize@stack	PTR struct Stack size(2) Largest target is 102
		 -> infixToPostfix@operatorStack(COMRAM[102]), 

    pop_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    push_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    initialize_t@stack	PTR struct Stack_t size(2) Largest target is 82
		 -> evaluatePostfix@operandStack(BANK0[82]), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1430$EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefailtInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1238$InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1238$InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1229$InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), keypad_1(BANK1[10]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), button_read_state@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> keypad_1.keypad_column_pins(BANK1[6]), keypad_1(BANK1[10]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), keypad_1(BANK1[10]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_1.lcd_data(BANK1[4]), lcd_1(BANK1[6]), keypad_1.keypad_column_pins(BANK1[6]), keypad_1.keypad_row_pins(BANK1[4]), 
		 -> keypad_1(BANK1[10]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    led_turn_on@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led_1(BANK0[1]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> val(BANK0[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 10
		 -> keypad_1(BANK1[10]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(2) Largest target is 10
		 -> keypad_1(BANK1[10]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> postfix(BANK2[100]), infix(BANK2[100]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK1[11]), STR_4(CODE[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK1[6]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_4bits_send_enable_signal
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _infixToPostfix->_push
    _evaluatePostfix->_push_t
    _push_t->_doMath
    _doMath->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _ecu_layer_intialize->_lcd_4bit_intialize
    _led_initialize->_gpio_pin_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_4bits_send_enable_signal
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_evaluatePostfix
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  229095
                                            103 BANK0      4     4      0
              _application_intialize
                    _evaluatePostfix
                     _infixToPostfix
                   _keypad_get_value
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
                             _memset
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   45083
                                             50 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   44264
                                            125 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           54    48      6   43889
                                              0 BANK0     44    38      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4899
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1137
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   28680
                                             63 COMRAM    62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     609
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5498
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3697
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    2771
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    5095
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    5095
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   36787
                                             25 COMRAM     7     1      6
            _lcd_4bit_send_char_data
               _lcd_4bits_set_cursor
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          6     1      5   37068
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 7     3      4   19328
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              4     1      3   16670
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     7      4    5959
                                             10 COMRAM    11     7      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     460
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _infixToPostfix                                     114   110      4    1546
                                              5 COMRAM   114   110      4
                        _check_digit
                         _initialize
                                _pop
                         _precedence
                               _push
 ---------------------------------------------------------------------------------
 (2) _push                                                 5     2      3     218
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _precedence                                           3     1      2      88
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _pop                                                  4     2      2     196
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _initialize                                           2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _evaluatePostfix                                    111   107      4   30336
                                             80 COMRAM     8     4      4
                                              0 BANK0    103   103      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _check_digit
                             _doMath
                       _initialize_t
                              _pop_t
                             _push_t
 ---------------------------------------------------------------------------------
 (2) _push_t                                               8     2      6     370
                                             72 COMRAM     8     2      6
                             _doMath (ARG)
 ---------------------------------------------------------------------------------
 (2) _pop_t                                                6     2      4     272
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _initialize_t                                         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _doMath                                               9     1      8   16310
                                             63 COMRAM     9     1      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4561
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3934
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3112
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4287
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _check_digit                                          3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1006
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   40390
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   40389
                  _keypad_initialize
                 _lcd_4bit_intialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     3      2    6955
                                             14 COMRAM     5     3      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_intialize                                   6     4      2   25839
                                             18 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   18646
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     1      3    5702
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         4     2      2    5264
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    7     5      2    7591
                                             14 COMRAM     7     5      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6726
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     559
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _ecu_layer_intialize
       _keypad_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_4bit_intialize
         _gpio_pin_intialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bits_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_intialize
   _evaluatePostfix
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _check_digit
     _doMath
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
         ___flmul (ARG)
     _initialize_t
     _pop_t
     _push_t
       _doMath (ARG)
   _infixToPostfix
     _check_digit
     _initialize
     _pop
     _precedence
     _push
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
       _lcd_send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bits_set_cursor
     _strlen (ARG)
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic
   _memset
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isupper
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C1       7       75.4%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6B      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITBIGSFRhhhh       2A      0       0      36        0.0%
BITBIGSFRhlhhhh      C      0       0      38        0.0%
BITBIGSFRhlhl        C      0       0      40        0.0%
BITBIGSFRhhhl        B      0       0      37        0.0%
BITBIGSFRhlhhhl      7      0       0      39        0.0%
BITBIGSFRhll         6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     288      44        0.0%
DATA                 0      0     288       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Aug 31 03:59:34 2023

                           ___fldiv@aexp 0019                             ___fldiv@bexp 0018  
                           ___fldiv@sign 0011                          ?_lcd_send_4bits 000B  
                            _SSPSTATbits 000FC7                                       l71 4A88  
                                     l81 599E                                       l76 5A10  
                                     l86 5D54                             ___awdiv@sign 0006  
                                     _op 010E                                      l102 5746  
                                    l202 56A6                                      l251 57C6  
                                    l413 54A4                                      l406 4960  
                                    l176 5BBC                                      l265 4CD0  
                                    l281 5858                                      l274 57E2  
                                    l427 5B54                                      l179 5EE4  
                                    l339 607C                                      l292 592C  
                                    l285 58B6                                      l278 5840  
                                    l288 58CE                                      l387 46F8  
                                    l901 5FC8                                      l914 4834  
                                    l907 5AE8                                      l917 4824  
                                    l942 3F9E                                      l960 36BE  
                                    l882 60A8                                      l891 6092  
                                    l885 5E68                                      l894 602A  
                                    l879 60AE                                      l888 5D9A  
                                    l897 6056     __end_of_lcd_4bits_send_enable_signal 5EE6  
           _lcd_4bits_send_enable_signal 5EAA                     keypad_initialize@ret 0013  
                                    _abs 5E6A                                      _arr 0177  
                                    _pad 5264                _RB5_InterruptHandler_HIGH 011A  
                                    _val 00FD                                      _pop 602C  
                                    _pos 00FF                             ___awmod@sign 0006  
                    led_initialize@F3045 00FB                                      prod 000FF3  
                                    wreg 000FE8                    relay_initialize@F3039 00F7  
                           ?_led_turn_on 000B      evaluatePostfix@fractionalMultiplier 008A  
                           ___flmul@aexp 0020                             ___flmul@bexp 0021  
            lcd_send_4bits@_data_command 000D                             ___flmul@sign 001B  
                           ___flmul@temp 0026                             ___flmul@prod 0022  
                           ___fltol@exp1 000A                                     ?_abs 0013  
                                   l1222 55FE                                     l1207 5554  
                                   l1233 4EDA                                     l1401 50A8  
                                   l1090 45B4                                     l1411 5178  
                                   l1500 2738                                     l1228 4E94  
                                   l1260 4DD6                                     l1077 42DA  
                                   l1237 5F90                                     l1408 50C8  
                                   l1194 53EC                                     l1418 5198  
                                   l1508 2582                                     l1621 4152  
                                   l1517 2652                                     l1533 5DE0  
                                   l1701 3760                                     l1550 3180  
                                   l1518 2640                                     l1703 3768  
                                   l1632 40EA                                     l1625 408E  
                                   l1545 335C                                     l1721 39A2  
                                   l1618 3FF6                                     l1547 31BC  
                                   l1491 2468                                     l1651 5CC8  
                                   l1556 3202                                     l1492 2456  
                                   l1581 2FC2                                     l1493 241C  
                                   l1813 3BEE                                     l1558 327A  
                                   l1638 4450                                     l1910 60B0  
                                   l1559 3268                                     l1823 3DB8  
                                   l1815 3BF6                                     l5200 486E  
                                   l1584 2E54                                     l1832 2278  
                                   l1577 2C5E                                     l1753 13EE  
                                   l1737 1C32                                     l1841 207C  
                                   l5202 4876                                     l5210 495E  
                                   l1594 2F84                                     l1586 2ECC  
                                   l1922 5FFE                                     l1690 52AA  
                                   l6010 4DC6                                     l6002 4D8A  
                                   l1850 5A7C                                     l1587 2EBA  
                                   l1907 5E24                                     l5204 48D8  
                                   l5300 23AE                                     l5220 5FD6  
                                   l6004 4D96                                     l1860 4FD8  
                                   l1916 5C1A                                     l6100 5BBE  
                                   l6020 500C                                     l1693 52EC  
                                   l1781 1824                                     l5310 23E8  
                                   l5302 23B2                                     l5230 2286  
                                   l5222 5FDA                                     l6006 4DA6  
                                   l6102 5BCE                                     l6110 5CF8  
                                   l1926 4BAE                                     l6030 508E  
                                   l6022 5020                                     l6014 4FDA  
                                   l1695 5328                                     l5208 4934  
                                   l7000 40CC                                     l5400 266E  
                                   l5320 243A                                     l5312 2404  
                                   l5304 23B6                                     l5240 22C6  
                                   l5232 2294                                     l5224 5FF2  
                                   l6200 383C                                     l6008 4DB6  
                                   l6120 3A2E                                     l1936 5D06  
                                   l6104 5CCA                                     l6032 5090  
                                   l6024 502E                                     l6016 4FE6  
                                   l6040 50F0                                     l1865 5EA0  
                                   l1849 5A74                                     l7010 4122  
                                   l7002 40DA                                     l5410 26D8  
                                   l5402 267C                                     l5330 2486  
                                   l5322 2448                                     l5314 2414  
                                   l5306 23BA                                     l5250 22F8  
                                   l5242 22C8                                     l5234 2296  
                                   l5218 5FCA                                     l6210 390C  
                                   l6202 38A0                                     l6122 3A3C  
                                   l6130 3B1C                                     l1874 3BB4  
                                   l6114 39A4                                     l6034 50A2  
                                   l6026 5040                                     l6018 5004  
                                   l6050 5172                                     l6042 5104  
                                   l1939 5D0E                                     l7012 4132  
                                   l7004 40F8                                     l5420 2712  
                                   l5412 26F8                                     l5404 26B6  
                                   l5340 24C6                                     l5324 244A  
                                   l5316 242A                                     l5308 23BE  
                                   l5260 2320                                     l5252 22FA  
                                   l5236 22A6                                     l5244 22D0  
                                   l5228 227A                                     l7100 42FA  
                                   l5500 4198                                     l1868 5EA8  
                                   l5180 519A                                     l6060 52A2  
                                   l6052 5264                                     l6220 3956  
                                   l6204 38BA                                     l6212 391C  
                                   l6132 3B58                                     l6116 39C4  
                                   l1884 5F58                                     l6108 5CCA  
                                   l6028 506E                                     l6044 5112  
                                   l6036 50CA                                     l7020 5A12  
                                   l1877 3AF8                                     l6150 5B26  
                                   l6142 5AEA                                     l7014 4140  
                                   l7006 40FA                                     l5422 2718  
                                   l5414 26FC                                     l5406 26B8  
                                   l5350 24F0                                     l5342 24D2  
                                   l5334 249A                                     l5326 2454  
                                   l5318 2436                                     l5270 235A  
                                   l5262 2330                                     l5254 2300  
                                   l5246 22E0                                     l5238 22B6  
                                   l7030 5D10                                     l7102 4306  
                                   l5510 41EE                                     l5502 41B8  
                                   l5190 521C                                     l5182 51AC  
                                   l5430 5DE2                                     l6070 5310  
                                   l6062 52B6                                     l6054 5274  
                                   l6222 3962                                     l6214 392E  
                                   l6206 38D8                                     l6134 3B6C  
                                   l6126 3AAC                                     l6118 3A1A  
                                   l6310 1350                                     l6302 128A  
                                   l6230 1044                                     l6046 5140  
                                   l6038 50E8                                     l7022 5A1A  
                                   ?_pad 0011                                     l6152 5B52  
                                   l6144 5AEA                                     l6160 59B2  
                                   l7016 4142                                     l7008 40FE  
                                   l5600 3066                                     l5424 2726  
                                   l5416 270A                                     l5408 26C8  
                                   l5360 2562                                     l5344 24D6  
                                   l5336 24AA                                     l5328 2476  
                                   l5352 24F6                                     l5280 2386  
                                   l5272 236C                                     l5264 2340  
                                   l5256 230E                                     l5248 22E6  
                                   l7032 5D22                                     l7040 56A8  
                                   l7200 585C                                     l7120 4428  
                                   l7112 43AE                                     l5520 4270  
                                   l5512 4202                                     l5504 41BC  
                                   l5184 51BE                                     l5432 5DEE  
                                   l6064 52CA                                     l6056 5288  
                                   l6224 396A                                     l6216 393E  
                                   l6208 38F2                                     l6080 4EFC  
                                   l6136 3B94                                     l6128 3AE8  
                                   l6400 17D8                                     l6320 13AC  
                                   l6312 1356                                     l6304 12BE  
                                   l6240 1096                                     l6232 104C  
                                   l6048 5160                                     l7024 5A28  
                                   l8000 2902                                     l5450 45F6  
                                   l5442 45B6                                     l5194 4836  
                                   l6146 5AFC                                     l6162 59BA  
                                   l5610 30A6                                     l5602 3076  
                                   l5426 2728                                     l5418 2710  
                                   l5370 25BC                                     l5354 251C  
                                   l5362 2572                                     l5346 24E4  
                                   l5338 24B8                                     l5290 239A  
                                   l5282 238A                                     l5274 237A  
                                   l5266 2342                                     l5258 2310  
                                   l7034 5D2A                                     l7050 570E  
                                   l7042 56A8                                     l7210 58B8  
                                   l7202 5892                                     l7122 4434  
                                   l7114 43DA                                     l7106 433C  
                                   l5530 42BA                                     l5522 4272  
                                   l5514 4210                                     l5506 41C8  
                                   l6074 5E6A                                     l5186 51C8  
                                   l5434 5E00                                     l6066 52CE  
                                   l6058 5296                                     l6218 3944  
                                   l6226 397A                                     l6170 36E0  
                                   l6082 4F3A                                     l6090 4F7A  
                                   l6138 3BA4                                     l6410 181C  
                                   l6402 17EA                                     l6322 13C0  
                                   l6306 12C2                                     l6314 1388  
                                   l6250 10DA                                     l6242 109E  
                                   l6234 105C                                     l7026 5A56  
                                   l7130 5C8A                                     l8010 2962  
                                   l8002 2912                                     l1899 5262  
                                   l5452 4658                                     l5444 45BA  
                                   l5196 483A                                     l6148 5B1E  
                                   l6164 5A0E                                     l6156 59A0  
                                   l5700 3352                                     l5612 30B6  
                                   l5620 30D6                                     l5604 3078  
                                   l5380 25EC                                     l5372 25C6  
                                   l5364 2598                                     l5356 2550  
                                   l5348 24E6                                     l5292 239E  
                                   l5284 238E                                     l5276 237E  
                                   l5268 234A                                     l7300 3ED2  
                                   l7140 4BB0                                     l7036 5D52  
                                   l7028 5D10                                     l7052 5712  
                                   l7044 56BA                                     l7220 590A  
                                   l7212 58B8                                     l7204 5894  
                                   l7124 443A                                     l7108 4394  
                                   l5524 4284                                     l5516 4222  
                                   l5508 41E6                                     l5540 4484  
                                   l6076 5E84                                     l5188 51E6  
                                   l5436 5E04                                     l6068 52FC  
                                   l6180 3754                                     l6172 3708  
                                   l6092 4F8C                                     l6084 4F62  
                                   l6500 1B48                                     l6420 18D8  
                                   l6412 1840                                     l6404 17EE  
                                   l6340 1472                                     l6324 13C8  
                                   l6316 1396                                     l6308 131C  
                                   l6252 10E6                                     l6260 10FC  
                                   l6244 10A6                                     l6236 106A  
                                   l7132 5C92                                     l8020 2998  
                                   l8012 2968                                     l8004 292E  
                                   l5446 45CC                                     l5198 484C  
                                   l5470 5B6C                                     l6158 59A0  
                                   l5630 3114                                     l5622 30E6  
                                   l5614 30BE                                     l5606 3080  
                                   l5710 2BA6                                     l5390 2614  
                                   l5382 25F0                                     l5374 25D4  
                                   l5366 25A8                                     l5358 2552  
                                   l5294 23A2                                     l5286 2392  
                                   l5278 2382                                     l7310 3F58  
                                   l7302 3EE6                                     l7142 4BC0  
                                   l7054 5744                                     l7046 56C2  
                                   l7222 591C                                     l7214 58CA  
                                   l7206 58A6                                     l7126 443E  
                                   l7118 43F4                                     l5518 4250  
                                   l5526 428A                                     l5550 44DC  
                                   l5542 4488                                     l5534 4452  
                                   l6190 379E                                     l6182 3770  
                                   l6174 3728                                     l6086 4F6E  
                                   l6078 4EDC                                     l5438 5F22  
                                   l6510 1B98                                     l6502 1B5A  
                                   l6430 191E                                     l6422 18E6  
                                   l6414 18A4                                     l6406 17FE  
                                   l6350 14AA                                     l6342 147A  
                                   l6334 140E                                     l6326 13E2  
                                   l6318 139A                                     l6270 116A  
                                   l6254 10EE                                     l6246 10B8  
                                   l6238 1072                                     l7134 5C9A  
                                   l8030 29C8                                     l8006 294A  
                                   l8014 296C                                     l8022 299E  
                                   l5456 46B4                                     l5448 45EE  
                                   l5480 5EAA                                     l5472 5B84  
                                   l6600 49A0                                     l5640 315C  
                                   l5632 3124                                     l5624 30E6  
                                   l5616 30C2                                     l5608 3090  
                                   l5800 2E76                                     l5720 2BE6  
                                   l5712 2BB4                                     l5392 2622  
                                   l5384 2600                                     l5376 25D6  
                                   l5296 23A6                                     l5288 2396  
                                   l7320 336A                                     l7312 3F76  
                                   l7304 3F24                                     l7160 4BF4  
                                   l7144 4BD2                                     l7048 56DC  
                                   l7216 58D2                                     l5528 429A  
                                   l5560 455E                                     l5552 44F0  
                                   l5544 4496                                     l5536 4456  
                                   l6192 37A8                                     l6184 3782  
                                   l6176 3738                                     l6168 36C0  
                                   l6096 4FD0                                     l6520 1BBC  
                                   l6512 1BA0                                     l6504 1B74  
                                   l6440 1948                                     l6432 1922  
                                   l6416 18B4                                     l6424 18EE  
                                   l6408 1810                                     l6360 14F4  
                                   l6352 14B8                                     l6336 1420  
                                   l6344 147E                                     l6328 13FA  
                                   l6272 1182                                     l6256 10F2  
                                   l6248 10C8                                     l7136 5CB6  
                                   l7128 5C78                                     l8040 29FC  
                                   l8032 29DA                                     l8024 29AE  
                                   l8016 297C                                     l8008 2950  
                                   l5458 46F6                                     l5482 5EBE  
                                   l5474 5B9E                                     l5466 5B56  
                                   l6610 49C2                                     l5650 31AA  
                                   l5642 3170                                     l5634 3134  
                                   l5570 2FC4                                     l5810 2EE8  
                                   l5802 2E84                                     l5730 2C16  
                                   l5722 2BEC                                     l5714 2BB6  
                                   l5394 2638                                     l5378 25E4  
                                   l5386 2602                                     l5298 23AA  
                                   l7330 33E2                                     l7322 3378  
                                   l7314 3F7A                                     l7170 4C3C  
                                   l7162 4C08                                     l7154 4BF0  
                                   l7146 4BE4                                     l7218 5908  
                                   l5490 4154                                     l5554 44FE  
                                   l5562 4564                                     l5546 44B6  
                                   l5538 4464                                     l6194 37AE  
                                   l6186 3790                                     l6178 373A  
                                   l6530 1C12                                     l6522 1BE8  
                                   l6514 1BB0                                     l6506 1B7A  
                                   l6450 197C                                     l6442 194E  
                                   l6434 1928                                     l6426 1900  
                                   l6418 18C6                                     l6370 153A  
                                   l6362 1506                                     l6354 14BC  
                                   l6346 1486                                     l6338 143C  
                                   l6274 118A                                     l6266 1122  
                                   l6258 10F6                                     l8042 2A02  
                                   l8034 29E0                                     l8018 2994  
                                   l5484 5ECC                                     l5468 5B56  
                                   l6620 4A14                                     l6612 49D2  
                                   l5660 31F2                                     l5652 31BA  
                                   l5644 317E                                     l5636 3144  
                                   l5628 30FA                                     l5580 3000  
                                   l5572 2FD0                                     l5820 2F52  
                                   l5812 2EF6                                     l5804 2EB2  
                                   l5740 2C4E                                     l5732 2C18  
                                   l5724 2BFC                                     l5716 2BC6  
                                   l5708 2B9A                                     l5388 2610  
                                   l7340 34B8                                     l7332 3402  
                                   l7324 3388                                     l7316 3F8E  
                                   l7308 3F38                                     l7180 4C76  
                                   l7164 4C0A                                     l7148 4BEC  
                                   l5492 4158                                     l5564 4574  
                                   l5556 452C                                     l5548 44D4  
                                   l6196 3830                                     l6188 3796  
                                   l5900 54DA                                     l6524 1BF4  
                                   l6516 1BB6                                     l6508 1B8C  
                                   l6436 1934                                     l6428 190E  
                                   l6444 1954                                     l6452 1982  
                                   l6460 1A18                                     l6380 164C  
                                   l6372 159E                                     l6356 14CE  
                                   l6364 150E                                     l6348 1498  
                                   l6284 11D8                                     l6268 114E  
                                   l6540 3BC8                                     l6700 1CA2  
                                   l8060 2AAE                                     l8052 2A34  
                                   l8036 29E6                                     l8028 29C2  
                                   l5486 5EE2                                     l5478 5EAA  
                                   l6630 4A64                                     l6622 4A24  
                                   l6614 49E0                                     l6606 49A4  
                                   l7262 60AA                                     l5670 3232  
                                   l5662 3200                                     l5654 31CC  
                                   l5646 318A                                     l5638 314C  
                                   l5590 3030                                     l5582 3010  
                                   l5574 2FDE                                     l5830 2FA8  
                                   l5822 2F6C                                     l5814 2F20  
                                   l5750 2C9E                                     l5742 2C6E  
                                   l5734 2C28                                     l5726 2C02  
                                   l5718 2BD6                                     l5398 2662  
                                   l7350 35C0                                     l7342 3544  
                                   l7334 340A                                     l7326 33A0  
                                   l7318 335E                                     l7270 3DCE  
                                   l7182 4CAA                                     l7166 4C1A  
                                   l7190 4CCE                                     l5494 4166  
                                   l5566 4594                                     l5558 454C  
                                   l6198 3836                                     l5910 5520  
                                   l5902 54EC                                     l6526 1BFC  
                                   l6470 1A84                                     l6462 1A36  
                                   l6454 19DA                                     l6446 1966  
                                   l6438 1944                                     l6390 1706  
                                   l6382 1680                                     l6374 15F6  
                                   l6366 1516                                     l6358 14DC  
                                   l6286 1204                                     l6278 11B2  
                                   l6550 3C36                                     l6542 3BE2  
                                   l6710 1D50                                     l6702 1CB2  
                                   l8070 2B3A                                     l8062 2AC2  
                                   l8054 2A40                                     l8046 2A18  
                                   l6640 5750                                     l6632 4A74  
                                   l6624 4A34                                     l6616 49F0  
                                   l6608 49C0                                     l7264 60AA  
                                   l5680 32A4                                     l5672 3260  
                                   l5656 31E2                                     l5664 3212  
                                   l5648 31A8                                     l5592 3036  
                                   l5584 3012                                     l5576 2FE0  
                                   l5824 2F88                                     l5832 2FAE  
                                   l5808 2EDC                                     l5816 2F24  
                                   l5760 2CEE                                     l5752 2CA8  
                                   l5744 2C7E                                     l5736 2C38  
                                   l5728 2C08                                     l5840 5DAC  
                                   l7360 3634                                     l7352 35DC  
                                   l7336 3414                                     l7328 33B4  
                                   l7280 3E1C                                     l7272 3DDA  
                                   l6800 5404                                     l7184 4CAC  
                                   l7176 4C40                                     l7168 4C2E  
                                   l7096 42DC                                     l5496 4186  
                                   l5920 554C                                     l5912 5528  
                                   l5904 54F4                                     l6528 1C0C  
                                   l6480 1AC2                                     l6472 1A88  
                                   l6464 1A52                                     l6456 1A0E  
                                   l6448 1978                                     l6392 1716  
                                   l6384 16B2                                     l6376 162A  
                                   l6368 1526                                     l6288 1220  
                                   l6296 123C                                     l6560 3D2E  
                                   l6552 3CAC                                     l6544 3C1E  
                                   l6536 3BB6                                     l6720 1E2C  
                                   l6712 1D76                                     l6704 1CE6  
                                   l8080 2B8E                                     l8072 2B56  
                                   l8064 2AD6                                     l8048 2A1E  
                                   l8056 2A54                                     l8170 4948  
                                   l6650 576E                                     l6642 5762  
                                   l6626 4A44                                     l6618 4A0E  
                                   l6634 4A86                                     l5690 331C  
                                   l5682 32CE                                     l5666 3220  
                                   l5658 31E8                                     l5594 3044  
                                   l5578 2FF0                                     l5586 301A  
                                   l5834 2FB2                                     l5826 2F98  
                                   l5818 2F3E                                     l5770 2D30  
                                   l5762 2CFA                                     l5754 2CBE  
                                   l5738 2C48                                     l7338 3426  
                                   l7346 357C                                     l7354 35E0  
                                   l7290 3E7A                                     l7282 3E32  
                                   l7274 3DEA                                     l7266 3DBA  
                                   l6802 5416                                     l7186 4CBC  
                                   l7178 4C66                                     l7194 5842  
                                   l5498 418A                                     l5850 5344  
                                   l5914 552E                                     l5906 54FC  
                                   l5930 55C2                                     l6490 1AF4  
                                   l6482 1ACA                                     l6474 1A98  
                                   l6466 1A64                                     l6458 1A14  
                                   l6394 174A                                     l6386 16C6  
                                   l6378 162E                                     l6298 1254  
                                   l6562 3D4C                                     l6554 3CB2  
                                   l6546 3C26                                     l6538 3BC6  
                                   l6730 1EFE                                     l6722 1E62  
                                   l6714 1DBE                                     l6706 1CF6  
                                   l8066 2AEA                                     l8074 2B72  
                                   l8058 2A96                                     l8172 46E0  
                                   l6652 577E                                     l6644 576A  
                                   l6628 4A54                                     l5692 3338  
                                   l5676 328A                                     l5684 32D2  
                                   l5668 3224                                     l5596 3046  
                                   l5588 302A                                     l5828 2FA6  
                                   l5780 2D92                                     l5772 2D40  
                                   l5764 2D08                                     l5756 2CCA  
                                   l5748 2C92                                     l7356 35F2  
                                   l7348 35A0                                     l7364 367C  
                                   l6900 607E                                     l7292 3E98  
                                   l7284 3E4E                                     l7276 3DFC  
                                   l7268 3DC6                                     l6804 5438  
                                   l7188 4CBE                                     l6820 599C  
                                   l6812 592E                                     l7196 5842  
                                   l5860 536A                                     l5852 5348  
                                   l5844 532A                                     l5908 550A  
                                   l5916 5534                                     l5932 55D2  
                                   l5924 5556                                     l5940 4DD8  
                                   l6492 1AFA                                     l6484 1AD8  
                                   l6476 1AAA                                     l6468 1A74  
                                   l6396 17A0                                     l6388 16F8  
                                   l6580 4ACE                                     l6572 4A8A  
                                   l6564 3D66                                     l6556 3CB8  
                                   l6548 3C30                                     l6732 1F16  
                                   l6740 1F80                                     l6708 1D2A  
                                   l8076 2B76                                     l8068 2B10  
                                   l6662 5794                                     l6654 5780  
                                   l6638 5748                                     l6910 5FA4  
                                   l5694 333C                                     l5686 32EC  
                                   l5678 3296                                     l5598 3056  
                                   l5790 2E3A                                     l5782 2DAE  
                                   l5774 2D5A                                     l5766 2D14  
                                   l5758 2CE2                                     l5838 5D9C  
                                   l7366 369A                                     l7358 35FC  
                                   l6902 6000                                     l7294 3EA8  
                                   l7286 3E52                                     l7278 3E04  
                                   l6806 5440                                     l6814 592E  
                                   l6830 5622                                     l7198 5854  
                                   l5870 53A0                                     l5862 537C  
                                   l5854 5356                                     l5846 532E  
                                   l5918 5544                                     l5934 55F6  
                                   l5926 5584                                     l5950 4E62  
                                   l5942 4E06                                     l6494 1B20  
                                   l6486 1AE0                                     l6478 1AB2  
                                   l6398 17A4                                     l6582 4B00  
                                   l6574 4AB4                                     l6566 3D80  
                                   l6558 3D1C                                     l6750 204C  
                                   l6742 1FAE                                     l6734 1F24  
                                   l6718 1DF6                                     l8166 2A68  
                                   l8078 2B88                                     l6664 57B2  
                                   l6656 5790                                     l6592 4962  
                                   l6680 581C                                     l6672 57C8  
                                   l6912 5FB4                                     l5696 334A  
                                   l5688 3302                                     l5792 2E44  
                                   l5784 2DD8                                     l5776 2D6A  
                                   l5768 2D24                                     l6904 602C  
                                   l6920 5A80                                     l7296 3EB0  
                                   l7288 3E56                                     l6808 54A2  
                                   l6816 5940                                     l8168 567E  
                                   l6832 563A                                     l6824 5600  
                                   l5872 53B6                                     l5864 5384  
                                   l5880 53CC                                     l5856 535E  
                                   l5848 533C                                     l5936 55FC  
                                   l5928 5594                                     l5952 4E74  
                                   l5944 4E16                                     l6496 1B3C  
                                   l6488 1AE8                                     l6584 4B1E  
                                   l6568 3D90                                     l6760 2102  
                                   l6736 1F54                                     l6728 1EEA  
                                   l6666 57B4                                     l6594 4966  
                                   l6682 581E                                     l6674 57C8  
                                   l5698 3350                                     l5794 2E52  
                                   l5786 2E0E                                     l5778 2D86  
                                   l6930 5AC2                                     l6922 5A92  
                                   l7298 3ECE                                     l6818 5948  
                                   l6834 5652                                     l6826 5604  
                                   l5882 53DC                                     l5874 53BE  
                                   l5866 538C                                     l5858 5362  
                                   l5890 54AA                                     l5954 4E82  
                                   l5946 4E44                                     l5962 5F5A  
                                   l5970 4CD2                                     l6498 1B42  
                                   l6586 4B30                                     l6578 4AC0  
                                   l6746 1FD8                                     l6690 1C34  
                                   l6668 57C4                                     l6596 4978  
                                   l6684 5830                                     l6676 57DA  
                                   l6916 5FC0                                     l6908 5F94  
                                   l5796 2E64                                     l5788 2E1C  
                                   l6940 46FC                                     l6932 5AD4  
                                   l6924 5AA4                                     l6828 560A  
                                   l6836 566A                                     l5884 53E4  
                                   l5876 53C0                                     l5868 539A  
                                   l5892 54B8                                     l5956 4ED2  
                                   l5948 4E54                                     l5964 5F70  
                                   l5980 4D28                                     l5972 4CE8  
                                   l6588 4B72                                     l6772 21CE  
                                   l6764 213A                                     l6748 2018  
                                   l6756 2090                                     l6692 1C5A  
                                   l6598 4980                                     l6678 57E6  
                                   l6686 583E                                     l5798 2E72  
                                   l6950 4758                                     l6942 470E  
                                   l6838 56A4                                     l5878 53C6  
                                   l5894 54C0                                     l5958 4ED8  
                                   l5966 5F80                                     l5982 4D38  
                                   l6790 2266                                     l6774 21F4  
                                   l6782 2224                                     l6766 2170  
                                   l6758 20B6                                     l6694 1C68  
                                   l6936 5AE0                                     l6928 5AB0  
                                   l5896 54C4                                     l5888 54A6  
                                   l5992 4D62                                     l5984 4D3C  
                                   l5976 4CFC                                     l6784 2232  
                                   l6776 2202                                     l6696 1C7A  
                                   l6890 6070                                     l6970 4824  
                                   l5898 54D2                                     l5994 4D6C  
                                   l5986 4D4A                                     l5978 4D26  
                                   l6778 2216                                     l6698 1C7E  
                                   l6884 6058                                     l6980 4006  
                                   l6964 47DA                                     l6956 4790  
                                   l6948 4746                                     l6892 6094  
                                   l6796 53EE                                     l5996 4D76  
                                   l6788 2240                                     l7940 273A  
                                   l6886 6058                                     l6990 4044  
                                   l6982 401C                                     l6974 3FA2  
                                   l6966 47EC                                     l6958 47A2  
                                   l6894 5E26                                     l6798 53F2  
                                   l7950 2776                                     l7942 273A  
                                   ?_pop 0001                                     l6888 6064  
                                   l6992 4076                                     l6976 3FB2  
                                   l6896 5D56                                     l7960 27CE  
                                   l7952 2782                                     l7944 273E  
                                   l6994 4078                                     l6986 4030  
                                   l6978 3FC0                                     l7970 2808  
                                   l7954 2788                                     l7962 27D6  
                                   l7946 2752                                     l6996 4084  
                                   l6988 4038                                     l7972 2818  
                                   l7964 27E8                                     l7956 27A4  
                                   l7948 2766                                     l6998 40C0  
                                   l7990 28A4                                     l7982 287A  
                                   l7974 2834                                     l7966 27F8  
                                   l7958 27BE                                     l7992 28C0  
                                   l7984 2898                                     l7968 27FC  
                                   l7976 2872                                     l7994 28D0  
                                   l7996 28E0                                     l7988 28A0  
                                   l7998 28F2                                     STR_1 102F  
                                   STR_2 103F                                     STR_4 1019  
                                   STR_5 103C                                     STR_6 101F  
                                   STR_7 1027                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u5000 2638                                     u5001 2634  
                                   u5010 264E                                     u5011 264A  
                                   u5020 2662                                     u5100 5E24  
                                   u5021 265E                                     u5101 5E20  
                                   u5030 267C                                     u5110 5F52  
                                   u5031 2678                                     u5111 5F4C  
                                   u5040 26B6                                     u5200 4198  
                                   u6000 4DA6                                     u5120 5F54  
                                   u5041 26B2                                     u5201 4194  
                                   u6001 4DA2                                     u5130 45CC  
                                   u5050 26C8                                     u6010 4DB6  
                                   u5131 45C8                                     u5051 26C4  
                                   u5211 41C2                                     u6011 4DB2  
                                   u5140 45EE                                     u5060 26D8  
                                   u5220 41E6                                     u5300 452C  
                                   u6100 5296                                     u5141 45EA  
                                   u5061 26D4                                     u5221 41E2  
                                   u5301 4528                                     u6101 5292  
                                   u6021 4FE0                                     u5070 26F8  
                                   u5230 4210                                     u5310 4574  
                                   u6110 52EC                                     u6030 5004  
                                   u5071 26F4                                     u5231 420C  
                                   u5311 4570                                     u6111 52E8  
                                   u6031 5000                                     u5400 315C  
                                   u5320 2FDE                                     u5080 270A  
                                   u5240 4250                                     u6120 52FC  
                                   u6200 4FC8                                     u6040 502E  
                                   u7000 3BC6                                     u5401 3158  
                                   u5321 2FDA                                     u5081 2706  
                                   u5241 424C                                     u6121 52F8  
                                   u6041 502A                                     u7001 3BC2  
                                   u5170 46CC                                     u5154 4616  
                                   u5410 317E                                     u5330 2FF0  
                                   u5090 2726                                     u5250 429A  
                                   u6130 5E84                                     u6210 5C08  
                                   u6050 506E                                     u7010 3BE2  
                                   u5171 46C6                                     u5155 4612  
                                   u5411 317A                                     u5331 2FEC  
                                   u5091 2722                                     u5251 4296  
                                   u6131 5E80                                     u6051 506A  
                                   u7011 3BDE                                     u5180 46CE  
                                   u5164 4678                                     u5500 328A  
                                   u5420 31A8                                     u5340 3000  
                                   u5260 4464                                     u4620 51AC  
                                   u4700 5FF2                                     u6140 4F1C  
                                   u6300 3AE8                                     u6220 5C1A  
                                   u7100 4B1E                                     u6060 50E8  
                                   u7020 3D2E                                     u5165 4674  
                                   u5501 3286                                     u5421 31A4  
                                   u5341 2FFC                                     u5261 4460  
                                   u4621 51A8                                     u4701 5FEE  
                                   u6301 3AE4                                     u6221 5C16  
                                   u7101 4B1A                                     u6061 50E4  
                                   u7021 3D2A                                     u5510 32A4  
                                   u5430 31CC                                     u5350 3044  
                                   u4710 2294                                     u5190 4166  
                                   u5270 4496                                     u4630 51BE  
                                   u6150 4F3A                                     u6310 3B3C  
                                   u6230 5CF8                                     u7110 4B30  
                                   u6070 5112                                     u7030 3D4C  
                                   u5511 32A0                                     u5431 31C8  
                                   u5351 3040                                     u4711 2290  
                                   u5191 4162                                     u5271 4492  
                                   u4631 51BA                                     u6151 4F36  
                                   u6231 5CF4                                     u7111 4B2C  
                                   u6071 510E                                     u7031 3D48  
                                   u5520 32EC                                     u5440 31E2  
                                   u5360 3056                                     u5600 2C38  
                                   u4800 23E8                                     u4720 22A6  
                                   u8000 33B4                                     u5280 44D4  
                                   u4640 51E6                                     u6400 3738  
                                   u6160 4F62                                     u6320 3B58  
                                   u6240 39EC                                     u7120 4B72  
                                   u6080 5140                                     u7040 3D66  
                                   u5521 32E8                                     u5441 31DE  
                                   u5361 3052                                     u5601 2C34  
                                   u4801 23E4                                     u4721 22A2  
                                   u8001 33B0                                     u5281 44D0  
                                   u4641 51E2                                     u6401 3734  
                                   u6161 4F5E                                     u6145 4F12  
                                   u6321 3B54                                     u6217 5BFE  
                                   u7121 4B6E                                     u6081 513C  
                                   u7041 3D62                                     u5530 331C  
                                   u5450 3200                                     u5370 3066  
                                   u5610 2C6E                                     u4810 2400  
                                   u4730 22B6                                     u8010 3402  
                                   u5290 44FE                                     u4650 521C  
                                   u6090 5274                                     u6410 3754  
                                   u6170 4F8C                                     u6330 3B94  
                                   u6250 3A1A                                     u7130 4B94  
                                   u7050 3D80                                     u7210 1C5A  
                                   u5531 3318                                     u5451 31FC  
                                   u5371 3062                                     u5611 2C6A  
                                   u4811 23FA                                     u4731 22B2  
                                   u8011 33FE                                     u5291 44FA  
                                   u4651 5218                                     u6091 5270  
                                   u6411 3750                                     u6171 4F88  
                                   u6331 3B90                                     u6315 3B32  
                                   u6251 3A16                                     u7051 3D7C  
                                   u7211 1C56                                     u4660 484C  
                                   u6340 5AFC                                     u7140 4978  
                                   u5540 334A                                     u5460 3220  
                                   u5380 30A6                                     u5700 2EF6  
                                   u5620 2C7E                                     u4900 24E4  
                                   u4820 2402                                     u4740 22F8  
                                   u8020 3426                                     u6500 393E  
                                   u6420 3782                                     u6260 3A3C  
                                   u7060 3D90                                     u7300 2018  
                                   u7220 1CB2                                     u4661 4848  
                                   u6341 5AF8                                     u7141 4974  
                                   u7205 582E                                     u5541 3346  
                                   u5461 321C                                     u5381 30A2  
                                   u5701 2EF2                                     u5621 2C7A  
                                   u4901 24E0                                     u4741 22F4  
                                   u8021 3422                                     u6501 393A  
                                   u6421 377E                                     u6261 3A38  
                                   u6245 39E2                                     u7125 4B62  
                                   u7061 3D8C                                     u7301 2014  
                                   u7221 1CAE                                     u4670 486E  
                                   u6350 5B1E                                     u7150 49D2  
                                   u5470 3232                                     u5390 30E6  
                                   u5710 2F3E                                     u5630 2DF8  
                                   u5550 2BB4                                     u4910 251C  
                                   u4830 242A                                     u4750 230E  
                                   u8030 35A0                                     u6510 3956  
                                   u6430 3790                                     u6190 4FC6  
                                   u7070 4AB4                                     u7310 20B6  
                                   u7230 1CF6                                     u4671 486A  
                                   u6351 5B1A                                     u7151 49CE  
                                   u7207 5830                                     u5471 322E  
                                   u5391 30E2                                     u5711 2F3A  
                                   u5551 2BB0                                     u4911 2518  
                                   u4831 2426                                     u4751 230A  
                                   u8031 359C                                     u6511 3952  
                                   u6431 378C                                     u6191 4FC0  
                                   u7127 4B58                                     u7071 4AB0  
                                   u7311 20B2                                     u7231 1CF2  
                                   u7160 5762                                     u6360 59B2  
                                   u5480 3260                                     u5720 2F6C  
                                   u5640 2E52                                     u5560 2BC6  
                                   u4920 2562                                     u4840 2448  
                                   u4760 2320                                     u8040 35C0  
                                   u6440 38BA                                     u5800 54B8  
                                   u6280 3AA8                                     u6600 1286  
                                   u6520 106A                                     u7080 4AF0  
                                   u7320 2170                                     u7240 1D50  
                                   u7161 575E                                     u6361 59AE  
                                   u5481 325C                                     u5721 2F68  
                                   u5641 2E4E                                     u5561 2BC2  
                                   u4921 255E                                     u4841 2444  
                                   u4761 231C                                     u8041 35BC  
                                   u6441 38B6                                     u5801 54B4  
                                   u6185 4F9E                                     u6281 3AA4  
                                   u6601 1282                                     u6521 1066  
                                   u7137 4B8A                                     u7321 216C  
                                   u7241 1D4C                                     u7170 5790  
                                   u5490 3276                                     u5730 2FA6  
                                   u5650 2E72                                     u5570 2BD6  
                                   u4930 2598                                     u4850 2468  
                                   u4770 2330                                     u8050 35F2  
                                   u6450 38D8                                     u6370 36F0  
                                   u5810 54D2                                     u6290 3ACC  
                                   u6610 1318                                     u6530 10B8  
                                   u7090 4B00                                     u7330 21F4  
                                   u7250 1D76                                     u7171 578C  
                                   u5491 3272                                     u5731 2FA2  
                                   u5651 2E6E                                     u5635 2DEE  
                                   u5571 2BD2                                     u4931 2594  
                                   u4851 2464                                     u4771 232C  
                                   u8051 35EE                                     u6451 38D4  
                                   u6371 36EA                                     u5811 54CE  
                                   u6275 3A50                                     u6611 1314  
                                   u6531 10B4                                     u7091 4AFC  
                                   u7331 21F0                                     u7251 1D72  
                                   u4684 4896                                     u7180 57C4  
                                   u7420 5FA4                                     u5660 2E84  
                                   u5580 2C16                                     u4940 25A8  
                                   u4860 2476                                     u4780 236C  
                                   u7500 47A2                                     u8060 369A  
                                   u7340 5404                                     u6460 38F2  
                                   u6380 36F2                                     u5740 533C  
                                   u5820 54EC                                     u5900 4E44  
                                   u6276 3A5A                                     u6700 1498  
                                   u6620 1388                                     u6540 10C8  
                                   u7260 1E2C                                     u4685 4892  
                                   u7181 57C0                                     u7421 5FA0  
                                   u5661 2E80                                     u5581 2C12  
                                   u4941 25A4                                     u4861 2472  
                                   u4781 2368                                     u7501 479E  
                                   u8061 3696                                     u7341 5400  
                                   u6461 38EE                                     u5741 5338  
                                   u5821 54E8                                     u5901 4E40  
                                   u6277 3A6A                                     u6701 1494  
                                   u6621 1384                                     u6541 10C4  
                                   u7261 1E28                                     u4694 48F8  
                                   u7190 57DA                                     u7430 5FB4  
                                   u5670 2EB2                                     u5590 2C28  
                                   u4950 25D4                                     u4870 2486  
                                   u4790 237A                                     u7510 47EC  
                                   u7350 5416                                     u6470 390C  
                                   u6390 3708                                     u5750 5356  
                                   u5830 550A                                     u5910 4E62  
                                   u6710 14AA                                     u6630 13AC  
                                   u6550 10DA                                     u7270 1E62  
                                   u4695 48F4                                     u7191 57D6  
                                   u7431 5FB0                                     u5671 2EAE  
                                   u5591 2C24                                     u4951 25D0  
                                   u4871 2482                                     u4791 2376  
                                   u7511 47E8                                     u7351 5412  
                                   u6471 3908                                     u6391 3704  
                                   u5751 5352                                     u5831 5506  
                                   u5911 4E5E                                     u6295 3AC2  
                                   u6711 14A6                                     u6631 13A8  
                                   u6551 10D6                                     u7087 4AE6  
                                   u7271 1E5E                                     u7600 4132  
                                   u7520 3FB2                                     u5680 2EC8  
                                   u4960 25E4                                     u4880 24B8  
                                   u7440 5A92                                     u7360 5438  
                                   u6480 391C                                     u5760 537C  
                                   u5840 5520                                     u5920 4E82  
                                   u6800 17A0                                     u6720 14B8  
                                   u6640 13C0                                     u6560 1122  
                                   u7280 1EFE                                     u7601 412E  
                                   u7521 3FAE                                     u5681 2EC4  
                                   u4961 25E0                                     u4881 24B4  
                                   u7441 5A8E                                     u7361 5434  
                                   u6481 3918                                     u5761 5378  
                                   u5841 551C                                     u5921 4E7E  
                                   u6801 179C                                     u6721 14B4  
                                   u6641 13BC                                     u6561 111E  
                                   u7281 1EFA                                     u7610 4140  
                                   u7530 3FC0                                     u5690 2EDC  
                                   u4970 2600                                     u4890 24C6  
                                   u7450 5AA4                                     u6490 392E  
                                   u5770 539A                                     u5850 5544  
                                   u5930 4ED2                                     u6810 17EA  
                                   u6730 14CE                                     u6650 13E2  
                                   u6570 114E                                     u7290 1FAE  
                                   u7611 413C                                     u7531 3FBC  
                                   u5691 2ED8                                     u4971 25FC  
                                   u4891 24C2                                     u7451 5AA0  
                                   u6491 392A                                     u5771 5396  
                                   u5851 5540                                     u5931 4ECE  
                                   u6811 17E6                                     u6731 14CA  
                                   u6651 13DE                                     u6571 114A  
                                   u7291 1FAA                                     u7540 401C  
                                   u4980 2610                                     u7460 5AC2  
                                   u7380 5940                                     u5780 53B6  
                                   u5860 5584                                     u5940 5F70  
                                   u6900 1A36                                     u6820 1810  
                                   u6740 14DC                                     u6660 140A  
                                   u6580 11D8                                     u7620 5A74  
                                   u7541 4018                                     u4981 260C  
                                   u7461 5ABE                                     u7381 593C  
                                   u5781 53B2                                     u5861 5580  
                                   u5941 5F6C                                     u6901 1A32  
                                   u6821 180C                                     u6741 14D8  
                                   u6661 1406                                     u6581 11D4  
                                   u7621 5A70                                     u7550 4072  
                                   u4990 2622                                     u7470 5AD4  
                                   u7374 548E                                     u7630 5D22  
                                   u5790 53DC                                     u5870 55C2  
                                   u5950 4CE8                                     u6910 1A52  
                                   u6830 18B4                                     u6750 1506  
                                   u6670 1420                                     u6590 1204  
                                   u7551 406E                                     u4991 261E  
                                   u7471 5AD0                                     u7375 548A  
                                   u7631 5D1E                                     u5791 53D8  
                                   u5871 55BE                                     u5951 4CE4  
                                   u6911 1A4E                                     u6831 18B0  
                                   u6751 1502                                     u6671 141C  
                                   u6591 1200                                     u7560 40BC  
                                   u7480 470E                                     u7800 4C76  
                                   u7640 56BA                                     u7720 42F6  
                                   u5880 55F6                                     u5960 4D1C  
                                   u6920 1A64                                     u6840 18C6  
                                   u6760 164C                                     u6680 143C  
                                   u7561 40B8                                     u7481 470A  
                                   u7801 4C72                                     u7641 56B6  
                                   u7721 42F2                                     u5881 55F2  
                                   u6921 1A60                                     u6841 18C2  
                                   u6761 1648                                     u6681 1438  
                                   u7570 40DA                                     u7490 4758  
                                   u7810 4CBC                                     u7650 5706  
                                   u7730 4338                                     u5890 4E06  
                                   u5970 4D4A                                     u6930 1A74  
                                   u6850 18D8                                     u6770 16B2  
                                   u6690 1472                                     u7571 40D6  
                                   u7491 4754                                     u7811 4CB8  
                                   u7731 4334                                     u5891 4E02  
                                   u5971 4D46                                     u6931 1A70  
                                   u6851 18D4                                     u6771 16AE  
                                   u6691 146E                                     u7580 40EA  
                                   u7900 3DFC                                     u7820 4CCE  
                                   u7660 5734                                     u7740 43AA  
                                   u5980 4D5E                                     u6940 1AAA  
                                   u6860 18E6                                     u6780 16F8  
                                   u8700 27E8                                     u7581 40E6  
                                   u7901 3DF8                                     u7821 4CCA  
                                   u7741 43A6                                     u5981 4D5A  
                                   u5965 4D12                                     u6941 1AA6  
                                   u6861 18E2                                     u6781 16F4  
                                   u8701 27E4                                     u7590 40F8  
                                   u7910 3E1C                                     u7670 5744  
                                   u7830 5854                                     u7750 43F0  
                                   u5990 4D86                                     u6950 1AD8  
                                   u6870 1900                                     u6790 1706  
                                   u8710 27F8                                     u7591 40F4  
                                   u7911 3E18                                     u7671 5740  
                                   u7831 5850                                     u7751 43EC  
                                   u5991 4D82                                     u6951 1AD4  
                                   u6871 18FC                                     u6791 1702  
                                   u8711 27F4                                     u7920 3E2E  
                                   u7760 4450                                     u6960 1B5A  
                                   u6880 190E                                     u8800 2AC2  
                                   u8720 2898                                     u7921 3E2A  
                                   u7657 56FC                                     u7761 444C  
                                   u6961 1B56                                     u6881 190A  
                                   u8801 2ABE                                     u8721 2894  
                                   u7930 3E7A                                     u7770 4BD2  
                                   u7850 58CA                                     u6970 1B74  
                                   u6890 1966                                     u8730 28C0  
                                   u7931 3E76                                     u7771 4BCE  
                                   u7667 572A                                     u7851 58C6  
                                   u6971 1B70                                     u6891 1962  
                                   u8731 28BC                                     u7940 3E98  
                                   u7780 4BE4                                     u6980 1B8C  
                                   u8740 28D0                                     u7941 3E94  
                                   u7781 4BE0                                     u7845 58A4  
                                   u6981 1B88                                     u8741 28CC  
                                   u7950 3EE6                                     u7790 4C1A  
                                   u6990 1BE8                                     u8750 28E0  
                                   u7951 3EE2                                     u7791 4C16  
                                   u7847 58A6                                     u6991 1BE4  
                                   u8751 28DC                                     u7960 3F24  
                                   u8760 28F2                                     u8680 2766  
                                   u7961 3F20                                     u7865 591A  
                                   u8761 28EE                                     u8817 27B0  
                                   u8681 2762                                     u7970 3F54  
                                   u8770 2902                                     u8690 2776  
                                   u7971 3F50                                     u8827 4C34  
                                   u7867 591C                                     u8771 28FE  
                                   u8691 2772                                     u7980 3F8E  
                                   u8780 29AE                                     u8837 49D8  
                                   u7981 3F8A                                     u8781 29AA  
                                   u7990 33A0                                     u8790 29BE  
                                   u8847 49F6                                     u7991 339C  
                                   u8791 29BA                                     u8857 4A10  
                                   u8867 5EC4                  ??_application_intialize 0019  
               _RB4_InterruptHandler_LOW 011C                                     abs@a 0013  
                                   _dbuf 0127           gpio_pin_read_logic@_pin_config 0001  
                                   _flag 00F3                                     _main 273A  
                                   _dtoa 36C0                                     _prec 00ED  
                                   _nout 010C                 _RB7_InterruptHandler_LOW 0110  
                                   pad@i 0018                                     pad@p 0015  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   indf0 000FEF                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   pad@w 001A                                     fsr2l 000FD9  
                                   _push 6000                   __end_of_led_initialize 5842  
                                   _utoa 3BB6        lcd_4bit_send_char_data_pos@column 001D  
                          ___fpclassifyf 4EDC                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
                        ___fldiv@new_exp 0012                            ?_led_turn_off 000B  
                           ___param_bank 000000                        initialize_t@stack 0001  
                       evaluatePostfix@i 00E5                    _lcd_4bit_send_command 59A0  
                                  ??_abs 0015                     _gpio_pin_write_logic 4836  
         lcd_4bit_send_string_pos@column 001D                                    ??_pad 0017  
                evaluatePostfix@operand1 0084                  evaluatePostfix@operand2 0080  
                                  ??_pop 0003                    lcd_4bit_intialize@lcd 0013  
                  lcd_4bit_intialize@ret 0018                            ___fltol@sign1 0009  
                        __end_of___aodiv 42DC                          __end_of___fladd 273A  
                                  ?_main 0001                                    ?_dtoa 001C  
                        __end_of___aomod 45B6                          __end_of___fldiv 335E  
                        __end_of___awdiv 53EE                          __end_of___flneg 5F92  
                                  STR_10 1023                                    STR_11 102B  
                                  STR_20 1039                                    STR_30 1030  
                                  STR_14 1033                                    STR_23 1036  
                                  STR_16 1033                                    STR_25 1036  
                                  STR_18 1039                          __end_of___awmod 5556  
                        __end_of___flmul 2FC4                          __end_of___flsub 5DE2  
                        __end_of___fltol 4DD8                                    ?_push 0001  
                                  ?_utoa 001C                          __end_of___lodiv 50CA  
                        ___awdiv@divisor 0003                          __end_of___lomod 519A  
                        ___awdiv@counter 0005                                    _RCREG 000FAE  
                    relay_turn_off@F3049 00F5                             vfpfcnvrt@fmt 0082  
                           vfpfcnvrt@llu 009C                                    _SPBRG 000FAF  
                                  _PORTA 000F80                                    _PORTB 000F81  
                                  _PORTC 000F82                                    _PORTD 000F83  
                                  _PORTE 000F84                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                                  _TXREG 000FAD            ?_lcd_4bits_send_enable_signal 000B  
               __end_of_keypad_get_value 4CD2                                    _lcd_1 01BB  
                                  _led_1 00FE                                    _flags 00EF  
                                  _infix 0264                                    _fputc 519A  
                                  _fputs 5DE2                                    _num_1 0108  
                                  _pop_t 5D56                                    pad@fp 0011  
                                  _width 00EB                                    _putch 60B0  
                                  main@i 00E9                                    dtoa@d 001E  
                                  dtoa@i 003E                                    dtoa@n 0036  
                                  dtoa@p 0030                                    dtoa@s 0034  
                                  dtoa@w 0032                          __end_of_isupper 5F5A  
                                  tablat 000FF5                                    push@c 0003  
                                  utoa@d 001E                                    utoa@i 003A  
                                  utoa@n 0032                                    utoa@p 002E  
                                  utoa@w 0030                                    status 000FD8  
                        __end_of_sprintf 5CCA                           ?___fpclassifyf 0001  
                        __end_of_tolower 5D10                          __end_of_strncmp 4BB0  
                        ?_led_initialize 000F                         ___lodiv@dividend 0001  
          keypad_get_value@l_row_counter 0014                           ??_led_turn_off 000D  
      keypad_get_value@l_columns_counter 0015                          __initialization 5C1C  
                    keypad_get_value@ret 0011                             __end_of_main 2B9A  
                           __end_of_dtoa 39A4                    ?_gpio_pin_write_logic 0001  
                           __end_of_push 602C                             __end_of_utoa 3DBA  
               gpio_pin_read_logic@logic 0003                            _lat_registers 0190  
                                 ??_main 00E7                                   ??_dtoa 0026  
                                 ??_push 0004                                   ??_utoa 0026  
                          __activetblptr 000003                         led_turn_on@F3050 00FA  
                       ___lodiv@quotient 0011                                   ?_fputc 0001  
                                 ?_fputs 000A                         ___awdiv@dividend 0001  
                                 ?_pop_t 0001                                   ?_putch 0001  
                                 _SPBRGH 000FB0                                   _SSPADD 000FC8  
                                 _SSPBUF 000FC9                keypad_get_value@l_counter 0013  
                       __end_of___xxtofl 4154         __end_of_lcd_4bit_send_string_pos 5748  
                          ?_initialize_t 0001                   ?_lcd_4bit_send_command 000F  
                           vfprintf@cfmt 007E                                   ___flge 4DD8  
                                 ___fleq 5556                                ??___aodiv 0011  
                              ??___fladd 0030                                ??___aomod 0011  
                              ??___fldiv 0009                                   _doMath 46FA  
                              ??___awdiv 0005                                ??___flneg 0005  
                              ??___awmod 0005                                ??___flmul 0017  
                              ??___flsub 0040                                ??___fltol 0005  
                              ??___lodiv 0011                                ??___lomod 0011  
                                 _efgtoa 1044                                   _floorf 39A4  
                                 _memset 42DC                                   clear_0 5C54  
                                 clear_1 5C60                                   clear_2 5C6C  
                  led_initialize@pin_obj 0013                         ___awdiv@quotient 0007  
                        ___awmod@divisor 0003                                   isa$std 000001  
                                 _result 0182                          ___awmod@counter 0005  
                                 pad@buf 0013                                   _push_t 5E26  
                                 dtoa@fp 001C                                   _strcpy 5BBE  
                                 _strlen 5FCA  gpio_pin_direction_intialize@_pin_config 0001  
                    infixToPostfix@infix 0006                                   fputc@c 0001  
                                 fputs@c 000E                                   fputs@i 000F  
                                 fputs@s 000A                          ___fpclassifyf@e 0009  
                        ___fpclassifyf@u 000B                          ___fpclassifyf@x 0001  
                           __mediumconst 0000                                   tblptrh 000FF7  
                              ??_isupper 0003                                   tblptrl 000FF6  
                                 tblptru 000FF8                                   putch@c 0001  
                       __end_of_vfprintf 5A7E                                   utoa@fp 001C  
                              ??_sprintf 0080                                ??_tolower 0009  
                              ??_strncmp 0007                               ___flge@ff1 0028  
                             ___flge@ff2 002C                          ??___fpclassifyf 0005  
                           ___xxtofl@arg 000B                             ___xxtofl@exp 000A  
                           ___xxtofl@val 0001                               ___fleq@ff1 0001  
                             ___fleq@ff2 0005                               __accesstop 0080  
                __end_of__initialization 5C72                               ___flneg@f1 0001  
             lcd_4bits_set_cursor@column 0016                            ___rparam_used 000001  
                             ___fltol@f1 0001                         ??_lcd_send_4bits 000E  
                         ??_initialize_t 0003                        led_initialize@led 000F  
                      led_initialize@ret 0012                  _lcd_4bit_send_char_data 592E  
                 ??_gpio_pin_write_logic 0004                           __pcstackCOMRAM 0001  
                  evaluatePostfix@result 0053                             __pidataBANK0 60B2  
                           __pidataBANK1 5EE6                            __end_of_fputc 5264  
                          __end_of_fputs 5E26                            __end_of_pop_t 5D9C  
                          __end_of_putch 60B2                 lcd_4bit_send_command@lcd 000F  
                     evaluatePostfix@num 008E                 lcd_4bit_send_command@ret 0012  
                   __end_of_led_turn_off 592E             keypad_initialize@row_counter 0014  
           ?_lcd_4bit_send_char_data_pos 001A                                  ??_fputc 0005  
                                ??_fputs 000E                                  ??_pop_t 0005  
                                ??_putch 0001                               __pbssBANK0 00EB  
                             __pbssBANK1 0100                               __pbssBANK2 0200  
                  _INT0_InterruptHandler 0124          lcd_4bits_send_enable_signal@lcd 000B  
           __end_of_lcd_4bits_set_cursor 56A8          lcd_4bits_send_enable_signal@ret 000E  
          __end_of_application_intialize 60B0                                  ?___flge 0028  
                                ?___fleq 0001                                  ?_doMath 0040  
                      led_turn_off@F3055 00F9                                  ?_efgtoa 0040  
                                ?_floorf 001A                                  ?_memset 0001  
                                ?_push_t 0049                                  ?_strcpy 0001  
                                ?_strlen 0001                                ?___xxtofl 0001  
              ?_lcd_4bit_send_string_pos 001A                _RB6_InterruptHandler_HIGH 0116  
                   led_turn_toggle@F3060 00F8              evaluatePostfix@isFractional 0088  
                      ?_keypad_get_value 000B                         ??_led_initialize 0011  
                       ___lomod@dividend 0001                       ??_keypad_get_value 000F  
                             _btn_values 1001                           _tris_registers 019A  
               _RB6_InterruptHandler_LOW 0114                ??_lcd_4bit_send_char_data 0012  
                                __Hparam 0000                                  __Lparam 0000  
                    _ecu_layer_intialize 6058                               _equal_flag 00F1  
                                ___aodiv 4154                                  ___fladd 227A  
                                ___aomod 4452                                  ___fldiv 2FC4  
                    _gpio_pin_read_logic 53EE                                  ___awdiv 532A  
                                ___flneg 5F5A                                  ___awmod 54A6  
                                ___flmul 2B9A                                  ___flsub 5D9C  
                                ___fltol 4CD2                                  ___lodiv 4FDA  
                                ___lomod 50CA                                ?_vfprintf 00AC  
       keypad_initialize@columns_counter 0015                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 5B56                                  __pcinit 5C1C  
                                __ramtop 1000                               _initialize 607E  
                                __ptext0 273A                                  __ptext1 5C78  
                                __ptext2 5A12                                  __ptext3 1C34  
                                __ptext4 3BB6                                  __ptext5 50CA  
                                __ptext6 4FDA                                  __ptext7 4A8A  
                                __ptext8 1044                                  __ptext9 5CCA  
                              _T0CONbits 000FD5                            ??_check_digit 0003  
                                _counter 00F4                               ??___xxtofl 0005  
                       ___awmod@dividend 0001                     ?_ecu_layer_intialize 0001  
                   __end_of_initialize_t 60AA                                  _isupper 5F22  
                                efgtoa@c 0046                                  efgtoa@d 005E  
                                efgtoa@e 0076                                  efgtoa@f 0042  
                                efgtoa@g 0072                                  efgtoa@h 0068  
                                efgtoa@i 0070                                  efgtoa@l 006C  
                                efgtoa@m 0058                                  efgtoa@n 0078  
                                efgtoa@p 0062                                  efgtoa@t 0052  
                                efgtoa@u 007A                                  efgtoa@w 0064  
                lcd_4bits_set_cursor@lcd 0013                  lcd_4bits_set_cursor@ret 0019  
                lcd_4bits_set_cursor@row 0015                           _infixToPostfix 3DBA  
                                _postfix 0200                     ?_gpio_pin_read_logic 0001  
                                _sprintf 5C78                                  _tolower 5CCA  
                                _sup_pos 01AC                                  _strncmp 4A8A  
                   end_of_initialization 5C72                        lcd_send_4bits@lcd 000B  
                      lcd_send_4bits@ret 000E                                  floorf@e 0028  
                                floorf@m 0024                                  floorf@u 002A  
                                floorf@x 001A                                  fputc@fp 0003  
                                memset@c 0003                                  memset@k 0009  
                                memset@n 0005                                  memset@s 000B  
                                fputs@fp 000C               __end_of_lcd_4bit_intialize 4A8A  
                ??_lcd_4bit_send_command 0012                    gpio_pin_intialize@ret 000E  
                             _precedence 5A7E                      led_turn_off@pin_obj 000E  
                      __end_of_vfpfcnvrt 227A                               efgtoa@mode 0067  
                             efgtoa@sign 0060                                _RCSTAbits 000FAB  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                                  push_t@c 004B  
                             _motor_pin1 00FC                               _motor_pin2 0126  
                             ??_vfprintf 007E                                  strcpy@d 0009  
                                strlen@a 0003                                  strcpy@s 0007  
                                strlen@s 0001                        ??_evaluatePostfix 0055  
        __end_of_lcd_4bit_send_char_data 59A0                    _INT1_InterruptHandler 0122  
          gpio_pin_intialize@_pin_config 000B                     _lcd_4bits_set_cursor 5600  
                            ___fladd@grs 0037             keypad_get_value@column_logic 0012  
             lcd_4bit_send_char_data@lcd 000F                    ??_ecu_layer_intialize 0019  
             lcd_4bit_send_char_data@ret 0012                   __end_of_infixToPostfix 3FA0  
   __end_of_gpio_pin_direction_intialize 46FA             _gpio_pin_direction_intialize 45B6  
                          ___xxtofl@sign 0009                                _TRISCbits 000F94  
                  ??_gpio_pin_read_logic 0005                              ___fldiv@grs 0014  
                            ___fldiv@rem 000D                      __end_of_check_digit 5FCA  
        lcd_4bit_send_char_data_pos@data 001E                              ___flmul@grs 001C  
                              _TXSTAbits 000FAC                             _led_turn_off 58B8  
                 evaluatePostfix@current 0092                       relay_turn_on@F3044 00F6  
            lcd_4bit_send_string_pos@lcd 001A              lcd_4bit_send_string_pos@ret 0020  
            lcd_4bit_send_string_pos@row 001C              lcd_4bit_send_string_pos@str 001E  
                  keypad_get_value@value 000D                           __end_of___flge 4EDC  
                         __end_of___fleq 5600                   evaluatePostfix@postfix 0051  
                            vfpfcnvrt@ap 0084                              vfpfcnvrt@ct 00A8  
                            vfpfcnvrt@fp 0080                              vfpfcnvrt@ll 0094  
                         __end_of_doMath 4836                              _BAUDCONbits 000FB8  
                         __end_of_efgtoa 1C34                              ?_initialize 0001  
                         __end_of_floorf 3BB6                               floorf@F526 0100  
                         __end_of_memset 4452                    ?_lcd_4bits_set_cursor 0013  
                         __end_of_push_t 5E6A                           __end_of_strcpy 5C1C  
                         __end_of_strlen 6000                          ?_infixToPostfix 0006  
                    start_initialization 5C1C                          ___lodiv@divisor 0009  
                          ??_led_turn_on 000D                          ___lodiv@counter 0019  
                            __end_of_abs 5EAA                              __end_of_pad 532A  
                            __end_of_pop 6058            ?_gpio_pin_direction_intialize 0001  
                  __end_of___fpclassifyf 4FDA                          led_turn_off@led 000B  
                            ?_precedence 0001                              vfprintf@fmt 00AE  
                            push_t@stack 0049                                 ??___flge 0030  
                               ??___fleq 0009                                 ??_doMath 0048  
                               ??_efgtoa 0047                              __pdataBANK0 00FF  
                            __pdataBANK1 0186                                 ??_floorf 001E  
                               ??_memset 0007                               memset@dest 0001  
           lcd_4bit_send_command@command 0011                                 ??_push_t 004F  
                               ??_strcpy 0005                                 ??_strlen 0003  
                              ___fladd@a 002C                                ___fladd@b 0028  
                              ___fldiv@a 0005                                ___fldiv@b 0001  
                            _check_digit 5F92                                ___flmul@a 0013  
                              ___flmul@b 000F                                ___flsub@a 003C  
                              ___flsub@b 0038                            __pcstackBANK0 0080  
                       ___aodiv@dividend 0001                             check_digit@c 0003  
                    __end_of_led_turn_on 58B8                    _INT2_InterruptHandler 0120  
         ??_lcd_4bits_send_enable_signal 000D          gpio_pin_direction_intialize@ret 0009  
                            _efgtoa$2545 004E                              _efgtoa$2546 0050  
                            _efgtoa$2538 004C                    _application_intialize 60AA  
                              _dtoa$2514 002E                             _initialize_t 6094  
                               ?___aodiv 0001                                 ?___fladd 0028  
                               ?___aomod 0001          gpio_pin_write_logic@_pin_config 0001  
                               ?___fldiv 0001                                 ?___awdiv 0001  
                       ___aodiv@quotient 0013                                 ?___flneg 0001  
                               ?___awmod 0001                                 ?___flmul 000F  
                               ?___flsub 0038                                 ?___fltol 0001  
                               ?___lodiv 0001                                 ?___lomod 0001  
              gpio_pin_write_logic@logic 0003                   ??_lcd_4bits_set_cursor 0017  
                        ___lomod@divisor 0009                              __smallconst 1000  
              _RB4_InterruptHandler_HIGH 011E                          ___lomod@counter 0011  
                              doMath@op1 0040                                doMath@op2 0044  
              _RB7_InterruptHandler_HIGH 0112                                 ?_isupper 0001  
            infixToPostfix@operatorStack 0012                                 ?_sprintf 00B2  
                               ?_tolower 0007                       _gpio_pin_intialize 5AEA  
                               ?_strncmp 0001           ??_gpio_pin_direction_intialize 0003  
               _RB5_InterruptHandler_LOW 0118                                 _RB4_Flag 01B0  
                               _RB5_Flag 01AF                                 _RB6_Flag 01AE  
                               _RB7_Flag 01AD                      ?_gpio_pin_intialize 000B  
                               _PIE1bits 000F9D                               pop_t@stack 0001  
                        _evaluatePostfix 335E            __end_of_lcd_4bit_send_command 5A12  
                               _PIR1bits 000F9E                       led_turn_on@pin_obj 000E  
                              _operators 01A4                       _lcd_4bit_intialize 4962  
                              _vfpfcnvrt 1C34                 _lcd_4bit_send_string_pos 56A8  
                        initialize@stack 0001                     ??_gpio_pin_intialize 000D  
         lcd_4bit_send_char_data_pos@lcd 001A           lcd_4bit_send_char_data_pos@ret 001F  
         lcd_4bit_send_char_data_pos@row 001C                      ?_lcd_4bit_intialize 0013  
                            _led_turn_on 5842      __end_of_lcd_4bit_send_char_data_pos 5D56  
            _lcd_4bit_send_char_data_pos 5D10                               vfpfcnvrt@c 00AB  
                             vfpfcnvrt@f 00A4                  gpio_pin_write_logic@ret 000A  
               ?_lcd_4bit_send_char_data 000F                                copy_data0 5C30  
                      _keypad_initialize 5748              evaluatePostfix@operandStack 0093  
                     ?_keypad_initialize 000F                   gpio_pin_read_logic@ret 000A  
          ??_lcd_4bit_send_char_data_pos 001F                   ?_application_intialize 0001  
                   ??_lcd_4bit_intialize 0015                           led_turn_on@led 000B  
                               __Hrparam 0000                               vfprintf@ap 00B0  
                               __Lrparam 0000                               vfprintf@fp 00AC  
                    ??_keypad_initialize 0011              __end_of_ecu_layer_intialize 607E  
                             ?_vfpfcnvrt 0080                         ??_infixToPostfix 000A  
                           ??_initialize 0003                          ___aodiv@divisor 0009  
                     __end_of_btn_values 1019                          ___aodiv@counter 0011  
            __end_of_gpio_pin_read_logic 54A6                       ___fpclassifyf@F465 0104  
            keypad_get_value@_keypad_obj 000B                               sprintf@fmt 00B4  
                        infixToPostfix@i 000E                          infixToPostfix@j 0010  
                               ___xxtofl 3FA0                __end_of_keypad_initialize 57C8  
                               __ptext10 5F22                                 __ptext11 5BBE  
                               __ptext20 36C0                                 __ptext12 39A4  
                               __ptext21 5264                                 __ptext13 4EDC  
                               __ptext30 5842                                 __ptext22 5FCA  
                               __ptext14 4CD2                                 __ptext31 58B8  
                               __ptext23 5DE2                                 __ptext15 5F5A  
                               __ptext40 5A7E                                 __ptext32 56A8  
                               __ptext24 519A                                 __ptext16 4DD8  
                               __ptext41 602C                                 __ptext33 5D10  
                               __ptext25 60B0                                 __ptext17 5556  
                               __ptext50 2B9A                                 __ptext42 607E  
                               __ptext34 5600                                 __ptext26 5E6A  
                               __ptext18 54A6                                 __ptext51 2FC4  
                               __ptext43 335E                                 __ptext35 592E  
                               __ptext27 4452                                 __ptext19 532A  
                               __ptext60 5EAA                                 __ptext52 5F92  
                               __ptext44 5E26                                 __ptext36 4BB0  
                               __ptext28 4154                                 __ptext61 5748  
                               __ptext53 3FA0                                 __ptext45 5D56  
                               __ptext37 53EE                                 __ptext29 42DC  
                               __ptext62 5AEA                                 __ptext54 60AA  
                               __ptext46 6094                                 __ptext38 3DBA  
                               __ptext63 4836                                 __ptext55 6058  
                               __ptext47 46FA                                 __ptext39 6000  
                               __ptext64 45B6                                 __ptext56 57C8  
                               __ptext48 5D9C                                 __ptext57 4962  
                               __ptext49 227A                                 __ptext58 59A0  
                               __ptext59 5B56                  __end_of_evaluatePostfix 36C0  
                           precedence@op 0003                                 doMath@op 0048  
                             strcpy@dest 0001                                 _keypad_1 01B1  
                     __end_of_initialize 6094                             ??_precedence 0003  
                       _keypad_get_value 4BB0                                 efgtoa@fp 0040  
                               efgtoa@ne 0056                                 efgtoa@pp 0054  
                               efgtoa@ou 005A                                 isa$xinst 000000  
                               _vfprintf 5A12      lcd_4bit_intialize@data_bins_counter 0017  
                         _lcd_send_4bits 5B56                         ___aomod@dividend 0001  
                              push@stack 0001                             ?_check_digit 0001  
                  infixToPostfix@current 000D             __end_of_gpio_pin_write_logic 4962  
                     __end_of_precedence 5AEA                              _res_counter 00F2  
                              sprintf@ap 00BA                    infixToPostfix@postfix 0008  
                               pop@stack 0001             keypad_initialize@_keypad_obj 000F  
                              strcpy@src 0003                                 isupper@c 0001  
                              strncmp@_l 0001                                strncmp@_r 0003  
                            efgtoa@nmode 0066                   __end_of_lcd_send_4bits 5BBE  
                        ___aomod@divisor 0009                              ??_vfpfcnvrt 0086  
                        ___aomod@counter 0011                                 sprintf@f 00BC  
                               tolower@c 0007                                 sprintf@s 00B2  
                         _port_registers 0186                                 strncmp@l 0008  
                               strncmp@n 0005                                 strncmp@r 000A  
                            _SSPCON1bits 000FC6                              _SSPCON2bits 000FC5  
                          ___fladd@signs 0034                             ___aodiv@sign 0012  
                       ?_evaluatePostfix 0051                             ___fladd@aexp 0035  
                           ___fladd@bexp 0036              lcd_4bit_send_char_data@data 0011  
                           ___aomod@sign 0012               ??_lcd_4bit_send_string_pos 0020  
                         _led_initialize 57C8  
